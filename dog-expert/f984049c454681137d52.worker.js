/*! For license information please see f984049c454681137d52.worker.js.LICENSE.txt */
!function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=244)}([function(e,t,n){"use strict";n.r(t),n.d(t,"AdadeltaOptimizer",(function(){return et})),n.d(t,"AdagradOptimizer",(function(){return nt})),n.d(t,"AdamOptimizer",(function(){return st})),n.d(t,"AdamaxOptimizer",(function(){return ut})),n.d(t,"MomentumOptimizer",(function(){return lt})),n.d(t,"Optimizer",(function(){return Qe})),n.d(t,"RMSPropOptimizer",(function(){return dt})),n.d(t,"SGDOptimizer",(function(){return ct})),n.d(t,"Tensor",(function(){return Q.a})),n.d(t,"TensorBuffer",(function(){return Q.b})),n.d(t,"Variable",(function(){return Q.c})),n.d(t,"Rank",(function(){return ht.a})),n.d(t,"sumOutType",(function(){return ht.b})),n.d(t,"upcastType",(function(){return ht.c})),n.d(t,"abs",(function(){return pt.b})),n.d(t,"acos",(function(){return pt.c})),n.d(t,"acosh",(function(){return pt.d})),n.d(t,"add",(function(){return pt.e})),n.d(t,"addN",(function(){return pt.f})),n.d(t,"all",(function(){return pt.g})),n.d(t,"any",(function(){return pt.h})),n.d(t,"argMax",(function(){return pt.i})),n.d(t,"argMin",(function(){return pt.j})),n.d(t,"asin",(function(){return pt.k})),n.d(t,"asinh",(function(){return pt.l})),n.d(t,"atan",(function(){return pt.m})),n.d(t,"atan2",(function(){return pt.n})),n.d(t,"atanh",(function(){return pt.o})),n.d(t,"avgPool",(function(){return pt.p})),n.d(t,"avgPool3d",(function(){return pt.q})),n.d(t,"basicLSTMCell",(function(){return pt.r})),n.d(t,"batchToSpaceND",(function(){return pt.w})),n.d(t,"batchNorm",(function(){return pt.s})),n.d(t,"batchNorm2d",(function(){return pt.t})),n.d(t,"batchNorm3d",(function(){return pt.u})),n.d(t,"batchNorm4d",(function(){return pt.v})),n.d(t,"bincount",(function(){return pt.x})),n.d(t,"broadcastTo",(function(){return pt.z})),n.d(t,"buffer",(function(){return pt.A})),n.d(t,"cast",(function(){return pt.B})),n.d(t,"ceil",(function(){return pt.C})),n.d(t,"clipByValue",(function(){return pt.D})),n.d(t,"clone",(function(){return pt.E})),n.d(t,"complex",(function(){return pt.F})),n.d(t,"concat",(function(){return pt.G})),n.d(t,"concat1d",(function(){return pt.H})),n.d(t,"concat2d",(function(){return pt.I})),n.d(t,"concat3d",(function(){return pt.J})),n.d(t,"concat4d",(function(){return pt.K})),n.d(t,"conv1d",(function(){return pt.L})),n.d(t,"conv2d",(function(){return pt.M})),n.d(t,"conv2dTranspose",(function(){return pt.N})),n.d(t,"conv3d",(function(){return pt.O})),n.d(t,"conv3dTranspose",(function(){return pt.P})),n.d(t,"cos",(function(){return pt.Q})),n.d(t,"cosh",(function(){return pt.R})),n.d(t,"cumsum",(function(){return pt.T})),n.d(t,"denseBincount",(function(){return pt.U})),n.d(t,"depthToSpace",(function(){return pt.V})),n.d(t,"depthwiseConv2d",(function(){return pt.W})),n.d(t,"diag",(function(){return pt.X})),n.d(t,"dilation2d",(function(){return pt.Y})),n.d(t,"div",(function(){return pt.Z})),n.d(t,"divNoNan",(function(){return pt.ab})),n.d(t,"dot",(function(){return pt.bb})),n.d(t,"elu",(function(){return pt.db})),n.d(t,"equal",(function(){return pt.fb})),n.d(t,"erf",(function(){return pt.gb})),n.d(t,"exp",(function(){return pt.hb})),n.d(t,"expandDims",(function(){return pt.ib})),n.d(t,"expm1",(function(){return pt.jb})),n.d(t,"eye",(function(){return pt.kb})),n.d(t,"fill",(function(){return pt.mb})),n.d(t,"floor",(function(){return pt.nb})),n.d(t,"floorDiv",(function(){return pt.ob})),n.d(t,"gather",(function(){return pt.qb})),n.d(t,"greater",(function(){return pt.sb})),n.d(t,"greaterEqual",(function(){return pt.tb})),n.d(t,"imag",(function(){return pt.vb})),n.d(t,"isFinite",(function(){return pt.zb})),n.d(t,"isInf",(function(){return pt.Ab})),n.d(t,"isNaN",(function(){return pt.Bb})),n.d(t,"leakyRelu",(function(){return pt.Cb})),n.d(t,"less",(function(){return pt.Db})),n.d(t,"lessEqual",(function(){return pt.Eb})),n.d(t,"linspace",(function(){return pt.Gb})),n.d(t,"localResponseNormalization",(function(){return pt.Hb})),n.d(t,"log",(function(){return pt.Ib})),n.d(t,"log1p",(function(){return pt.Jb})),n.d(t,"logSigmoid",(function(){return pt.Kb})),n.d(t,"logSoftmax",(function(){return pt.Lb})),n.d(t,"logSumExp",(function(){return pt.Mb})),n.d(t,"logicalAnd",(function(){return pt.Nb})),n.d(t,"logicalNot",(function(){return pt.Ob})),n.d(t,"logicalOr",(function(){return pt.Pb})),n.d(t,"logicalXor",(function(){return pt.Qb})),n.d(t,"matMul",(function(){return pt.Sb})),n.d(t,"max",(function(){return pt.Tb})),n.d(t,"maxPool",(function(){return pt.Ub})),n.d(t,"maxPool3d",(function(){return pt.Vb})),n.d(t,"maxPoolWithArgmax",(function(){return pt.Wb})),n.d(t,"maximum",(function(){return pt.Xb})),n.d(t,"mean",(function(){return pt.Yb})),n.d(t,"min",(function(){return pt.Zb})),n.d(t,"minimum",(function(){return pt.ac})),n.d(t,"mirrorPad",(function(){return pt.bc})),n.d(t,"mod",(function(){return pt.cc})),n.d(t,"moments",(function(){return pt.dc})),n.d(t,"mul",(function(){return pt.fc})),n.d(t,"multiRNNCell",(function(){return pt.gc})),n.d(t,"multinomial",(function(){return pt.hc})),n.d(t,"neg",(function(){return pt.ic})),n.d(t,"notEqual",(function(){return pt.kc})),n.d(t,"oneHot",(function(){return pt.lc})),n.d(t,"ones",(function(){return pt.mc})),n.d(t,"onesLike",(function(){return pt.nc})),n.d(t,"outerProduct",(function(){return pt.pc})),n.d(t,"pad",(function(){return pt.qc})),n.d(t,"pad1d",(function(){return pt.rc})),n.d(t,"pad2d",(function(){return pt.sc})),n.d(t,"pad3d",(function(){return pt.tc})),n.d(t,"pad4d",(function(){return pt.uc})),n.d(t,"pool",(function(){return pt.vc})),n.d(t,"pow",(function(){return pt.wc})),n.d(t,"prelu",(function(){return pt.xc})),n.d(t,"print",(function(){return pt.yc})),n.d(t,"prod",(function(){return pt.zc})),n.d(t,"rand",(function(){return pt.Ac})),n.d(t,"randomGamma",(function(){return pt.Bc})),n.d(t,"randomNormal",(function(){return pt.Cc})),n.d(t,"randomUniform",(function(){return pt.Dc})),n.d(t,"range",(function(){return pt.Ec})),n.d(t,"real",(function(){return pt.Fc})),n.d(t,"reciprocal",(function(){return pt.Gc})),n.d(t,"relu",(function(){return pt.Hc})),n.d(t,"relu6",(function(){return pt.Ic})),n.d(t,"reshape",(function(){return pt.Jc})),n.d(t,"reverse",(function(){return pt.Kc})),n.d(t,"reverse1d",(function(){return pt.Lc})),n.d(t,"reverse2d",(function(){return pt.Mc})),n.d(t,"reverse3d",(function(){return pt.Nc})),n.d(t,"reverse4d",(function(){return pt.Oc})),n.d(t,"round",(function(){return pt.Qc})),n.d(t,"rsqrt",(function(){return pt.Rc})),n.d(t,"scalar",(function(){return pt.Sc})),n.d(t,"selu",(function(){return pt.Uc})),n.d(t,"separableConv2d",(function(){return pt.Vc})),n.d(t,"setdiff1dAsync",(function(){return pt.Wc})),n.d(t,"sigmoid",(function(){return pt.Xc})),n.d(t,"sign",(function(){return pt.Yc})),n.d(t,"sin",(function(){return pt.ad})),n.d(t,"sinh",(function(){return pt.bd})),n.d(t,"slice",(function(){return pt.cd})),n.d(t,"slice1d",(function(){return pt.dd})),n.d(t,"slice2d",(function(){return pt.ed})),n.d(t,"slice3d",(function(){return pt.fd})),n.d(t,"slice4d",(function(){return pt.gd})),n.d(t,"softmax",(function(){return pt.hd})),n.d(t,"softplus",(function(){return pt.id})),n.d(t,"spaceToBatchND",(function(){return pt.jd})),n.d(t,"fft",(function(){return pt.lb})),n.d(t,"ifft",(function(){return pt.ub})),n.d(t,"irfft",(function(){return pt.yb})),n.d(t,"rfft",(function(){return pt.Pc})),n.d(t,"split",(function(){return pt.md})),n.d(t,"sqrt",(function(){return pt.nd})),n.d(t,"square",(function(){return pt.od})),n.d(t,"squaredDifference",(function(){return pt.pd})),n.d(t,"squeeze",(function(){return pt.qd})),n.d(t,"stack",(function(){return pt.rd})),n.d(t,"step",(function(){return pt.sd})),n.d(t,"stridedSlice",(function(){return pt.td})),n.d(t,"sub",(function(){return pt.ud})),n.d(t,"sum",(function(){return pt.vd})),n.d(t,"tan",(function(){return pt.wd})),n.d(t,"tanh",(function(){return pt.xd})),n.d(t,"tensor",(function(){return pt.yd})),n.d(t,"tensor1d",(function(){return pt.zd})),n.d(t,"tensor2d",(function(){return pt.Ad})),n.d(t,"tensor3d",(function(){return pt.Bd})),n.d(t,"tensor4d",(function(){return pt.Cd})),n.d(t,"tensor5d",(function(){return pt.Dd})),n.d(t,"tensor6d",(function(){return pt.Ed})),n.d(t,"tile",(function(){return pt.Fd})),n.d(t,"topk",(function(){return pt.Gd})),n.d(t,"truncatedNormal",(function(){return pt.Id})),n.d(t,"unique",(function(){return pt.Jd})),n.d(t,"unsortedSegmentSum",(function(){return pt.Kd})),n.d(t,"unstack",(function(){return pt.Ld})),n.d(t,"variable",(function(){return pt.Md})),n.d(t,"where",(function(){return pt.Nd})),n.d(t,"whereAsync",(function(){return pt.Od})),n.d(t,"zeros",(function(){return pt.Pd})),n.d(t,"zerosLike",(function(){return pt.Qd})),n.d(t,"booleanMaskAsync",(function(){return pt.y})),n.d(t,"transpose",(function(){return pt.Hd})),n.d(t,"norm",(function(){return pt.jc})),n.d(t,"movingAverage",(function(){return pt.ec})),n.d(t,"scatterND",(function(){return pt.Tc})),n.d(t,"sparseToDense",(function(){return pt.kd})),n.d(t,"gatherND",(function(){return pt.rb})),n.d(t,"dropout",(function(){return pt.cb})),n.d(t,"enclosingPowerOfTwo",(function(){return pt.eb})),n.d(t,"cosineWindow",(function(){return pt.S})),n.d(t,"inTopKAsync",(function(){return pt.xb})),n.d(t,"op",(function(){return pt.oc})),n.d(t,"OP_SCOPE_SUFFIX",(function(){return pt.a})),n.d(t,"image",(function(){return pt.wb})),n.d(t,"linalg",(function(){return pt.Fb})),n.d(t,"losses",(function(){return pt.Rb})),n.d(t,"spectral",(function(){return pt.ld})),n.d(t,"fused",(function(){return pt.pb})),n.d(t,"signal",(function(){return pt.Zc})),n.d(t,"Reduction",(function(){return ft.a})),n.d(t,"train",(function(){return bt})),n.d(t,"enableProdMode",(function(){return Ue.g})),n.d(t,"enableDebugMode",(function(){return Ue.f})),n.d(t,"disableDeprecationWarnings",(function(){return Ue.c})),n.d(t,"deprecationWarn",(function(){return Ue.b})),n.d(t,"disposeVariables",(function(){return Ue.e})),n.d(t,"engine",(function(){return Ue.h})),n.d(t,"memory",(function(){return Ue.m})),n.d(t,"profile",(function(){return Ue.n})),n.d(t,"tidy",(function(){return Ue.t})),n.d(t,"dispose",(function(){return Ue.d})),n.d(t,"keep",(function(){return Ue.l})),n.d(t,"time",(function(){return Ue.u})),n.d(t,"setBackend",(function(){return Ue.r})),n.d(t,"ready",(function(){return Ue.o})),n.d(t,"getBackend",(function(){return Ue.k})),n.d(t,"removeBackend",(function(){return Ue.q})),n.d(t,"findBackend",(function(){return Ue.i})),n.d(t,"findBackendFactory",(function(){return Ue.j})),n.d(t,"registerBackend",(function(){return Ue.p})),n.d(t,"backend",(function(){return Ue.a})),n.d(t,"setPlatform",(function(){return Ue.s})),n.d(t,"getKernel",(function(){return Ne.c})),n.d(t,"getGradient",(function(){return Ne.b})),n.d(t,"getKernelsForBackend",(function(){return Ne.d})),n.d(t,"registerKernel",(function(){return Ne.f})),n.d(t,"registerGradient",(function(){return Ne.e})),n.d(t,"unregisterKernel",(function(){return Ne.h})),n.d(t,"unregisterGradient",(function(){return Ne.g})),n.d(t,"copyRegisteredKernels",(function(){return Ne.a})),n.d(t,"customGrad",(function(){return Ze.a})),n.d(t,"grad",(function(){return Ze.b})),n.d(t,"grads",(function(){return Ze.c})),n.d(t,"valueAndGrad",(function(){return Ze.d})),n.d(t,"valueAndGrads",(function(){return Ze.e})),n.d(t,"variableGrads",(function(){return Ze.f})),n.d(t,"Environment",(function(){return h.b})),n.d(t,"env",(function(){return h.c})),n.d(t,"ENV",(function(){return h.a})),n.d(t,"version_core",(function(){return Ve})),n.d(t,"nextFrame",(function(){return gt.a})),n.d(t,"browser",(function(){return s})),n.d(t,"io",(function(){return r})),n.d(t,"math",(function(){return a})),n.d(t,"serialization",(function(){return o})),n.d(t,"test_util",(function(){return Be})),n.d(t,"util",(function(){return We})),n.d(t,"backend_util",(function(){return c})),n.d(t,"tensor_util",(function(){return Pe})),n.d(t,"slice_util",(function(){return De})),n.d(t,"gather_util",(function(){return i})),n.d(t,"scatter_util",(function(){return _e})),n.d(t,"device_util",(function(){return tn})),n.d(t,"kernel_impls",(function(){return l})),n.d(t,"KernelBackend",(function(){return an.b})),n.d(t,"DataStorage",(function(){return an.a})),n.d(t,"Abs",(function(){return je.a})),n.d(t,"Acos",(function(){return je.b})),n.d(t,"Acosh",(function(){return je.c})),n.d(t,"Add",(function(){return je.d})),n.d(t,"AddN",(function(){return je.e})),n.d(t,"All",(function(){return je.f})),n.d(t,"Any",(function(){return je.g})),n.d(t,"ArgMax",(function(){return je.h})),n.d(t,"ArgMin",(function(){return je.i})),n.d(t,"Asin",(function(){return je.j})),n.d(t,"Asinh",(function(){return je.k})),n.d(t,"Atan",(function(){return je.l})),n.d(t,"Atanh",(function(){return je.n})),n.d(t,"Atan2",(function(){return je.m})),n.d(t,"AvgPool",(function(){return je.o})),n.d(t,"AvgPoolGrad",(function(){return je.r})),n.d(t,"AvgPool3D",(function(){return je.p})),n.d(t,"AvgPool3DGrad",(function(){return je.q})),n.d(t,"BatchMatMul",(function(){return je.s})),n.d(t,"BatchToSpaceND",(function(){return je.t})),n.d(t,"Bincount",(function(){return je.u})),n.d(t,"BroadcastTo",(function(){return je.v})),n.d(t,"Cast",(function(){return je.w})),n.d(t,"Ceil",(function(){return je.x})),n.d(t,"ClipByValue",(function(){return je.y})),n.d(t,"Complex",(function(){return je.z})),n.d(t,"ComplexAbs",(function(){return je.A})),n.d(t,"Concat",(function(){return je.B})),n.d(t,"Conv2D",(function(){return je.C})),n.d(t,"Conv2DBackpropFilter",(function(){return je.D})),n.d(t,"Conv2DBackpropInput",(function(){return je.E})),n.d(t,"Conv3D",(function(){return je.F})),n.d(t,"Conv3DBackpropFilterV2",(function(){return je.G})),n.d(t,"Conv3DBackpropInputV2",(function(){return je.H})),n.d(t,"Cos",(function(){return je.I})),n.d(t,"Cosh",(function(){return je.J})),n.d(t,"Cumsum",(function(){return je.L})),n.d(t,"CropAndResize",(function(){return je.K})),n.d(t,"DenseBincount",(function(){return je.M})),n.d(t,"DepthToSpace",(function(){return je.N})),n.d(t,"DepthwiseConv2dNative",(function(){return je.O})),n.d(t,"DepthwiseConv2dNativeBackpropFilter",(function(){return je.P})),n.d(t,"DepthwiseConv2dNativeBackpropInput",(function(){return je.Q})),n.d(t,"Diag",(function(){return je.R})),n.d(t,"Dilation2D",(function(){return je.S})),n.d(t,"Dilation2DBackpropInput",(function(){return je.U})),n.d(t,"Dilation2DBackpropFilter",(function(){return je.T})),n.d(t,"RealDiv",(function(){return je.kc})),n.d(t,"Elu",(function(){return je.V})),n.d(t,"EluGrad",(function(){return je.W})),n.d(t,"Erf",(function(){return je.Y})),n.d(t,"Equal",(function(){return je.X})),n.d(t,"Exp",(function(){return je.Z})),n.d(t,"ExpandDims",(function(){return je.ab})),n.d(t,"Expm1",(function(){return je.bb})),n.d(t,"FFT",(function(){return je.cb})),n.d(t,"Fill",(function(){return je.db})),n.d(t,"FlipLeftRight",(function(){return je.eb})),n.d(t,"Floor",(function(){return je.fb})),n.d(t,"FloorDiv",(function(){return je.gb})),n.d(t,"FusedBatchNorm",(function(){return je.ib})),n.d(t,"GatherV2",(function(){return je.mb})),n.d(t,"GatherNd",(function(){return je.lb})),n.d(t,"Greater",(function(){return je.nb})),n.d(t,"GreaterEqual",(function(){return je.ob})),n.d(t,"Identity",(function(){return je.qb})),n.d(t,"IFFT",(function(){return je.pb})),n.d(t,"Imag",(function(){return je.rb})),n.d(t,"IsFinite",(function(){return je.sb})),n.d(t,"IsInf",(function(){return je.tb})),n.d(t,"IsNan",(function(){return je.ub})),n.d(t,"LeakyRelu",(function(){return je.xb})),n.d(t,"Less",(function(){return je.yb})),n.d(t,"LessEqual",(function(){return je.zb})),n.d(t,"LinSpace",(function(){return je.Ab})),n.d(t,"Log",(function(){return je.Bb})),n.d(t,"Log1p",(function(){return je.Cb})),n.d(t,"LogicalAnd",(function(){return je.Eb})),n.d(t,"LogicalNot",(function(){return je.Fb})),n.d(t,"LogicalOr",(function(){return je.Gb})),n.d(t,"LogSoftmax",(function(){return je.Db})),n.d(t,"LRN",(function(){return je.vb})),n.d(t,"LRNGrad",(function(){return je.wb})),n.d(t,"Max",(function(){return je.Hb})),n.d(t,"Maximum",(function(){return je.Nb})),n.d(t,"MaxPool",(function(){return je.Ib})),n.d(t,"MaxPoolGrad",(function(){return je.Lb})),n.d(t,"MaxPool3D",(function(){return je.Jb})),n.d(t,"MaxPool3DGrad",(function(){return je.Kb})),n.d(t,"MaxPoolWithArgmax",(function(){return je.Mb})),n.d(t,"Mean",(function(){return je.Ob})),n.d(t,"Min",(function(){return je.Pb})),n.d(t,"Minimum",(function(){return je.Qb})),n.d(t,"MirrorPad",(function(){return je.Rb})),n.d(t,"Mod",(function(){return je.Sb})),n.d(t,"Multinomial",(function(){return je.Tb})),n.d(t,"Multiply",(function(){return je.Ub})),n.d(t,"Neg",(function(){return je.Vb})),n.d(t,"NotEqual",(function(){return je.Zb})),n.d(t,"NonMaxSuppressionV3",(function(){return je.Wb})),n.d(t,"NonMaxSuppressionV4",(function(){return je.Xb})),n.d(t,"NonMaxSuppressionV5",(function(){return je.Yb})),n.d(t,"OnesLike",(function(){return je.bc})),n.d(t,"OneHot",(function(){return je.ac})),n.d(t,"Pack",(function(){return je.cc})),n.d(t,"PadV2",(function(){return je.dc})),n.d(t,"Pool",(function(){return je.ec})),n.d(t,"Pow",(function(){return je.fc})),n.d(t,"Prelu",(function(){return je.gc})),n.d(t,"Prod",(function(){return je.hc})),n.d(t,"Range",(function(){return je.ic})),n.d(t,"Real",(function(){return je.jc})),n.d(t,"Reciprocal",(function(){return je.lc})),n.d(t,"Relu",(function(){return je.mc})),n.d(t,"Reshape",(function(){return je.oc})),n.d(t,"ResizeNearestNeighbor",(function(){return je.rc})),n.d(t,"ResizeNearestNeighborGrad",(function(){return je.sc})),n.d(t,"ResizeBilinear",(function(){return je.pc})),n.d(t,"ResizeBilinearGrad",(function(){return je.qc})),n.d(t,"Relu6",(function(){return je.nc})),n.d(t,"Reverse",(function(){return je.tc})),n.d(t,"Round",(function(){return je.vc})),n.d(t,"Rsqrt",(function(){return je.wc})),n.d(t,"ScatterNd",(function(){return je.xc})),n.d(t,"Select",(function(){return je.yc})),n.d(t,"Selu",(function(){return je.zc})),n.d(t,"Slice",(function(){return je.Ec})),n.d(t,"Sin",(function(){return je.Cc})),n.d(t,"Sinh",(function(){return je.Dc})),n.d(t,"Sign",(function(){return je.Bc})),n.d(t,"Sigmoid",(function(){return je.Ac})),n.d(t,"Softplus",(function(){return je.Gc})),n.d(t,"Sqrt",(function(){return je.Kc})),n.d(t,"Sum",(function(){return je.Qc})),n.d(t,"SpaceToBatchND",(function(){return je.Hc})),n.d(t,"SplitV",(function(){return je.Jc})),n.d(t,"Softmax",(function(){return je.Fc})),n.d(t,"SquaredDifference",(function(){return je.Mc})),n.d(t,"Square",(function(){return je.Lc})),n.d(t,"Sub",(function(){return je.Pc})),n.d(t,"SparseToDense",(function(){return je.Ic})),n.d(t,"StridedSlice",(function(){return je.Oc})),n.d(t,"Tan",(function(){return je.Rc})),n.d(t,"Tanh",(function(){return je.Sc})),n.d(t,"Tile",(function(){return je.Tc})),n.d(t,"TopK",(function(){return je.Uc})),n.d(t,"Transform",(function(){return je.Vc})),n.d(t,"Transpose",(function(){return je.Wc})),n.d(t,"Unique",(function(){return je.Xc})),n.d(t,"Unpack",(function(){return je.Yc})),n.d(t,"UnsortedSegmentSum",(function(){return je.Zc})),n.d(t,"ZerosLike",(function(){return je.ad})),n.d(t,"Step",(function(){return je.Nc})),n.d(t,"FromPixels",(function(){return je.hb})),n.d(t,"RotateWithOffset",(function(){return je.uc})),n.d(t,"_FusedMatMul",(function(){return je.bd})),n.d(t,"FusedConv2D",(function(){return je.jb})),n.d(t,"FusedDepthwiseConv2D",(function(){return je.kb}));var r={};n.r(r),n.d(r,"copyModel",(function(){return H})),n.d(r,"listModels",(function(){return U})),n.d(r,"moveModel",(function(){return q})),n.d(r,"removeModel",(function(){return G})),n.d(r,"browserFiles",(function(){return ae})),n.d(r,"browserHTTPRequest",(function(){return fe})),n.d(r,"concatenateArrayBuffers",(function(){return p.d})),n.d(r,"decodeWeights",(function(){return p.e})),n.d(r,"encodeWeights",(function(){return p.f})),n.d(r,"fromMemory",(function(){return ge})),n.d(r,"getLoadHandlers",(function(){return y})),n.d(r,"getModelArtifactsInfoForJSON",(function(){return p.g})),n.d(r,"getSaveHandlers",(function(){return g})),n.d(r,"http",(function(){return pe})),n.d(r,"isHTTPScheme",(function(){return de})),n.d(r,"loadWeights",(function(){return ue})),n.d(r,"registerLoadRouter",(function(){return b})),n.d(r,"registerSaveRouter",(function(){return m})),n.d(r,"weightsLoaderFactory",(function(){return ce})),n.d(r,"withSaveHandler",(function(){return ye}));var a={};n.r(a),n.d(a,"confusionMatrix",(function(){return Ie}));var s={};n.r(s),n.d(s,"fromPixelsAsync",(function(){return Ae})),n.d(s,"toPixels",(function(){return Ee})),n.d(s,"fromPixels",(function(){return Re}));var i={};n.r(i),n.d(i,"prepareAndValidate",(function(){return Fe}));var o={};n.r(o),n.d(o,"Serializable",(function(){return Me})),n.d(o,"SerializationMap",(function(){return ze})),n.d(o,"registerClass",(function(){return Le}));var u={};n.r(u),n.d(u,"segOpComputeOptimalWindowSize",(function(){return Yt})),n.d(u,"computeOutShape",(function(){return Zt})),n.d(u,"collectGatherOpShapeInfo",(function(){return Jt}));var c={};n.r(c),n.d(c,"axesAreInnerMostDims",(function(){return yt.b})),n.d(c,"combineLocations",(function(){return yt.c})),n.d(c,"computeOutAndReduceShapes",(function(){return yt.d})),n.d(c,"expandShapeToKeepDim",(function(){return yt.e})),n.d(c,"assertAxesAreInnerMostDims",(function(){return yt.a})),n.d(c,"getAxesPermutation",(function(){return yt.f})),n.d(c,"getUndoAxesPermutation",(function(){return yt.h})),n.d(c,"getInnerMostAxes",(function(){return yt.g})),n.d(c,"getBroadcastDims",(function(){return xt.b})),n.d(c,"getReductionAxes",(function(){return xt.c})),n.d(c,"assertAndGetBroadcastShape",(function(){return xt.a})),n.d(c,"assertParamsConsistent",(function(){return Ot})),n.d(c,"computeOutShape",(function(){return kt})),n.d(c,"computeDilation2DInfo",(function(){return vt.d})),n.d(c,"computePool2DInfo",(function(){return vt.e})),n.d(c,"computePool3DInfo",(function(){return vt.f})),n.d(c,"computeConv2DInfo",(function(){return vt.a})),n.d(c,"computeConv3DInfo",(function(){return vt.b})),n.d(c,"computeDefaultPad",(function(){return vt.c})),n.d(c,"tupleValuesAreOne",(function(){return vt.i})),n.d(c,"eitherStridesOrDilationsAreOne",(function(){return vt.h})),n.d(c,"convertConv2DDataFormat",(function(){return vt.g})),n.d(c,"getFusedDyActivation",(function(){return wt.c})),n.d(c,"getFusedBiasGradient",(function(){return wt.b})),n.d(c,"applyActivation",(function(){return wt.a})),n.d(c,"shouldFuse",(function(){return wt.d})),n.d(c,"PARALLELIZE_THRESHOLD",(function(){return It})),n.d(c,"computeOptimalWindowSize",(function(){return jt})),n.d(c,"slice_util",(function(){return De})),n.d(c,"upcastType",(function(){return ht.c})),n.d(c,"getImageCenter",(function(){return Nt})),n.d(c,"getReshaped",(function(){return St})),n.d(c,"getPermuted",(function(){return Tt})),n.d(c,"getReshapedPermuted",(function(){return Ct})),n.d(c,"getSliceBeginCoords",(function(){return $t})),n.d(c,"getSliceSize",(function(){return At})),n.d(c,"prepareAndValidate",(function(){return Fe})),n.d(c,"validateUpdateShape",(function(){return _e.validateUpdateShape})),n.d(c,"validateInput",(function(){return _e.validateInput})),n.d(c,"calculateShapes",(function(){return _e.calculateShapes})),n.d(c,"SELU_SCALEALPHA",(function(){return Et.b})),n.d(c,"SELU_SCALE",(function(){return Et.a})),n.d(c,"ERF_P",(function(){return Rt})),n.d(c,"ERF_A1",(function(){return Ft})),n.d(c,"ERF_A2",(function(){return _t})),n.d(c,"ERF_A3",(function(){return Dt})),n.d(c,"ERF_A4",(function(){return Mt})),n.d(c,"ERF_A5",(function(){return zt})),n.d(c,"warn",(function(){return Lt})),n.d(c,"log",(function(){return Pt})),n.d(c,"mergeRealAndImagArrays",(function(){return Bt})),n.d(c,"splitRealAndImagArrays",(function(){return Wt})),n.d(c,"complexWithEvenIndex",(function(){return Vt})),n.d(c,"complexWithOddIndex",(function(){return Ut})),n.d(c,"getComplexWithIndex",(function(){return Gt})),n.d(c,"assignToTypedArray",(function(){return Ht})),n.d(c,"exponents",(function(){return qt})),n.d(c,"exponent",(function(){return Kt})),n.d(c,"prepareSplitSize",(function(){return Xt})),n.d(c,"segment_util",(function(){return u})),n.d(c,"fromUint8ToStringArray",(function(){return Qt})),n.d(c,"fromStringArrayToUint8",(function(){return en}));var l={};n.r(l),n.d(l,"nonMaxSuppressionV3Impl",(function(){return nn.a})),n.d(l,"nonMaxSuppressionV4Impl",(function(){return nn.b})),n.d(l,"nonMaxSuppressionV5Impl",(function(){return nn.c})),n.d(l,"whereImpl",(function(){return rn.a}));var d=n(5),h=(n(122),n(20)),p=n(34);class f{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==f.instance&&(f.instance=new f),f.instance}static registerSaveRouter(e){f.getInstance().saveRouters.push(e)}static registerLoadRouter(e){f.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return f.getHandlers(e,"save")}static getLoadHandlers(e,t){return f.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?f.getInstance().loadRouters:f.getInstance().saveRouters).forEach((t=>{const a=t(e,n);null!==a&&r.push(a)})),r}}const m=e=>f.registerSaveRouter(e),b=e=>f.registerLoadRouter(e),g=e=>f.getSaveHandlers(e),y=(e,t)=>f.getLoadHandlers(e,t),x="tensorflowjs",O="models_store",k="model_info_store";function v(){if(!Object(h.c)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function w(e){const t=e.result;t.createObjectStore(O,{keyPath:"modelPath"}),t.createObjectStore(k,{keyPath:"modelPath"})}class I{constructor(e){if(this.indexedDB=v(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(x,1);r.onupgradeneeded=()=>w(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(O,"readonly"),r=t.objectStore(O).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=Object(p.g)(t),s=a.transaction(k,"readwrite");let i=s.objectStore(k);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=a.transaction(O,"readwrite");const o=u.objectStore(O).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=s.objectStore(k);const t=i.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(o.error)),t.onerror=e=>(a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)}))}}I.URL_SCHEME="indexeddb://";const j=e=>{return Object(h.c)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(I.URL_SCHEME)?(t=e.slice(I.URL_SCHEME.length),new I(t)):null;var t};f.registerSaveRouter(j),f.registerLoadRouter(j);class N{constructor(){this.indexedDB=v()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(x,1);n.onupgradeneeded=()=>w(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(k,"readonly"),s=a.objectStore(k).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(I.URL_SCHEME)?t.slice(I.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(x,1);r.onupgradeneeded=()=>w(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(k,"readwrite"),i=s.objectStore(k),o=i.get(e);let u;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),s=()=>{u=a.transaction(O,"readwrite");const r=u.objectStore(O).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)}))}}var S=n(8);const T="/",C="tensorflowjs_models",$="info",A="model_topology",E="weight_specs",R="weight_data",F="model_metadata";function _(e){return{info:[C,e,$].join(T),topology:[C,e,A].join(T),weightSpecs:[C,e,E].join(T),weightData:[C,e,R].join(T),modelMetadata:[C,e,F].join(T)}}function D(e){const t=e.split(T);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(T)}class M{constructor(e){if(!Object(h.c)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=_(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Object(p.g)(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,Object(p.a)(e.weightData));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return null!=e.signature&&(a.signature=e.signature),null!=e.userDefinedMetadata&&(a.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(a.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=Object(p.b)(s),t}}M.URL_SCHEME="localstorage://";const z=e=>{return Object(h.c)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(M.URL_SCHEME)?(t=e.slice(M.URL_SCHEME.length),new M(t)):null;var t};f.registerSaveRouter(z),f.registerLoadRouter(z);class L{constructor(){Object(S.b)(Object(h.c)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),Object(S.b)("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=C+T,n=T+$;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);if(a.startsWith(t)&&a.endsWith(n)){e[D(a)]=JSON.parse(this.LS.getItem(a))}}return e}async removeModel(e){var t;const n=_(e=(t=e).startsWith(M.URL_SCHEME)?t.slice(M.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}const P="://";class B{constructor(){this.managers={}}static getInstance(){return null==B.instance&&(B.instance=new B),B.instance}static registerManager(e,t){Object(S.b)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(P)&&(e=e.slice(0,e.indexOf(P))),Object(S.b)(e.length>0,(()=>"scheme must not be an empty string."));const n=B.getInstance();Object(S.b)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function W(e){if(-1===e.indexOf(P))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${B.getSchemes().join(",")}`);return{scheme:e.split(P)[0],path:e.split(P)[1]}}async function V(e,t,n=!1){Object(S.b)(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=f.getLoadHandlers(e);Object(S.b)(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),Object(S.b)(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const a=r[0],s=f.getSaveHandlers(t);Object(S.b)(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),Object(S.b)(s.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const i=s[0],o=W(e).scheme,u=W(e).path,c=o===W(e).scheme,l=await a.load();n&&c&&await B.getManager(o).removeModel(u);const d=await i.save(l);return n&&!c&&await B.getManager(o).removeModel(u),d.modelArtifactsInfo}async function U(){const e=B.getSchemes(),t={};for(const n of e){const e=await B.getManager(n).listModels();for(const r in e){t[n+P+r]=e[r]}}return t}async function G(e){const t=W(e);return B.getManager(t.scheme).removeModel(t.path)}async function H(e,t){return V(e,t,!1)}async function q(e,t){return V(e,t,!0)}class K{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(Object(h.c)().get("IS_BROWSER")){Object(h.c)().setPlatform("browser",new K);try{B.registerManager(M.URL_SCHEME,new L)}catch(e){}try{B.registerManager(I.URL_SCHEME,new N)}catch(e){}}n(229);var X=n(39),Y=n(11),Z=n(57),J=n(131),Q=n(6);Object(d.b)();const ee={buffer:X.a,cast:Y.a,clone:Z.a,print:J.a};Object(Q.f)(ee);function te(e){return new Promise((e=>setTimeout(e))).then(e)}class ne{constructor(e){if(!Object(h.c)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(ne.URL_SCHEME)&&(e=e.slice(ne.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer);const a=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),s=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(s.download=this.modelTopologyFileName,s.href=a,await te((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await te((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Object(p.g)(e)}}}}ne.URL_SCHEME="downloads://";class re{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.files=e}async load(){const e=this.files[0],t=this.files.slice(1);return new Promise(((n,r)=>{const a=new FileReader;a.onload=a=>{const s=JSON.parse(a.target.result),i=s.modelTopology;if(null==i)return void r(new Error(`modelTopology field is missing from file ${e.name}`));0===t.length&&n({modelTopology:i});const o=s.weightsManifest;if(null==o)return void r(new Error(`weightManifest field is missing from file ${e.name}`));let u;try{u=this.checkManifestAndWeightFiles(o,t)}catch(e){return void r(e)}const c=[],l=[],d=[];o.forEach((e=>{e.paths.forEach((e=>{l.push(e),d.push(null)})),c.push(...e.weights)})),o.forEach((e=>{e.paths.forEach((e=>{const t=new FileReader;t.onload=t=>{const r=t.target.result,a=l.indexOf(e);if(d[a]=r,-1===d.indexOf(null)){const e={modelTopology:i,weightSpecs:c,weightData:Object(p.d)(d),format:s.format,generatedBy:s.generatedBy,convertedBy:s.convertedBy};null!=s.signature&&(e.signature=s.signature),null!=s.userDefinedMetadata&&(e.userDefinedMetadata=s.userDefinedMetadata),null!=s.modelInitializer&&(e.modelInitializer=s.modelInitializer),n(e)}},t.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),t.readAsArrayBuffer(u[e])}))}))},a.onerror=t=>r(`Failed to read model topology and weights manifest JSON from file '${e.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),a.readAsText(e)}))}checkManifestAndWeightFiles(e,t){const n=[],r=t.map((e=>Object(p.c)(e.name))),a={};for(const s of e)s.paths.forEach((e=>{const s=Object(p.c)(e);if(-1!==n.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(n.push(s),-1===r.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);a[e]=t[r.indexOf(s)]}));if(n.length!==t.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${t.length}).`);return a}}function ae(e){return new re(e)}function se(e,t,n,r){!function(e){Object(S.b)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){Object(S.b)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),Object(S.b)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),Object(S.b)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map((s=>(s.then((s=>{const i=n+ ++a/e.length*(r-n);return t(i),s})),s))))}f.registerSaveRouter((e=>Object(h.c)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ne.URL_SCHEME)?function(e="model"){return new ne(e)}(e.slice(ne.URL_SCHEME.length)):null));var ie=n(127);async function oe(e,t){null==t&&(t={});const n=null==t.fetchFunc?Object(h.c)().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),a=(null==t.onProgress?await Promise.all(r):await se(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(a):await se(a,t.onProgress,.5,1)}async function ue(e,t="",n,r){return ce((e=>oe(e,{requestInit:r})))(e,t,n)}function ce(e){return async(t,n="",r)=>{const a=t.map((()=>!1)),s={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,c=ie.a[u]*S.O(e.shape),l=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:c})};null!=r?r.forEach(((t,n)=>{t===e.name&&(l(),i[n]=!0)})):l(),o.push(e.name),n+=c}))})),!i.every((e=>e))){const e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const u=a.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),c=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;c.push(t)}))}));const l=await e(c),d={};let h=0;return u.forEach((e=>{const n=t[e].paths.length;let r=0;for(let e=0;e<n;e++)r+=l[h+e].byteLength;const a=new ArrayBuffer(r),i=new Uint8Array(a);let o=0;for(let e=0;e<n;e++){const t=new Uint8Array(l[h+e]);i.set(t,o),o+=t.byteLength}s[e].forEach((e=>{const t=a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),n=Object(p.e)(t,[e.manifestEntry]);for(const e in n)d[e]=n[e]})),h+=n})),d}}class le{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(Object(S.b)("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Object(h.c)().platform.fetch,Object(S.b)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&Object(S.b)(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:Object(p.g)(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest,a=t.generatedBy,s=t.convertedBy,i=t.format,o=t.signature,u=t.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let c,l;if(null!=r){const e=await this.loadWeights(r);[c,l]=e}const d={modelTopology:n,weightSpecs:c,weightData:l,generatedBy:a,convertedBy:s,format:i};null!=o&&(d.signature=o),null!=u&&(d.userDefinedMetadata=u);const h=t.modelInitializer;return h&&(d.modelInitializer=h),d}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?"),r=e.substring(0,t),a=n>t?e.substring(n):"";return[r+"/",a]}(t),a=this.weightPathPrefix||n,s=[];for(const t of e)s.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);this.weightUrlConverter&&i.push(...await Promise.all(o));const u=await oe(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[s,Object(p.d)(u)]}}function de(e){return null!=e.match(le.URL_SCHEME_REGEX)}le.URL_SCHEME_REGEX=/^https?:\/\//;const he=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>de(e))):de(e),n)return pe(e,t)}return null};function pe(e,t){return new le(e,t)}function fe(e,t){return pe(e,t)}f.registerSaveRouter(he),f.registerLoadRouter(he);class me{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class be{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function ge(e,t,n,r){if(1===arguments.length){return null!=e.modelTopology||null!=e.weightSpecs?new me(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new me({modelTopology:e}))}return console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new me({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r})}function ye(e){return new be(e)}var xe=n(3),Oe=n(25),ke=n(89),ve=n(4),we=n(43);const Ie=Object(ve.b)({confusionMatrix_:function(e,t,n){const r=Object(xe.a)(e,"labels","confusionMatrix"),a=Object(xe.a)(t,"predictions","confusionMatrix");S.b(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),S.b(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),S.b(1===a.rank,(()=>`Expected the rank of predictions to be 1, but got ${a.rank}`)),S.b(r.shape[0]===a.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`)),S.b(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const s=Object(ke.a)(Object(Y.a)(r,"int32"),n),i=Object(ke.a)(Object(Y.a)(a,"int32"),n),o=Object(we.a)(s),u=Object(Oe.a)(o,i);return Object(Y.a)(u,"int32")}});var je=n(2),Ne=n(51),Se=n(159);let Te;function Ce(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=Object(Ne.c)(je.hb,d.a.backendName)){const n={pixels:e},r={numChannels:t};return d.a.runKernel(je.hb,n,r)}const[u,c]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let l,h;if(i?l=e.getContext("2d").getImageData(0,0,u,c).data:r||n?l=e.data:(s||a||o)&&(null==Te&&(Te=document.createElement("canvas").getContext("2d")),Te.canvas.width=u,Te.canvas.height=c,Te.drawImage(e,0,0,u,c),l=Te.getImageData(0,0,u,c).data),4===t)h=new Int32Array(l);else{const e=u*c;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=l[4*n+e]}const p=[c,u,t];return Object(Se.a)(h,p,"int32")}function $e(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}async function Ae(e,t=3){let n=null;if(Object(h.c)().getBool("WRAP_TO_IMAGEBITMAP")&&$e(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return Ce(n,t)}async function Ee(e,t){let n=Object(xe.a)(e,"img","toPixels");if(!(e instanceof Q.a)){const e=n;n=Object(Y.a)(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),o="float32"===n.dtype?255:1,u=new Uint8ClampedArray(a*r*4);for(let e=0;e<r*a;++e){const t=[0,0,0,255];for(let r=0;r<s;r++){const a=i[e*s+r];if("float32"===n.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===s?(t[0]=a*o,t[1]=a*o,t[2]=a*o):t[r]=a*o}const r=4*e;u[r+0]=Math.round(t[0]),u[r+1]=Math.round(t[1]),u[r+2]=Math.round(t[2]),u[r+3]=Math.round(t[3])}if(null!=t){t.width=a,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}const Re=Object(ve.b)({fromPixels_:Ce});function Fe(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===Object(S.O)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let i=1;for(let e=0;e<a.length-1;++e)i*=a[e];const o=e.shape,u=a.slice();u.pop();let c=1;for(let e=s;e<n;++e)c*=o[e],u.push(o[e]);const l=[...Object(S.j)(e.shape).map((e=>e/c)),1].slice(0,s);return[u,i,c,l]}var _e=n(95),De=n(96);class Me{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class ze{constructor(){this.classNameMap={}}static getMap(){return null==ze.instance&&(ze.instance=new ze),ze.instance}static register(e){ze.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Le(e){Object(S.b)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),Object(S.b)("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),Object(S.b)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),ze.register(e)}var Pe=n(21),Be=n(120),We=n(10);const Ve="3.3.0";var Ue=n(23),Ge=n(12),He=n(14),qe=n(9),Ke=n(32),Xe=n(22),Ye=n(18),Ze=n(29),Je=n(15);class Qe extends Me{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:a[e.name]})));this.applyGradients(e)}else this.applyGradients(a);return Object(Ue.d)(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Object(Ze.f)(e,t)}dispose(){null!=this.iterations_&&Object(Ue.d)(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Object(Je.a)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Qe,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class et extends Qe{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=d.a.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=d.a.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Object(Ue.t)((()=>Object(Ye.a)(r).variable(false)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Object(Ue.t)((()=>Object(Ye.a)(r).variable(false)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Object(Ue.t)((()=>{const e=Object(Ge.a)(Object(qe.a)(s,this.rho),Object(qe.a)(Object(Xe.a)(a),1-this.rho)),t=Object(qe.a)(Object(He.a)(Object(Ke.a)(Object(Ge.a)(i,this.epsilon)),Object(Ke.a)(Object(Ge.a)(s,this.epsilon))),a),n=Object(Ge.a)(Object(qe.a)(i,this.rho),Object(qe.a)(Object(Xe.a)(t),1-this.rho));s.assign(e),i.assign(n);const o=Object(Ge.a)(Object(qe.a)(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Object(Ue.d)(this.accumulatedGrads.map((e=>e.variable))),Object(Ue.d)(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}et.className="Adadelta",Le(et);var tt=n(98);class nt extends Qe{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=d.a.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Object(Ue.t)((()=>Object(tt.a)(r.shape,this.initialAccumulatorValue).variable(e)))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable;Object(Ue.t)((()=>{const e=Object(Ge.a)(s,Object(Xe.a)(a));s.assign(e);const t=Object(Ge.a)(Object(qe.a)(Object(He.a)(a,Object(Ke.a)(Object(Ge.a)(e,d.a.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Object(Ue.d)(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}nt.className="Adagrad",Le(nt);var rt=n(45),at=n(13);class st extends Qe{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Object(Ue.t)((()=>{this.accBeta1=Object(Je.a)(t).variable(),this.accBeta2=Object(Je.a)(n).variable()})),null==r&&(this.epsilon=d.a.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Object(Ue.t)((()=>{const n=Object(at.a)(1,this.accBeta1),r=Object(at.a)(1,this.accBeta2);t.forEach(((t,a)=>{const s=d.a.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Object(Ue.t)((()=>Object(Ye.a)(s).variable(false)))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:Object(Ue.t)((()=>Object(Ye.a)(s).variable(false)))});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedSecondMoment[a].variable,c=Object(Ge.a)(Object(qe.a)(o,this.beta1),Object(qe.a)(i,1-this.beta1)),l=Object(Ge.a)(Object(qe.a)(u,this.beta2),Object(qe.a)(Object(Xe.a)(i),1-this.beta2)),h=Object(He.a)(c,n),p=Object(He.a)(l,r);o.assign(c),u.assign(l);const f=Object(Ge.a)(Object(qe.a)(Object(He.a)(h,Object(Ge.a)(Object(Ke.a)(p),this.epsilon)),-this.learningRate),s);s.assign(f)})),this.accBeta1.assign(Object(qe.a)(this.accBeta1,this.beta1)),this.accBeta2.assign(Object(qe.a)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Object(Ue.d)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Object(Ue.d)(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Object(Ue.t)((()=>{this.accBeta1.assign(Object(rt.a)(this.beta1,this.iterations_+1)),this.accBeta2.assign(Object(rt.a)(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}st.className="Adam",Le(st);var it=n(36),ot=n(76);class ut extends Qe{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Object(Ue.t)((()=>{this.iteration=Object(Je.a)(0).variable(),this.accBeta1=Object(Je.a)(t).variable()})),null==r&&(this.epsilon=d.a.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Object(Ue.t)((()=>{const n=Object(at.a)(1,this.accBeta1),r=Object(He.a)(-this.learningRate,Object(Ge.a)(Object(qe.a)(this.iteration,this.decay),1));t.forEach(((t,a)=>{const s=d.a.registeredVariables[t];null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:Object(Ye.a)(s).variable(false)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:Object(Ye.a)(s).variable(false)});const i=Array.isArray(e)?e[a].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[a].variable,u=this.accumulatedWeightedInfNorm[a].variable,c=Object(Ge.a)(Object(qe.a)(o,this.beta1),Object(qe.a)(i,1-this.beta1)),l=Object(qe.a)(u,this.beta2),h=Object(it.a)(i),p=Object(ot.a)(l,h);o.assign(c),u.assign(p);const f=Object(Ge.a)(Object(qe.a)(Object(He.a)(r,n),Object(He.a)(c,Object(Ge.a)(p,this.epsilon))),s);s.assign(f)})),this.iteration.assign(Object(Ge.a)(this.iteration,1)),this.accBeta1.assign(Object(qe.a)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Object(Ue.d)(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Object(Ue.d)(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}ut.className="Adamax",Le(ut);class ct extends Qe{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=d.a.registeredVariables[t];Object(Ue.t)((()=>{const e=Object(Ge.a)(Object(qe.a)(this.c,r),a);a.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Object(Ue.l)(Object(Je.a)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}ct.className="SGD",Le(ct);class lt extends ct{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Object(Je.a)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=d.a.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:Object(Ue.t)((()=>Object(Ye.a)(r).variable(e)))}}const a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&Object(Ue.t)((()=>{let e;const t=Object(Ge.a)(Object(qe.a)(this.m,a),s);e=this.useNesterov?Object(Ge.a)(Object(qe.a)(this.c,Object(Ge.a)(s,Object(qe.a)(t,this.m))),r):Object(Ge.a)(Object(qe.a)(this.c,t),r),a.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Object(Ue.d)(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(false)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}lt.className="Momentum",Le(lt);class dt extends Qe{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=d.a.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=d.a.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Object(Ue.t)((()=>Object(Ye.a)(r).variable(a)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Object(Ue.t)((()=>Object(Ye.a)(r).variable(a)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Object(Ue.t)((()=>Object(Ye.a)(r).variable(a)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Object(Ue.t)((()=>{const e=Object(Ge.a)(Object(qe.a)(i,this.decay),Object(qe.a)(Object(Xe.a)(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=Object(Ge.a)(Object(qe.a)(t,this.decay),Object(qe.a)(s,1-this.decay)),u=Object(He.a)(Object(qe.a)(s,this.learningRate),Object(Ke.a)(Object(at.a)(e,Object(Ge.a)(Object(Xe.a)(a),this.epsilon)))),c=Object(Ge.a)(Object(qe.a)(o,this.momentum),u);i.assign(e),t.assign(a),o.assign(c);const l=Object(at.a)(r,c);r.assign(l)}else{const e=Object(Ge.a)(Object(qe.a)(i,this.decay),Object(qe.a)(Object(Xe.a)(s),1-this.decay)),t=Object(Ge.a)(Object(qe.a)(o,this.momentum),Object(He.a)(Object(qe.a)(s,this.learningRate),Object(Ke.a)(Object(Ge.a)(e,this.epsilon))));i.assign(e),o.assign(t);const n=Object(at.a)(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Object(Ue.d)(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Object(Ue.d)(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Object(Ue.d)(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}dt.className="RMSProp",Le(dt);var ht=n(75),pt=n(19),ft=n(30);class mt{static sgd(e){return new ct(e)}static momentum(e,t,n=!1){return new lt(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new dt(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new st(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new et(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new ut(e,t,n,r,a)}static adagrad(e,t=.1){return new nt(e,t)}}const bt={sgd:mt.sgd,momentum:mt.momentum,adadelta:mt.adadelta,adagrad:mt.adagrad,rmsprop:mt.rmsprop,adamax:mt.adamax,adam:mt.adam};var gt=n(205),yt=n(33),xt=n(16);function Ot(e,t){const n=e[0].length;e.forEach(((e,t)=>{S.b(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),S.b(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,a)=>{for(let s=0;s<n;s++)S.b(s===t||e[s]===r[s],(()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`))}))}function kt(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}var vt=n(28),wt=n(37);const It=30;function jt(e){return e<=It?e:Object(S.G)(e,Math.floor(Math.sqrt(e)))}function Nt(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function St(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function Tt(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function Ct(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function $t(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function At(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}var Et=n(126);const Rt=.3275911,Ft=.254829592,_t=-.284496736,Dt=1.421413741,Mt=-1.453152027,zt=1.061405429;function Lt(...e){Object(h.c)().getBool("IS_TEST")||console.warn(...e)}function Pt(...e){Object(h.c)().getBool("IS_TEST")||console.log(...e)}function Bt(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Wt(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function Vt(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Ut(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Gt(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Ht(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function qt(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function Kt(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}function Xt(e,t,n=0){let r=[];if("number"==typeof t)Object(S.b)(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const a=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);Object(S.b)(a<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const r=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-r}Object(S.b)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function Yt(e,t){let n,r=!1;for(e<=It?(n=e,r=!0):n=Object(S.G)(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Object(S.G)(e,n+1);return n}function Zt(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function Jt(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let u=1,c=1,l=1;for(let t=0;t<r;++t)o.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),c*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),l*=e.shape[t];return{batchSize:u,sliceSize:l,outerSize:c,dimSize:i,outputShape:o}}function Qt(e){try{return e.map((e=>Object(We.decodeString)(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function en(e){return e.map((e=>Object(We.encodeString)(e)))}var tn=n(130),nn=n(63),rn=n(163),an=n(123)},function(e,t,n){"use strict";n.d(t,"d",(function(){return a})),n.d(t,"e",(function(){return s})),n.d(t,"f",(function(){return i})),n.d(t,"b",(function(){return o})),n.d(t,"g",(function(){return c})),n.d(t,"c",(function(){return l})),n.d(t,"a",(function(){return d}));var r=n(0);function a(e,t,n,a,i){const o=t.inputParams[e];if(o&&void 0!==o.inputIndexStart){const e=o.inputIndexStart,u=0===o.inputIndexEnd?void 0:void 0===o.inputIndexEnd?e+1:o.inputIndexEnd;if("tensor"===o.type)return s(t.inputNames[o.inputIndexStart],n,a,i);if("tensors"===o.type){return t.inputNames.slice(e,u).map((e=>s(e,n,a,i)))}const c=s(t.inputNames.slice(e)[0],n,a,i),l=c.dataSync();return"number"===o.type?l[0]:r.util.toNestedArray(c.shape,l)}const u=t.attrParams[e];return u&&u.value}function s(e,t,n,r){const[a,s]=c(e);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[u(a,e)]));return void 0!==i?t[u(a,i)][s]:void 0}function i(e,t,n){return t[u(e,n.currentContextId)]}function o(e,t){const[n,r]=c(e);return[u(n,t&&t.currentContextId),r]}function u(e,t){return t?`${e}-${t}`:e}function c(e){const t=e.split(":");if(1===t.length)return[e,0];return[t[0],Number(t[t.length-1])]}function l(e,t,n){let r=a("pad",e,t,n);if("explicit"===r){r=a("explicitPaddings",e,t,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)s[e][0]=r[2*e],s[e][1]=r[2*e+1];return s}return r}function d(e){return e.kept?e:Object(r.clone)(e)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return a})),n.d(t,"c",(function(){return s})),n.d(t,"d",(function(){return i})),n.d(t,"e",(function(){return o})),n.d(t,"f",(function(){return u})),n.d(t,"g",(function(){return c})),n.d(t,"h",(function(){return l})),n.d(t,"i",(function(){return d})),n.d(t,"j",(function(){return h})),n.d(t,"k",(function(){return p})),n.d(t,"l",(function(){return f})),n.d(t,"n",(function(){return m})),n.d(t,"m",(function(){return b})),n.d(t,"o",(function(){return g})),n.d(t,"r",(function(){return y})),n.d(t,"p",(function(){return x})),n.d(t,"q",(function(){return O})),n.d(t,"s",(function(){return k})),n.d(t,"t",(function(){return v})),n.d(t,"u",(function(){return w})),n.d(t,"v",(function(){return I})),n.d(t,"w",(function(){return j})),n.d(t,"x",(function(){return N})),n.d(t,"y",(function(){return S})),n.d(t,"z",(function(){return T})),n.d(t,"A",(function(){return C})),n.d(t,"B",(function(){return $})),n.d(t,"C",(function(){return A})),n.d(t,"D",(function(){return E})),n.d(t,"E",(function(){return R})),n.d(t,"F",(function(){return F})),n.d(t,"G",(function(){return _})),n.d(t,"H",(function(){return D})),n.d(t,"I",(function(){return M})),n.d(t,"J",(function(){return z})),n.d(t,"L",(function(){return L})),n.d(t,"K",(function(){return P})),n.d(t,"M",(function(){return B})),n.d(t,"N",(function(){return W})),n.d(t,"O",(function(){return V})),n.d(t,"P",(function(){return U})),n.d(t,"Q",(function(){return G})),n.d(t,"R",(function(){return H})),n.d(t,"S",(function(){return q})),n.d(t,"U",(function(){return K})),n.d(t,"T",(function(){return X})),n.d(t,"kc",(function(){return Y})),n.d(t,"V",(function(){return Z})),n.d(t,"W",(function(){return J})),n.d(t,"Y",(function(){return Q})),n.d(t,"X",(function(){return ee})),n.d(t,"Z",(function(){return te})),n.d(t,"ab",(function(){return ne})),n.d(t,"bb",(function(){return re})),n.d(t,"cb",(function(){return ae})),n.d(t,"db",(function(){return se})),n.d(t,"eb",(function(){return ie})),n.d(t,"fb",(function(){return oe})),n.d(t,"gb",(function(){return ue})),n.d(t,"ib",(function(){return ce})),n.d(t,"mb",(function(){return le})),n.d(t,"lb",(function(){return de})),n.d(t,"nb",(function(){return he})),n.d(t,"ob",(function(){return pe})),n.d(t,"qb",(function(){return fe})),n.d(t,"pb",(function(){return me})),n.d(t,"rb",(function(){return be})),n.d(t,"sb",(function(){return ge})),n.d(t,"tb",(function(){return ye})),n.d(t,"ub",(function(){return xe})),n.d(t,"xb",(function(){return Oe})),n.d(t,"yb",(function(){return ke})),n.d(t,"zb",(function(){return ve})),n.d(t,"Ab",(function(){return we})),n.d(t,"Bb",(function(){return Ie})),n.d(t,"Cb",(function(){return je})),n.d(t,"Eb",(function(){return Ne})),n.d(t,"Fb",(function(){return Se})),n.d(t,"Gb",(function(){return Te})),n.d(t,"Db",(function(){return Ce})),n.d(t,"vb",(function(){return $e})),n.d(t,"wb",(function(){return Ae})),n.d(t,"Hb",(function(){return Ee})),n.d(t,"Nb",(function(){return Re})),n.d(t,"Ib",(function(){return Fe})),n.d(t,"Lb",(function(){return _e})),n.d(t,"Jb",(function(){return De})),n.d(t,"Kb",(function(){return Me})),n.d(t,"Mb",(function(){return ze})),n.d(t,"Ob",(function(){return Le})),n.d(t,"Pb",(function(){return Pe})),n.d(t,"Qb",(function(){return Be})),n.d(t,"Rb",(function(){return We})),n.d(t,"Sb",(function(){return Ve})),n.d(t,"Tb",(function(){return Ue})),n.d(t,"Ub",(function(){return Ge})),n.d(t,"Vb",(function(){return He})),n.d(t,"Zb",(function(){return qe})),n.d(t,"Wb",(function(){return Ke})),n.d(t,"Xb",(function(){return Xe})),n.d(t,"Yb",(function(){return Ye})),n.d(t,"bc",(function(){return Ze})),n.d(t,"ac",(function(){return Je})),n.d(t,"cc",(function(){return Qe})),n.d(t,"dc",(function(){return et})),n.d(t,"ec",(function(){return tt})),n.d(t,"fc",(function(){return nt})),n.d(t,"gc",(function(){return rt})),n.d(t,"hc",(function(){return at})),n.d(t,"ic",(function(){return st})),n.d(t,"jc",(function(){return it})),n.d(t,"lc",(function(){return ot})),n.d(t,"mc",(function(){return ut})),n.d(t,"oc",(function(){return ct})),n.d(t,"rc",(function(){return lt})),n.d(t,"sc",(function(){return dt})),n.d(t,"pc",(function(){return ht})),n.d(t,"qc",(function(){return pt})),n.d(t,"nc",(function(){return ft})),n.d(t,"tc",(function(){return mt})),n.d(t,"vc",(function(){return bt})),n.d(t,"wc",(function(){return gt})),n.d(t,"xc",(function(){return yt})),n.d(t,"yc",(function(){return xt})),n.d(t,"zc",(function(){return Ot})),n.d(t,"Ec",(function(){return kt})),n.d(t,"Cc",(function(){return vt})),n.d(t,"Dc",(function(){return wt})),n.d(t,"Bc",(function(){return It})),n.d(t,"Ac",(function(){return jt})),n.d(t,"Gc",(function(){return Nt})),n.d(t,"Kc",(function(){return St})),n.d(t,"Qc",(function(){return Tt})),n.d(t,"Hc",(function(){return Ct})),n.d(t,"Jc",(function(){return $t})),n.d(t,"Fc",(function(){return At})),n.d(t,"Mc",(function(){return Et})),n.d(t,"Lc",(function(){return Rt})),n.d(t,"Pc",(function(){return Ft})),n.d(t,"Ic",(function(){return _t})),n.d(t,"Oc",(function(){return Dt})),n.d(t,"Rc",(function(){return Mt})),n.d(t,"Sc",(function(){return zt})),n.d(t,"Tc",(function(){return Lt})),n.d(t,"Uc",(function(){return Pt})),n.d(t,"Vc",(function(){return Bt})),n.d(t,"Wc",(function(){return Wt})),n.d(t,"Xc",(function(){return Vt})),n.d(t,"Yc",(function(){return Ut})),n.d(t,"Zc",(function(){return Gt})),n.d(t,"ad",(function(){return Ht})),n.d(t,"Nc",(function(){return qt})),n.d(t,"hb",(function(){return Kt})),n.d(t,"uc",(function(){return Xt})),n.d(t,"bd",(function(){return Yt})),n.d(t,"jb",(function(){return Zt})),n.d(t,"kb",(function(){return Jt}));const r="Abs",a="Acos",s="Acosh",i="Add",o="AddN",u="All",c="Any",l="ArgMax",d="ArgMin",h="Asin",p="Asinh",f="Atan",m="Atanh",b="Atan2",g="AvgPool",y="AvgPoolGrad",x="AvgPool3D",O="AvgPool3DGrad",k="BatchMatMul",v="BatchToSpaceND",w="Bincount",I="BroadcastTo",j="Cast",N="Ceil",S="ClipByValue",T="Complex",C="ComplexAbs",$="Concat",A="Conv2D",E="Conv2DBackpropFilter",R="Conv2DBackpropInput",F="Conv3D",_="Conv3DBackpropFilterV2",D="Conv3DBackpropInputV2",M="Cos",z="Cosh",L="Cumsum",P="CropAndResize",B="DenseBincount",W="DepthToSpace",V="DepthwiseConv2dNative",U="DepthwiseConv2dNativeBackpropFilter",G="DepthwiseConv2dNativeBackpropInput",H="Diag",q="Dilation2D",K="Dilation2DBackpropInput",X="Dilation2DBackpropFilter",Y="RealDiv",Z="Elu",J="EluGrad",Q="Erf",ee="Equal",te="Exp",ne="ExpandDims",re="Expm1",ae="FFT",se="Fill",ie="FlipLeftRight",oe="Floor",ue="FloorDiv",ce="FusedBatchNorm",le="GatherV2",de="GatherNd",he="Greater",pe="GreaterEqual",fe="Identity",me="IFFT",be="Imag",ge="IsFinite",ye="IsInf",xe="IsNan",Oe="LeakyRelu",ke="Less",ve="LessEqual",we="LinSpace",Ie="Log",je="Log1p",Ne="LogicalAnd",Se="LogicalNot",Te="LogicalOr",Ce="LogSoftmax",$e="LRN",Ae="LRNGrad",Ee="Max",Re="Maximum",Fe="MaxPool",_e="MaxPoolGrad",De="MaxPool3D",Me="MaxPool3DGrad",ze="MaxPoolWithArgmax",Le="Mean",Pe="Min",Be="Minimum",We="MirrorPad",Ve="Mod",Ue="Multinomial",Ge="Multiply",He="Neg",qe="NotEqual",Ke="NonMaxSuppressionV3",Xe="NonMaxSuppressionV4",Ye="NonMaxSuppressionV5",Ze="OnesLike",Je="OneHot",Qe="Pack",et="PadV2",tt="Pool",nt="Pow",rt="Prelu",at="Prod",st="Range",it="Real",ot="Reciprocal",ut="Relu",ct="Reshape",lt="ResizeNearestNeighbor",dt="ResizeNearestNeighborGrad",ht="ResizeBilinear",pt="ResizeBilinearGrad",ft="Relu6",mt="Reverse",bt="Round",gt="Rsqrt",yt="ScatterNd",xt="Select",Ot="Selu",kt="Slice",vt="Sin",wt="Sinh",It="Sign",jt="Sigmoid",Nt="Softplus",St="Sqrt",Tt="Sum",Ct="SpaceToBatchND",$t="SplitV",At="Softmax",Et="SquaredDifference",Rt="Square",Ft="Sub",_t="SparseToDense",Dt="StridedSlice",Mt="Tan",zt="Tanh",Lt="Tile",Pt="TopK",Bt="Transform",Wt="Transpose",Vt="Unique",Ut="Unpack",Gt="UnsortedSegmentSum",Ht="ZerosLike",qt="Step",Kt="FromPixels",Xt="RotateWithOffset",Yt="_FusedMatMul",Zt="FusedConv2D",Jt="FusedDepthwiseConv2D"},function(e,t,n){"use strict";n.d(t,"c",(function(){return u})),n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return h}));var r=n(5),a=n(20),s=n(6),i=n(8),o=n(10);function u(e,t){let n=e;if(Object(i.A)(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||Object(i.A)(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Object(a.c)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&c(e,r,[]),r}function c(e,t,n){if(n=n||[],!Array.isArray(e)&&!Object(i.A)(e))return void Object(i.b)(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));Object(i.b)(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),Object(i.b)(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)c(e[t],r,n.concat(t))}function l(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function d(e,t,n,a="numeric"){if(e instanceof s.a)return l(a,e.dtype,t,n),e;let c=Object(i.r)(e);if("string"!==c&&["bool","int32","float32"].indexOf(a)>=0&&(c=a),l(a,c,t,n),null==e||!Object(i.A)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const d=u(e,c);Object(i.A)(e)||Array.isArray(e)||(e=[e]);const h="string"!==c?Object(o.toTypedArray)(e,c):Object(i.m)(e,[],!0);return r.a.makeTensor(h,d,c)}function h(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,a)=>d(e,`${t}[${a}]`,n,r)))}},function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return i}));var r=n(5),a=n(8);const s="__op";function i(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const i=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=s;const o=(...e)=>{r.a.startScope(n);try{const t=i(...e);return Object(a.x)(t)&&console.error("Cannot return a Promise inside of tidy."),r.a.endScope(t),t}catch(e){throw r.a.endScope(null),e}};return Object.defineProperty(o,"name",{value:n,configurable:!0}),o}},function(e,t,n){"use strict";n.d(t,"b",(function(){return y})),n.d(t,"a",(function(){return x}));var r=n(123),a=n(20),s=n(92),i=n(2),o=n(51),u=n(10),c=n(8);class l{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new h)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let i;const o=u.now();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();i=Promise.resolve({kernelMs:u.now()-o})}if(Object(a.c)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{d(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:i.then((e=>e.kernelMs)),extraInfo:i.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),r,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])}))}))}}function d(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class h{logKernelProfile(e,t,n,r,a,s){const i="number"==typeof r?c.L(`${r}ms`,9):r.error,o=c.L(e,25),u=t.rank,l=t.size,d=c.L(t.shape.toString(),14);let h="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;h+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${d}\t%c${l}\t%c${h}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var p=n(6),f=n(21);function m(e){return null!=e.kernelName}class b{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class g{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new b}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new l(this.backendInstance),!0}setupRegisteredKernels(){Object(o.d)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Object(o.d)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof r.b||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId)&&(this.registry[e]=n,this.pendingBackendInit=null,!0))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return g.nextTensorId++}nextVariableId(){return g.nextVariableId++}clone(e){const t=x.runKernel(i.qb,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e},n={dtype:"float32"};return x.runKernel(i.w,t,n)}})),[],{}),t}runKernel(e,t,n){if(!(null!=Object(o.c)(e,this.backendName)))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach((e=>{a+="complex64"===e.dtype?3:1}));const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let i,u;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=m(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(m(e)){const{kernelName:t,inputs:a,attrs:s}=e;null==this.backendName&&this.backend;const l=Object(o.c)(t,this.backendName);c.b(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();u=l.kernelFunc({inputs:a,attrs:s,backend:this.backend});const i=Array.isArray(u)?u:[u];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const o=i.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(r){const e=this.getTensorsForGradient(t,a,o);n=this.saveTensorsForBackwardMode(e)}return o}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();u=this.tidy((()=>t(this.backend,a)));const n=Array.isArray(u)?u:[u];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:d,attrs:h}=e,p=m(e)?null:e.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(l,d,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=i()})),r&&this.addTapeNode(l,d,t,p,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(d).map((e=>null!=d[e]?d[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(u)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=Object(o.b)(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(c.b(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),s=Object.keys(t).map((e=>t[e]))):s=e.map((e=>t[e]));const i=n.filter(((e,t)=>a[t]));return s.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&c.z(e[0])&&(a=e.map((e=>u.encodeString(e))));const s=r.write(a,t,n),i=new p.a(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(s),t=Object(c.f)(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){n=n||"float32";const a=new p.a(t,n,e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new p.c(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*c.g(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof p.c||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*c.g(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},u=Object(o.b)(e);null!=u&&(r=u.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=c.F(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Object(f.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(c.b(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));c.b(a instanceof p.a,(()=>"The result y returned by f() must be a tensor."));const s=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],i=s.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach((e=>r[e.id]=!0)),o=!0,a[s.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[a.id]=null==n?function(e){const t=Object(c.D)(Object(c.O)(e),"float32");return x.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],i=[];if(s.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(i);for(const t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const a=n((()=>o[t]()));if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const i=s.inputs[t];if(!c.a(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{const t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,s,(e=>this.tidy(e)),O);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:a,grads:r}}))}customGrad(e){return c.b(c.u(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;c.b(t.every((e=>e instanceof p.a)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};t.forEach(((e,t)=>{r[t]=e}));return this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),c.b(n.value instanceof p.a,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),c.b(c.u(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];c.b(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),c.b(s.every((e=>e instanceof p.a)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return s.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=Object(u.now)(),n=await this.backend.time(e);return n.wallMs=Object(u.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new b;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function y(){const e=Object(s.b)();if(null==e._tfengine){const t=new a.b(e);e._tfengine=new g(t)}return Object(a.d)(e._tfengine.ENV),Object(p.g)((()=>e._tfengine)),e._tfengine}g.nextTensorId=0,g.nextVariableId=0;const x=y();function O(e,t){const n={a:e,b:t};return x.runKernel(i.d,n)}},function(e,t,n){"use strict";n.d(t,"b",(function(){return d})),n.d(t,"g",(function(){return m})),n.d(t,"f",(function(){return b})),n.d(t,"e",(function(){return g})),n.d(t,"a",(function(){return y})),n.d(t,"d",(function(){return x})),n.d(t,"c",(function(){return O}));var r=n(92),a=n(8);function s(e,t,n,r){const s=Object(a.j)(t),o=function(e,t,n,r){const s=Object(a.O)(t),o=r[r.length-1],u=new Array(o).fill(0),l=t.length,d="complex64"===n?c(e):e;if(l>1)for(let e=0;e<s/o;e++){const t=e*o;for(let e=0;e<o;e++)u[e]=Math.max(u[e],i(d[t+e],0,n).length)}return u}(e,t,n,s),l=t.length,d=u(e,t,n,s,o),h=["Tensor"];return r&&(h.push(`  dtype: ${n}`),h.push(`  rank: ${l}`),h.push(`  shape: [${t}]`),h.push("  values:")),h.push(d.map((e=>"    "+e)).join("\n")),h.join("\n")}function i(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:Object(a.z)(e)?`'${e}'`:"bool"===n?o(e):parseFloat(e.toFixed(7)).toString(),Object(a.L)(r,t)}function o(e){return 0===e?"false":"true"}function u(e,t,n,r,a,s=!0){const l="complex64"===n?2:1,d=t[0],h=t.length;if(0===h){if("complex64"===n){return[i(c(e)[0],0,n)]}return"bool"===n?[o(e[0])]:[e[0].toString()]}if(1===h){if(d>20){const t=3*l;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((d-3)*l,d*l));return"complex64"===n&&(r=c(r),s=c(s)),["["+r.map(((e,t)=>i(e,a[t],n))).join(", ")+", ..., "+s.map(((e,t)=>i(e,a[d-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?c(e):Array.from(e)).map(((e,t)=>i(e,a[t],n))).join(", ")+"]"]}const p=t.slice(1),f=r.slice(1),m=r[0]*l,b=[];if(d>20){for(let t=0;t<3;t++){const r=t*m,s=r+m;b.push(...u(e.slice(r,s),p,n,f,a,!1))}b.push("...");for(let t=d-3;t<d;t++){const r=t*m,s=r+m;b.push(...u(e.slice(r,s),p,n,f,a,t===d-1))}}else for(let t=0;t<d;t++){const r=t*m,s=r+m;b.push(...u(e.slice(r,s),p,n,f,a,t===d-1))}const g=2===h?",":"";b[0]="["+b[0]+g;for(let e=1;e<b.length-1;e++)b[e]=" "+b[e]+g;let y=",\n";for(let e=2;e<h;e++)y+="\n";return b[b.length-1]=" "+b[b.length-1]+"]"+(s?"":y),b}function c(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var l=n(10);class d{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=a.O(e),null!=n){const e=n.length;a.b(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||a.n(t,this.size),this.strides=Object(a.j)(e)}set(e,...t){0===t.length&&(t=[0]),a.b(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return h().makeTensor(this.values,this.shape,this.dtype)}}let h=null,p=null,f=null;function m(e){h=e}function b(e){p=e}function g(e){f=e}class y{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=a.O(e),this.strides=Object(a.j)(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return p.buffer(this.shape,this.dtype,e)}bufferSync(){return p.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Object(a.T)(this.shape,e)}arraySync(){return Object(a.T)(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const e=h().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>l.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=h().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>l.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await h().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(h().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return p.print(this,e)}clone(){return this.throwIfDisposed(),p.clone(this)}toString(e=!1){return s(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),p.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),h().makeVariable(this,e,t,n)}}function x(){return Object(r.a)("Tensor",(()=>y))}Object.defineProperty(y,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),x();class O extends y{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!a.a(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);h().disposeTensor(this),this.dataId=e.dataId,h().incRef(this,null)}dispose(){h().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(O,Symbol.hasInstance,{value:e=>e instanceof y&&null!=e.assign&&e.assign instanceof Function})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({reshape_:function(e,t){const n={x:Object(s.a)(e,"x","reshape","string_or_numeric")},i={shape:t};return r.a.runKernel(a.oc,n,i)}})},function(e,t,n){"use strict";function r(e){let t=e.length,n=0,r=0;for(;t>0;)r=Math.random()*t|0,t--,n=e[t],e[t]=e[r],e[r]=n}function a(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n,r,a=e.length,s=0;for(;a>0;)s=Math.random()*a|0,a--,n=e[a],r=t[a],e[a]=e[s],t[a]=t[s],e[s]=n,t[s]=r}function s(e,t,n){return Math.max(e,Math.min(t,n))}function i(e){return e%2==0?e:e+1}function o(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function u(e,t){const n=Math.random();return t*n+(1-n)*e}function c(e,t){let n=0;for(let r=0;r<e.length;r++){const a=Number(e[r])-Number(t[r]);n+=a*a}return n}function l(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function d(e,t,n=""){l(b(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function h(e){l(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function p(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||A(e)&&!n)for(let r=0;r<e.length;++r)p(e[r],t,n);else t.push(e);return t}function f(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function m(e){return 0===e.length}function b(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function g(e){return e%1==0}function y(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function x(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function O(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return r(t),t}function k(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function v(e,t=(e=>0),n){return new Promise(((r,a)=>{let s=0;const i=()=>{if(e())return void r();s++;const o=t(s);null!=n&&s>=n?a():setTimeout(i,o)};i()}))}function w(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function I(e,t){const n=t.length;return l((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),l(e.every((e=>g(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function j(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:I(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function N(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function S(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function T(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function C(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function $(e,t){return"complex64"!==t&&(("float32"!==t||"complex64"===e)&&(("int32"!==t||"float32"===e||"complex64"===e)&&("bool"!==t||"bool"!==e)))}function A(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function E(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function R(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function F(e){return"string"==typeof e||e instanceof String}function _(e){return"boolean"==typeof e}function D(e){return"number"==typeof e}function M(e){return Array.isArray(e)?M(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":D(e)?"float32":F(e)?"string":_(e)?"bool":"float32"}function z(e){return!!(e&&e.constructor&&e.call&&e.apply)}function L(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function P(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function B(e,t,n){const r=new Array;if(1===t.length){const a=t[0];for(let t=0;t<a;t++)r[t]=n[e+t]}else{const a=t[0],s=t.slice(1),i=s.reduce(((e,t)=>e*t));for(let t=0;t<a;t++)r[t]=B(e+t*i,s,n)}return r}function W(e,t){if(0===e.length)return t[0];const n=e.reduce(((e,t)=>e*t));if(0===n)return[];if(n!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}.`);return B(0,e,t)}function V(e,t){const n=U(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function U(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function G(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return W(e,new Float32Array(n));if("int32"===t)return W(e,new Int32Array(n));if("bool"===t)return W(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function H(e){e.forEach((t=>{l(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function q(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function K(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function X(e){return e&&e.then&&"function"==typeof e.then}n.d(t,"M",(function(){return r})),n.d(t,"N",(function(){return a})),n.d(t,"i",(function(){return s})),n.d(t,"H",(function(){return i})),n.d(t,"R",(function(){return o})),n.d(t,"J",(function(){return u})),n.d(t,"l",(function(){return c})),n.d(t,"b",(function(){return l})),n.d(t,"e",(function(){return d})),n.d(t,"d",(function(){return h})),n.d(t,"m",(function(){return p})),n.d(t,"O",(function(){return f})),n.d(t,"y",(function(){return m})),n.d(t,"a",(function(){return b})),n.d(t,"v",(function(){return g})),n.d(t,"S",(function(){return y})),n.d(t,"P",(function(){return x})),n.d(t,"k",(function(){return O})),n.d(t,"L",(function(){return k})),n.d(t,"K",(function(){return v})),n.d(t,"s",(function(){return w})),n.d(t,"I",(function(){return I})),n.d(t,"Q",(function(){return j})),n.d(t,"o",(function(){return N})),n.d(t,"n",(function(){return S})),n.d(t,"h",(function(){return T})),n.d(t,"B",(function(){return C})),n.d(t,"p",(function(){return $})),n.d(t,"A",(function(){return A})),n.d(t,"g",(function(){return E})),n.d(t,"f",(function(){return R})),n.d(t,"z",(function(){return F})),n.d(t,"t",(function(){return _})),n.d(t,"w",(function(){return D})),n.d(t,"r",(function(){return M})),n.d(t,"u",(function(){return z})),n.d(t,"G",(function(){return L})),n.d(t,"j",(function(){return P})),n.d(t,"T",(function(){return W})),n.d(t,"D",(function(){return V})),n.d(t,"F",(function(){return U})),n.d(t,"E",(function(){return G})),n.d(t,"c",(function(){return H})),n.d(t,"C",(function(){return q})),n.d(t,"q",(function(){return K})),n.d(t,"x",(function(){return X}))},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(2),s=n(21),i=n(3),o=n(4);const u=Object(o.b)({mul_:function(e,t){let n=Object(i.a)(e,"a","mul"),o=Object(i.a)(t,"b","mul");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernel(a.Ub,u)}})},function(e,t,n){"use strict";n.r(t),n.d(t,"createScalarValue",(function(){return s})),n.d(t,"toTypedArray",(function(){return i})),n.d(t,"now",(function(){return o})),n.d(t,"fetch",(function(){return u})),n.d(t,"encodeString",(function(){return c})),n.d(t,"decodeString",(function(){return l}));var r=n(20),a=n(8);function s(e,t){return"string"===t?c(e):i([e],t)}function i(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=a.m(e)),Object(r.c)().getBool("DEBUG")&&a.h(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function o(){return Object(r.c)().platform.now()}function u(e,t){return Object(r.c)().platform.fetch(e,t)}function c(e,t="utf-8"){return t=t||"utf-8",Object(r.c)().platform.encode(e,t)}function l(e,t="utf-8"){return t=t||"utf-8",Object(r.c)().platform.decode(e,t)}n.d(t,"shuffle",(function(){return a.M})),n.d(t,"shuffleCombo",(function(){return a.N})),n.d(t,"clamp",(function(){return a.i})),n.d(t,"nearestLargerEven",(function(){return a.H})),n.d(t,"sum",(function(){return a.R})),n.d(t,"randUniform",(function(){return a.J})),n.d(t,"distSquared",(function(){return a.l})),n.d(t,"assert",(function(){return a.b})),n.d(t,"assertShapesMatch",(function(){return a.e})),n.d(t,"assertNonNull",(function(){return a.d})),n.d(t,"flatten",(function(){return a.m})),n.d(t,"sizeFromShape",(function(){return a.O})),n.d(t,"isScalarShape",(function(){return a.y})),n.d(t,"arraysEqual",(function(){return a.a})),n.d(t,"isInt",(function(){return a.v})),n.d(t,"tanh",(function(){return a.S})),n.d(t,"sizeToSquarishShape",(function(){return a.P})),n.d(t,"createShuffledIndices",(function(){return a.k})),n.d(t,"rightPad",(function(){return a.L})),n.d(t,"repeatedTry",(function(){return a.K})),n.d(t,"inferFromImplicitShape",(function(){return a.s})),n.d(t,"parseAxisParam",(function(){return a.I})),n.d(t,"squeezeShape",(function(){return a.Q})),n.d(t,"getTypedArrayFromDType",(function(){return a.o})),n.d(t,"getArrayFromDType",(function(){return a.n})),n.d(t,"checkConversionForErrors",(function(){return a.h})),n.d(t,"isValidDtype",(function(){return a.B})),n.d(t,"hasEncodingLoss",(function(){return a.p})),n.d(t,"isTypedArray",(function(){return a.A})),n.d(t,"bytesPerElement",(function(){return a.g})),n.d(t,"bytesFromStringArray",(function(){return a.f})),n.d(t,"isString",(function(){return a.z})),n.d(t,"isBoolean",(function(){return a.t})),n.d(t,"isNumber",(function(){return a.w})),n.d(t,"inferDtype",(function(){return a.r})),n.d(t,"isFunction",(function(){return a.u})),n.d(t,"nearestDivisor",(function(){return a.G})),n.d(t,"computeStrides",(function(){return a.j})),n.d(t,"toNestedArray",(function(){return a.T})),n.d(t,"makeOnesTypedArray",(function(){return a.D})),n.d(t,"makeZerosTypedArray",(function(){return a.F})),n.d(t,"makeZerosNestedTypedArray",(function(){return a.E})),n.d(t,"assertNonNegativeIntegerDimensions",(function(){return a.c})),n.d(t,"locToIndex",(function(){return a.C})),n.d(t,"indexToLoc",(function(){return a.q})),n.d(t,"isPromise",(function(){return a.x}))},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(2),s=n(3),i=n(8),o=n(4);const u=Object(o.b)({cast_:function(e,t){const n=Object(s.a)(e,"x","cast");if(!i.B(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const o={x:n},u={dtype:t};return r.a.runKernel(a.w,o,u)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(2),s=n(21),i=n(3),o=n(4);const u=Object(o.b)({add_:function(e,t){let n=Object(i.a)(e,"a","add"),o=Object(i.a)(t,"b","add");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernel(a.d,u)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(2),s=n(21),i=n(3),o=n(4);const u=Object(o.b)({sub_:function(e,t){let n=Object(i.a)(e,"a","sub"),o=Object(i.a)(t,"b","sub");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernel(a.Pc,u)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(2),s=n(21),i=n(3),o=n(97),u=n(4);const c=Object(u.b)({div_:function(e,t){let n=Object(i.a)(e,"a","div"),u=Object(i.a)(t,"b","div");if([n,u]=Object(s.makeTypesMatch)(n,u),"int32"===n.dtype&&"int32"===u.dtype)return Object(o.a)(n,u);const c={a:n,b:u};return r.a.runKernel(a.kc,c,{})}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n(8),a=n(42);function s(e,t){if((Object(r.A)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Object(r.A)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Object(a.a)(e,[],[],t)}},function(e,t,n){"use strict";function r(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function a(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function s(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s){throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`)}n.unshift(r)}}return n}n.d(t,"b",(function(){return r})),n.d(t,"c",(function(){return a})),n.d(t,"a",(function(){return s}))},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(2),s=n(3),i=n(11),o=n(4);const u=Object(o.b)({sum_:function(e,t=null,n=!1){let o=Object(s.a)(e,"x","sum");"bool"===o.dtype&&(o=Object(i.a)(o,"int32"));const u={x:o},c={axis:t,keepDims:n};return r.a.runKernel(a.Qc,u,c)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({zerosLike_:function(e){const t={x:Object(s.a)(e,"x","zerosLike")};return r.a.runKernel(a.ad,t)}})},function(e,t,n){"use strict";n.d(t,"b",(function(){return a.a})),n.d(t,"c",(function(){return s.a})),n.d(t,"d",(function(){return i.a})),n.d(t,"e",(function(){return o.a})),n.d(t,"f",(function(){return u.a})),n.d(t,"g",(function(){return c.a})),n.d(t,"h",(function(){return l.a})),n.d(t,"i",(function(){return d.a})),n.d(t,"j",(function(){return h.a})),n.d(t,"k",(function(){return p.a})),n.d(t,"l",(function(){return f.a})),n.d(t,"m",(function(){return m.a})),n.d(t,"n",(function(){return b.a})),n.d(t,"o",(function(){return g.a})),n.d(t,"p",(function(){return y.a})),n.d(t,"q",(function(){return x.a})),n.d(t,"r",(function(){return T})),n.d(t,"w",(function(){return C.a})),n.d(t,"s",(function(){return $.a})),n.d(t,"t",(function(){return E})),n.d(t,"u",(function(){return R})),n.d(t,"v",(function(){return F})),n.d(t,"x",(function(){return _.a})),n.d(t,"z",(function(){return D.a})),n.d(t,"A",(function(){return M.a})),n.d(t,"B",(function(){return z.a})),n.d(t,"C",(function(){return L.a})),n.d(t,"D",(function(){return P.a})),n.d(t,"E",(function(){return B.a})),n.d(t,"F",(function(){return W.a})),n.d(t,"G",(function(){return k.a})),n.d(t,"H",(function(){return V})),n.d(t,"I",(function(){return U})),n.d(t,"J",(function(){return G})),n.d(t,"K",(function(){return H})),n.d(t,"L",(function(){return q.a})),n.d(t,"M",(function(){return K.a})),n.d(t,"N",(function(){return X.a})),n.d(t,"O",(function(){return Y.a})),n.d(t,"P",(function(){return J})),n.d(t,"Q",(function(){return Q.a})),n.d(t,"R",(function(){return ee.a})),n.d(t,"T",(function(){return te.a})),n.d(t,"U",(function(){return ne.a})),n.d(t,"V",(function(){return re.a})),n.d(t,"W",(function(){return ae.a})),n.d(t,"X",(function(){return oe})),n.d(t,"Y",(function(){return ue.a})),n.d(t,"Z",(function(){return ce.a})),n.d(t,"ab",(function(){return le.a})),n.d(t,"bb",(function(){return de.a})),n.d(t,"db",(function(){return he.a})),n.d(t,"fb",(function(){return pe.a})),n.d(t,"gb",(function(){return fe.a})),n.d(t,"hb",(function(){return me.a})),n.d(t,"ib",(function(){return be.a})),n.d(t,"jb",(function(){return ge.a})),n.d(t,"kb",(function(){return Oe})),n.d(t,"mb",(function(){return ke.a})),n.d(t,"nb",(function(){return ve.a})),n.d(t,"ob",(function(){return we.a})),n.d(t,"qb",(function(){return Ie.a})),n.d(t,"sb",(function(){return je.a})),n.d(t,"tb",(function(){return Ne.a})),n.d(t,"vb",(function(){return Se.a})),n.d(t,"zb",(function(){return Te.a})),n.d(t,"Ab",(function(){return Ce.a})),n.d(t,"Bb",(function(){return $e.a})),n.d(t,"Cb",(function(){return Ae.a})),n.d(t,"Db",(function(){return Ee.a})),n.d(t,"Eb",(function(){return Re.a})),n.d(t,"Gb",(function(){return Fe.a})),n.d(t,"Hb",(function(){return _e.a})),n.d(t,"Ib",(function(){return De.a})),n.d(t,"Jb",(function(){return Me.a})),n.d(t,"Kb",(function(){return ze.a})),n.d(t,"Lb",(function(){return Le.a})),n.d(t,"Mb",(function(){return Pe.a})),n.d(t,"Nb",(function(){return Be.a})),n.d(t,"Ob",(function(){return We.a})),n.d(t,"Pb",(function(){return Ve.a})),n.d(t,"Qb",(function(){return Ue.a})),n.d(t,"Sb",(function(){return v.a})),n.d(t,"Tb",(function(){return Ge.a})),n.d(t,"Ub",(function(){return He.a})),n.d(t,"Vb",(function(){return qe.a})),n.d(t,"Wb",(function(){return Ke.a})),n.d(t,"Xb",(function(){return Xe.a})),n.d(t,"Yb",(function(){return Ye.a})),n.d(t,"Zb",(function(){return Ze.a})),n.d(t,"ac",(function(){return Je.a})),n.d(t,"bc",(function(){return Qe.a})),n.d(t,"cc",(function(){return et.a})),n.d(t,"dc",(function(){return at})),n.d(t,"fc",(function(){return w.a})),n.d(t,"gc",(function(){return st})),n.d(t,"hc",(function(){return it.a})),n.d(t,"ic",(function(){return ot.a})),n.d(t,"kc",(function(){return ut.a})),n.d(t,"lc",(function(){return ct.a})),n.d(t,"mc",(function(){return lt.a})),n.d(t,"nc",(function(){return dt.a})),n.d(t,"pc",(function(){return ht})),n.d(t,"qc",(function(){return pt.a})),n.d(t,"rc",(function(){return ft})),n.d(t,"sc",(function(){return mt})),n.d(t,"tc",(function(){return bt})),n.d(t,"uc",(function(){return gt})),n.d(t,"vc",(function(){return yt.a})),n.d(t,"wc",(function(){return xt.a})),n.d(t,"xc",(function(){return Ot.a})),n.d(t,"yc",(function(){return kt.a})),n.d(t,"zc",(function(){return vt.a})),n.d(t,"Ac",(function(){return wt})),n.d(t,"Bc",(function(){return jt})),n.d(t,"Cc",(function(){return Nt})),n.d(t,"Dc",(function(){return St.a})),n.d(t,"Ec",(function(){return Tt.a})),n.d(t,"Fc",(function(){return Ct.a})),n.d(t,"Gc",(function(){return $t.a})),n.d(t,"Hc",(function(){return At.a})),n.d(t,"Ic",(function(){return Et.a})),n.d(t,"Jc",(function(){return ye.a})),n.d(t,"Kc",(function(){return Rt.a})),n.d(t,"Lc",(function(){return Ft})),n.d(t,"Mc",(function(){return _t})),n.d(t,"Nc",(function(){return Dt})),n.d(t,"Oc",(function(){return Mt})),n.d(t,"Qc",(function(){return zt.a})),n.d(t,"Rc",(function(){return Lt.a})),n.d(t,"Sc",(function(){return Pt.a})),n.d(t,"Uc",(function(){return Bt.a})),n.d(t,"Vc",(function(){return Wt.a})),n.d(t,"Wc",(function(){return Vt.a})),n.d(t,"Xc",(function(){return j.a})),n.d(t,"Yc",(function(){return Ut.a})),n.d(t,"ad",(function(){return Gt.a})),n.d(t,"bd",(function(){return Ht.a})),n.d(t,"cd",(function(){return N.a})),n.d(t,"dd",(function(){return qt})),n.d(t,"ed",(function(){return Kt})),n.d(t,"fd",(function(){return Xt})),n.d(t,"gd",(function(){return Yt})),n.d(t,"hd",(function(){return Zt.a})),n.d(t,"id",(function(){return Jt.a})),n.d(t,"jd",(function(){return Qt.a})),n.d(t,"lb",(function(){return en.a})),n.d(t,"ub",(function(){return tn.a})),n.d(t,"yb",(function(){return nn.a})),n.d(t,"Pc",(function(){return rn.a})),n.d(t,"md",(function(){return an.a})),n.d(t,"nd",(function(){return sn.a})),n.d(t,"od",(function(){return nt.a})),n.d(t,"pd",(function(){return on.a})),n.d(t,"qd",(function(){return un.a})),n.d(t,"rd",(function(){return cn.a})),n.d(t,"sd",(function(){return ln.a})),n.d(t,"td",(function(){return dn.a})),n.d(t,"ud",(function(){return rt.a})),n.d(t,"vd",(function(){return hn.a})),n.d(t,"wd",(function(){return pn.a})),n.d(t,"xd",(function(){return S.a})),n.d(t,"yd",(function(){return fn.a})),n.d(t,"zd",(function(){return mn.a})),n.d(t,"Ad",(function(){return gn})),n.d(t,"Bd",(function(){return yn.a})),n.d(t,"Cd",(function(){return xn})),n.d(t,"Dd",(function(){return On})),n.d(t,"Ed",(function(){return kn})),n.d(t,"Fd",(function(){return xe.a})),n.d(t,"Gd",(function(){return vn.a})),n.d(t,"Id",(function(){return wn.a})),n.d(t,"Jd",(function(){return In.a})),n.d(t,"Kd",(function(){return jn.a})),n.d(t,"Ld",(function(){return Nn.a})),n.d(t,"Md",(function(){return Sn})),n.d(t,"Nd",(function(){return Tn.a})),n.d(t,"Od",(function(){return Cn.a})),n.d(t,"Pd",(function(){return $n.a})),n.d(t,"Qd",(function(){return An.a})),n.d(t,"y",(function(){return En})),n.d(t,"Hd",(function(){return Rn.a})),n.d(t,"jc",(function(){return Fn.a})),n.d(t,"ec",(function(){return Dn})),n.d(t,"Tc",(function(){return Mn.a})),n.d(t,"kd",(function(){return zn.a})),n.d(t,"rb",(function(){return Ln.a})),n.d(t,"cb",(function(){return Bn})),n.d(t,"eb",(function(){return Wn})),n.d(t,"S",(function(){return Vn})),n.d(t,"xb",(function(){return Un})),n.d(t,"oc",(function(){return I.b})),n.d(t,"a",(function(){return I.a})),n.d(t,"wb",(function(){return Mr})),n.d(t,"Fb",(function(){return zr})),n.d(t,"Rb",(function(){return Lr})),n.d(t,"ld",(function(){return _r})),n.d(t,"pb",(function(){return r})),n.d(t,"Zc",(function(){return Dr}));var r={};n.r(r),n.d(r,"conv2d",(function(){return Zn})),n.d(r,"depthwiseConv2d",(function(){return er})),n.d(r,"matMul",(function(){return tr}));var a=n(36),s=n(170),i=n(171),o=n(12),u=n(172),c=n(132),l=n(133),d=n(134),h=n(135),p=n(173),f=n(174),m=n(175),b=n(136),g=n(176),y=n(99),x=n(177),O=n(3),k=n(27),v=n(25),w=n(9),I=n(4),j=n(70),N=n(24),S=n(124);const T=Object(I.b)({basicLSTMCell_:function(e,t,n,r,a,s){const i=Object(O.a)(e,"forgetBias","basicLSTMCell"),u=Object(O.a)(t,"lstmKernel","basicLSTMCell"),c=Object(O.a)(n,"lstmBias","basicLSTMCell"),l=Object(O.a)(r,"data","basicLSTMCell"),d=Object(O.a)(a,"c","basicLSTMCell"),h=Object(O.a)(s,"h","basicLSTMCell"),p=Object(k.a)([l,h],1),f=Object(v.a)(p,u),m=Object(o.a)(f,c),b=m.shape[0],g=m.shape[1]/4,y=[b,g],x=Object(N.a)(m,[0,0],y),I=Object(N.a)(m,[0,g],y),T=Object(N.a)(m,[0,2*g],y),C=Object(N.a)(m,[0,3*g],y),$=Object(o.a)(Object(w.a)(Object(j.a)(x),Object(S.a)(I)),Object(w.a)(d,Object(j.a)(Object(o.a)(i,T))));return[$,Object(w.a)(Object(S.a)($),Object(j.a)(C))]}});var C=n(77),$=n(69),A=n(8);const E=Object(I.b)({batchNorm2d_:function(e,t,n,r,a,s){const i=Object(O.a)(e,"x","batchNorm"),o=Object(O.a)(t,"mean","batchNorm"),u=Object(O.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(O.a)(a,"scale","batchNorm")),null!=r&&(l=Object(O.a)(r,"offset","batchNorm")),A.b(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),A.b(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),A.b(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&A.b(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${c.rank}.`)),null!=l&&A.b(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`)),Object($.a)(i,o,u,l,c,s)}});const R=Object(I.b)({batchNorm3d_:function(e,t,n,r,a,s){const i=Object(O.a)(e,"x","batchNorm"),o=Object(O.a)(t,"mean","batchNorm"),u=Object(O.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(O.a)(a,"scale","batchNorm")),null!=r&&(l=Object(O.a)(r,"offset","batchNorm")),A.b(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),A.b(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),A.b(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&A.b(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${c.rank}.`)),null!=l&&A.b(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`)),Object($.a)(i,o,u,l,c,s)}});const F=Object(I.b)({batchNorm4d_:function(e,t,n,r,a,s){const i=Object(O.a)(e,"x","batchNorm"),o=Object(O.a)(t,"mean","batchNorm"),u=Object(O.a)(n,"variance","batchNorm");let c,l;return null!=a&&(c=Object(O.a)(a,"scale","batchNorm")),null!=r&&(l=Object(O.a)(r,"offset","batchNorm")),A.b(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),A.b(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),A.b(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&A.b(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${c.rank}.`)),null!=l&&A.b(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`)),Object($.a)(i,o,u,l,c,s)}});var _=n(178),D=n(87),M=n(39),z=n(11),L=n(179),P=n(180),B=n(57),W=n(48);const V=Object(I.b)({concat1d_:function(e){return Object(k.a)(e,0)}});const U=Object(I.b)({concat2d_:function(e,t){return Object(k.a)(e,t)}});const G=Object(I.b)({concat3d_:function(e,t){return Object(k.a)(e,t)}});const H=Object(I.b)({concat4d_:function(e,t){return Object(k.a)(e,t)}});var q=n(137),K=n(54),X=n(138),Y=n(181),Z=n(164);const J=Object(I.b)({conv3dTranspose_:function(e,t,n,r,a){const s=Object(O.a)(e,"x","conv3dTranspose"),i=Object(O.a)(t,"filter","conv3dTranspose");return Object(Z.a)(n,s,i,r,a)}});var Q=n(100),ee=n(139),te=n(101),ne=n(182),re=n(140),ae=n(78),se=n(5),ie=n(2);const oe=Object(I.b)({diag_:function(e){const t={x:Object(O.a)(e,"x","diag")};return se.a.runKernel(ie.R,t)}});var ue=n(141),ce=n(14),le=n(142),de=n(143),he=n(102),pe=n(79),fe=n(183),me=n(35),be=n(52),ge=n(184),ye=n(7),xe=n(71);const Oe=Object(I.b)({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=Object(M.a)([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);const i=Object(ye.a)(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return Object(xe.a)(Object(be.a)(i,0),[n[0],1,1]);if(2===n.length)return Object(xe.a)(Object(be.a)(Object(be.a)(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Object(xe.a)(Object(be.a)(Object(be.a)(Object(be.a)(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var ke=n(98),ve=n(103),we=n(97),Ie=n(80),je=n(41),Ne=n(55),Se=n(104),Te=n(185),Ce=n(186),$e=n(187),Ae=n(105),Ee=n(106),Re=n(56),Fe=n(188),_e=n(144),De=n(60),Me=n(145),ze=n(189),Le=n(190),Pe=n(107),Be=n(49),We=n(81),Ve=n(108),Ue=n(147),Ge=n(58),He=n(109),qe=n(191),Ke=n(192),Xe=n(76),Ye=n(74),Ze=n(88),Je=n(110),Qe=n(148),et=n(149),tt=n(33),nt=n(22),rt=n(13);const at=Object(I.b)({moments_:function(e,t=null,n=!1){e=Object(O.a)(e,"x","moments");const r=Object(A.I)(t,e.shape),a=Object(Ye.a)(e,r,n);let s=a.shape;n||(s=Object(tt.e)(a.shape,r));const i=Object(nt.a)(Object(rt.a)(Object(z.a)(e,"float32"),Object(ye.a)(a,s)));return{mean:a,variance:Object(Ye.a)(i,r,n)}}});const st=Object(I.b)({multiRNNCell_:function(e,t,n,r){const a=Object(O.a)(t,"data","multiRNNCell"),s=Object(O.b)(n,"c","multiRNNCell"),i=Object(O.b)(r,"h","multiRNNCell");let o=a;const u=[];for(let t=0;t<e.length;t++){const n=e[t](o,s[t],i[t]);u.push(n[0]),u.push(n[1]),o=n[1]}const c=[],l=[];for(let e=0;e<u.length;e+=2)c.push(u[e]),l.push(u[e+1]);return[c,l]}});var it=n(193),ot=n(26),ut=n(111),ct=n(89),lt=n(64),dt=n(194);const ht=Object(I.b)({outerProduct_:function(e,t){const n=Object(O.a)(e,"v1","outerProduct"),r=Object(O.a)(t,"v2","outerProduct");A.b(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const a=Object(ye.a)(n,[-1,1]),s=Object(ye.a)(r,[1,-1]);return Object(v.a)(a,s)}});var pt=n(46);const ft=Object(I.b)({pad1d_:function(e,t,n=0){return Object(A.b)(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),Object(pt.a)(e,[t],n)}});const mt=Object(I.b)({pad2d_:function(e,t,n=0){return Object(A.b)(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Object(pt.a)(e,t,n)}});const bt=Object(I.b)({pad3d_:function(e,t,n=0){return Object(A.b)(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Object(pt.a)(e,t,n)}});const gt=Object(I.b)({pad4d_:function(e,t,n=0){return Object(A.b)(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Object(pt.a)(e,t,n)}});var yt=n(150),xt=n(45),Ot=n(112),kt=n(131),vt=n(151);const wt=Object(I.b)({rand_:function(e,t,n){const r=Object(A.O)(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let e=0;e<r;e++)a[e]=t();return se.a.makeTensor(a,e,n)}});var It=n(85);const jt=Object(I.b)({randomGamma_:function(e,t,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const s=new It.b(t,n,r,a),i=Object(M.a)(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});const Nt=Object(I.b)({randomNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const s=new It.a(t,n,r,!1,a),i=Object(M.a)(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}});var St=n(152),Tt=n(125),Ct=n(90),$t=n(195),At=n(66),Et=n(113),Rt=n(40);const Ft=Object(I.b)({reverse1d_:function(e){const t=Object(O.a)(e,"x","reverse");return A.b(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),Object(Rt.a)(t,0)}});const _t=Object(I.b)({reverse2d_:function(e,t){const n=Object(O.a)(e,"x","reverse");return A.b(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),Object(Rt.a)(n,t)}});const Dt=Object(I.b)({reverse3d_:function(e,t){const n=Object(O.a)(e,"x","reverse");return A.b(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),Object(Rt.a)(n,t)}});const Mt=Object(I.b)({reverse4d_:function(e,t){const n=Object(O.a)(e,"x","reverse");return A.b(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),Object(Rt.a)(n,t)}});var zt=n(196),Lt=n(153),Pt=n(15),Bt=n(154),Wt=n(155),Vt=n(197),Ut=n(198),Gt=n(156),Ht=n(157);const qt=Object(I.b)({slice1d_:function(e,t,n){const r=Object(O.a)(e,"x","slice1d");return A.b(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Object(N.a)(r,[t],[n])}});const Kt=Object(I.b)({slice2d_:function(e,t,n){const r=Object(O.a)(e,"x","slice2d");return A.b(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Object(N.a)(r,t,n)}});const Xt=Object(I.b)({slice3d_:function(e,t,n){const r=Object(O.a)(e,"x","slice3d");return A.b(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Object(N.a)(r,t,n)}});const Yt=Object(I.b)({slice4d_:function(e,t,n){const r=Object(O.a)(e,"x","slice4d");return A.b(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Object(N.a)(r,t,n)}});var Zt=n(199),Jt=n(146),Qt=n(82),en=n(114),tn=n(91),nn=n(158),rn=n(115),an=n(61),sn=n(32),on=n(116),un=n(83),cn=n(50),ln=n(67),dn=n(200),hn=n(17),pn=n(201),fn=n(84),mn=n(62),bn=n(42);function gn(e,t,n){if(Object(A.d)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Object(O.c)(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Object(bn.a)(e,t,r,n)}var yn=n(159);function xn(e,t,n){if(Object(A.d)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Object(O.c)(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Object(bn.a)(e,t,r,n)}function On(e,t,n){if(Object(A.d)(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Object(O.c)(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Object(bn.a)(e,t,r,n)}function kn(e,t,n){if(Object(A.d)(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Object(O.c)(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return t=t||r,Object(bn.a)(e,t,r,n)}var vn=n(160),wn=n(202),In=n(161),jn=n(117),Nn=n(68);function Sn(e,t=!0,n,r){return se.a.makeVariable(e,t,n,r)}var Tn=n(31),Cn=n(162),$n=n(65),An=n(18);const En=async function(e,t,n){const r=Object(O.a)(e,"tensor","boolMask"),a=Object(O.a)(t,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;A.b(i>0,(()=>"mask cannot be scalar")),A.e(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let e=s;e<s+i;e++)u*=o[e];const c=o.slice(0,s).concat([u],o.slice(s+i)),l=Object(ye.a)(r,c),d=Object(ye.a)(a,[-1]),h=await Object(Cn.a)(d),p=Object(un.a)(h,[1]),f=Object(Ie.a)(l,p,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),p.dispose(),l.dispose(),d.dispose(),h.dispose(),f};var Rn=n(43),Fn=n(118),_n=n(21);const Dn=Object(I.b)({movingAverage_:function(e,t,n,r,a=!0){const s=Object(O.a)(e,"v","movingAverage"),i=Object(O.a)(t,"x","movingAverage"),u=Object(O.a)(n,"decay","movingAverage");Object(_n.assertTypesMatch)(s,i),A.b(A.a(s.shape,i.shape),(()=>"Shape mismatch in v and x"));const c=Object(Pt.a)(1),l=Object(rt.a)(c,u);let d=Object(w.a)(Object(rt.a)(i,s),l);if(a){A.b(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=Object(O.a)(r,"step","movingAverage");d=Object(ce.a)(d,Object(rt.a)(c,Object(xt.a)(u,e)))}return Object(o.a)(s,d)}});var Mn=n(203),zn=n(206),Ln=n(204),Pn=n(6);const Bn=Object(I.b)({dropout_:function(e,t,n,r){const a=Object(O.a)(e,"x","dropout");if(A.b("float32"===a.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`)),A.b(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Pn.a?a.clone():a;const s=function(e,t){if(null==t)return e.shape.slice();if(A.a(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),i=1-t,u=Object(ce.a)(Object(ve.a)(Object(o.a)(Object(St.a)(s,0,1,"float32",r),i)),i);return Object(w.a)(a,u)}});function Wn(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function Vn(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return Object(mn.a)(a,"float32")}const Un=async function(e,t,n=1){const r=Object(O.a)(e,"predictions","inTopK"),a=Object(O.a)(t,"targets","inTopK");Object(A.b)(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),Object(A.b)(r.rank-1===a.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`)),Object(A.e)(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];Object(A.b)(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));const i=await r.data(),o=await a.data(),[u,c]=[i.length/s,s],l=Object(A.o)("bool",u);for(let e=0;e<u;e++){const t=e*c,r=i.subarray(t,t+c),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort(((e,t)=>t.value-e.value)),l[e]=0;for(let t=0;t<n;t++)if(a[t].index===o[e]){l[e]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),Object(fn.a)(l,a.shape,"bool")};var Gn=n(29),Hn=n(16),qn=n(121),Kn=n(119),Xn=n(28),Yn=n(37);const Zn=Object(I.b)({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:u,activation:c="linear",preluActivationWeights:l,leakyreluAlpha:d}){if(c=c||"linear",!1===Object(Yn.d)(se.a.state.gradientDepth,c)){let h=Object(K.a)(e,t,n,r,a,s,i);return null!=u&&(h=Object(o.a)(h,u)),Object(Yn.a)(h,c,l,d)}const h=Object(O.a)(e,"x","conv2d"),p=Object(O.a)(t,"filter","conv2d");let f=h,m=!1;3===h.rank&&(m=!0,f=Object(ye.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),A.b(4===f.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`)),A.b(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),null!=i&&A.b(A.v(r),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),A.b(f.shape[3]===p.shape[2],(()=>`Error in conv2d: depth of input (${f.shape[3]}) must match input depth for filter ${p.shape[2]}.`)),A.b(Xn.h(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),A.b("NHWC"===a,(()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`));const b=Xn.a(f.shape,p.shape,n,s,r,i);let g,y;null!=u&&(g=Object(O.a)(u,"bias","fused conv2d"),[g]=Object(_n.makeTypesMatch)(g,h),Hn.a(b.outShape,g.shape)),null!=l&&(y=Object(O.a)(l,"prelu weights","fused conv2d"));const x=(e,t)=>{const[a,i,o,u]=t,l=Object(Yn.c)(e,o,c);A.b(Xn.i(s),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const d=[Object(Kn.a)(i.shape,l,a,n,r),Object(qn.a)(i,l,a.shape,n,r)];if(null!=u){const e=Object(Yn.b)(u,l);d.push(e)}return d},k={x:f,filter:p,bias:g,preluActivationWeights:y},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:c,leakyreluAlpha:d};if(null==u){return Object(Gn.a)(((e,t,n)=>{let r=se.a.runKernel(ie.jb,k,v);return n([t,e,r]),m&&(r=Object(ye.a)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}))(f,p)}return Object(Gn.a)(((e,t,n,r)=>{let a=se.a.runKernel(ie.jb,k,v);return r([t,e,a,n]),m&&(a=Object(ye.a)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}))(f,p,g)}});var Jn=n(168),Qn=n(167);const er=Object(I.b)({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:u,activation:c="linear",preluActivationWeights:l,leakyreluAlpha:d}){if(!1===Object(Yn.d)(se.a.state.gradientDepth,c)){let h=Object(ae.a)(e,t,n,r,a,s,i);return null!=u&&(h=Object(o.a)(h,u)),Object(Yn.a)(h,c,l,d)}const h=Object(O.a)(e,"x","depthwiseConv2d"),p=Object(O.a)(t,"filter","depthwiseConv2d");let f=h,m=!1;3===h.rank&&(m=!0,f=Object(ye.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),A.b(4===f.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`)),A.b(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),A.b(f.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==s&&(s=[1,1]),A.b(Xn.h(n,s),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),null!=i&&A.b(A.v(r),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`));const b=Xn.a(f.shape,p.shape,n,s,r,i,!0);let g,y;null!=u&&(g=Object(O.a)(u,"bias","fused conv2d"),[g]=Object(_n.makeTypesMatch)(g,h),Hn.a(b.outShape,g.shape)),null!=l&&(y=Object(O.a)(l,"prelu weights","fused depthwiseConv2d"));const x=(e,t)=>{A.b(Xn.i(s),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`));const[a,o,u,l]=t,d=Object(Yn.c)(e,u,c),h=Object(Qn.a)(o.shape,d,a,n,r,s,i),p=Object(Jn.a)(o,d,a.shape,n,r,s,i);if(null!=l){return[h,p,Object(Yn.b)(g,d)]}return[h,p]},k={x:f,filter:p,bias:g,preluActivationWeights:y},v={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:c,leakyreluAlpha:d};if(null==u){return Object(Gn.a)(((e,t,n)=>{let r=se.a.runKernel(ie.kb,k,v);return n([t,e,r]),m&&(r=Object(ye.a)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}))(f,p)}return Object(Gn.a)(((e,t,n,r)=>{let a=se.a.runKernel(ie.kb,k,v);return r([t,e,a,n]),m&&(a=Object(ye.a)(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}))(f,p,g)}});const tr=Object(I.b)({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:u}){if(!1===Object(Yn.d)(se.a.state.gradientDepth,s)){let c=Object(v.a)(e,t,n,r);return null!=a&&(c=Object(o.a)(c,a)),Object(Yn.a)(c,s,i,u)}let c=Object(O.a)(e,"a","fused matMul"),l=Object(O.a)(t,"b","fused matMul");[c,l]=Object(_n.makeTypesMatch)(c,l);const d=n?c.shape[c.rank-2]:c.shape[c.rank-1],h=r?l.shape[l.rank-1]:l.shape[l.rank-2],p=n?c.shape[c.rank-1]:c.shape[c.rank-2],f=r?l.shape[l.rank-2]:l.shape[l.rank-1],m=c.shape.slice(0,-2),b=l.shape.slice(0,-2),g=A.O(m),y=A.O(b);A.b(c.rank>=2&&l.rank>=2&&c.rank===l.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${c.rank} and ${l.rank}.`)),A.b(A.a(m,b),(()=>`Error in fused matMul: outer dimensions (${m}) and (${b}) of Tensors with shapes ${c.shape} and ${l.shape} must match.`)),A.b(d===h,(()=>`Error in fused matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${c.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`));const x=c.shape.slice(0,-2).concat([p,f]),k=n?Object(ye.a)(c,[g,d,p]):Object(ye.a)(c,[g,p,d]),w=r?Object(ye.a)(l,[y,f,h]):Object(ye.a)(l,[y,h,f]);let I,j;null!=a&&(I=Object(O.a)(a,"bias","fused matMul"),[I]=Object(_n.makeTypesMatch)(I,c),Hn.a(x,I.shape)),null!=i&&(j=Object(O.a)(i,"prelu weights","fused matMul"));const N=(e,t)=>{const[i,o,u,c]=t,l=Object(Yn.c)(Object(ye.a)(e,u.shape),u,s);let d,h;if(n||r?!n&&r?(d=Object(v.a)(l,o,!1,!1),h=Object(v.a)(l,i,!0,!1)):n&&!r?(d=Object(v.a)(o,l,!1,!0),h=Object(v.a)(i,l,!1,!1)):(d=Object(v.a)(o,l,!0,!0),h=Object(v.a)(l,i,!0,!0)):(d=Object(v.a)(l,o,!1,!0),h=Object(v.a)(i,l,!0,!1)),null!=a){return[d,h,Object(Yn.b)(c,l)]}return[d,h]},S={a:k,b:w,bias:I,preluActivationWeights:j},T={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:u};if(null==a){return Object(Gn.a)(((e,t,n)=>{const r=se.a.runKernel(ie.bd,S,T);return n([e,t,r]),{value:Object(ye.a)(r,x),gradFunc:N}}))(k,w)}return Object(Gn.a)(((e,t,n,r)=>{const a=se.a.runKernel(ie.bd,S,T);return r([e,t,a,n]),{value:Object(ye.a)(a,x),gradFunc:N}}))(k,w,I)}});const nr=Object(I.b)({hammingWindow_:function(e){return Vn(e,.54,.46)}});const rr=Object(I.b)({hannWindow_:function(e){return Vn(e,.5,.5)}});const ar=Object(I.b)({frame_:function(e,t,n,r=!1,a=0){let s=0;const i=[];for(;s+t<=e.size;)i.push(Object(N.a)(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,o=Object(k.a)([Object(N.a)(e,s,t-r),Object(ke.a)([r],a)]);i.push(o),s+=n}return 0===i.length?gn([],[0,t]):Object(ye.a)(Object(k.a)(i),[i.length,t])}});const sr=Object(I.b)({stft_:function(e,t,n,r,a=rr){null==r&&(r=Wn(t));const s=ar(e,t,n),i=Object(w.a)(s,a(t)),o=[];for(let e=0;e<s.shape[0];e++)o.push(Object(rn.a)(Object(N.a)(i,[e,0],[1,t]),r));return Object(k.a)(o)}});const ir=Object(I.b)({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){const i=Object(O.a)(e,"image","cropAndResize"),o=Object(O.a)(t,"boxes","cropAndResize","float32"),u=Object(O.a)(n,"boxInd","cropAndResize","int32"),c=o.shape[0];A.b(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),A.b(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${o.shape}.`)),A.b(1===u.rank&&u.shape[0]===c,(()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${o.shape}.`)),A.b(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),A.b(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),A.b("bilinear"===a||"nearest"===a,(()=>`method must be bilinear or nearest, but was ${a}`));const l={image:i,boxes:o,boxInd:u},d={method:a,extrapolationValue:s,cropSize:r};return se.a.runKernel(ie.K,l,d)}});const or=Object(I.b)({flipLeftRight_:function(e){const t=Object(O.a)(e,"image","flipLeftRight","float32");A.b(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return se.a.runKernel(ie.eb,n,{})}});const ur=Object(I.b)({rotateWithOffset_:function(e,t,n=0,r=.5){const a=Object(O.a)(e,"image","rotateWithOffset","float32");A.b(4===a.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`));const s={image:a},i={radians:t,fillValue:n,center:r};return se.a.runKernel(ie.uc,s,i)}});function cr(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const i=e.shape[0];return n=Math.min(n,i),A.b(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),A.b(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),A.b(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),A.b(1===t.rank,(()=>"scores must be a 1D tensor")),A.b(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),A.b(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}const lr=Object(I.b)({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Object(O.a)(e,"boxes","nonMaxSuppression"),i=Object(O.a)(t,"scores","nonMaxSuppression"),o=cr(s,i,n,r,a),u={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold};return se.a.runKernel(ie.Wb,{boxes:s,scores:i},u)}});var dr=n(63);const hr=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=Object(O.a)(e,"boxes","nonMaxSuppressionAsync"),i=Object(O.a)(t,"scores","nonMaxSuppressionAsync"),o=cr(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u=await Promise.all([s.data(),i.data()]),c=u[0],l=u[1],{selectedIndices:d}=Object(dr.a)(c,l,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),Object(mn.a)(d,"int32")};const pr=Object(I.b)({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=Object(O.a)(e,"boxes","nonMaxSuppression"),o=Object(O.a)(t,"scores","nonMaxSuppression"),u=cr(i,o,n,r,a,s),c={boxes:i,scores:o},l={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma},d=se.a.runKernel(ie.Yb,c,l);return{selectedIndices:d[0],selectedScores:d[1]}}});const fr=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=Object(O.a)(e,"boxes","nonMaxSuppressionAsync"),o=Object(O.a)(t,"scores","nonMaxSuppressionAsync"),u=cr(i,o,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const c=await Promise.all([i.data(),o.data()]),l=c[0],d=c[1],{selectedIndices:h,selectedScores:p}=Object(dr.c)(l,d,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Object(mn.a)(h,"int32"),selectedScores:Object(mn.a)(p)}};const mr=Object(I.b)({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=Object(O.a)(e,"boxes","nonMaxSuppression"),o=Object(O.a)(t,"scores","nonMaxSuppression"),u=cr(i,o,n,r,a,null),c={boxes:i,scores:o},l={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s},d=se.a.runKernel(ie.Xb,c,l);return{selectedIndices:d[0],validOutputs:d[1]}}});const br=async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=Object(O.a)(e,"boxes","nonMaxSuppressionAsync"),o=Object(O.a)(t,"scores","nonMaxSuppressionAsync"),u=cr(i,o,n,r,a,null),c=u.maxOutputSize,l=u.iouThreshold,d=u.scoreThreshold,[h,p]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Object(dr.b)(h,p,c,l,d,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Object(mn.a)(f,"int32"),validOutputs:Object(Pt.a)(m,"int32")}};var gr=n(166),yr=n(165);const xr=Object(I.b)({transform_:function(e,t,n="nearest",r="constant",a=0,s){const i=Object(O.a)(e,"image","transform","float32"),o=Object(O.a)(t,"transforms","transform","float32");A.b(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),A.b(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),A.b(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));const u={image:i,transforms:o},c={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return se.a.runKernel(ie.Vc,u,c)}});const Or=Object(I.b)({bandPart_:function(e,t,n){Object(A.b)(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),Object(A.b)(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=Object(O.a)(e,"a","bandPart");Object(A.b)(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const a=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);const o=Object(ye.a)(Object(Tt.a)(0,s,1,"int32"),[-1,1]),u=Object(Tt.a)(0,i,1,"int32"),c=Object(rt.a)(o,u),l=Object(Be.a)(Object(Re.a)(c,Object(Pt.a)(+t,"int32")),Object(Ne.a)(c,Object(Pt.a)(-n,"int32"))),d=Object($n.a)([s,i],r.dtype);return Object(ye.a)(Object(cn.a)(Object(Nn.a)(Object(ye.a)(r,[-1,s,i])).map((e=>Object(Tn.a)(l,e,d)))),a)}});const kr=Object(I.b)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,Object(A.b)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)Object(A.b)(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Object(an.a)(e,e.shape[0],0).map((e=>Object(un.a)(e,[0])));Object(A.b)(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(se.a.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=Object(w.a)(Object(hn.a)(Object(w.a)(n[r],e)),n[r]);e=Object(rt.a)(e,t)}return Object(ce.a)(e,Object(Fn.a)(e,"euclidean"))})));return t?Object(cn.a)(n,0):n}});var vr=n(23);function wr(e,t=!1){return se.a.tidy((()=>{Object(A.b)(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let a=Oe(n),s=Object(B.a)(e);const i=gn([[1]],[1,1]);let o=Object(B.a)(i);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=s,u=o,c=a;[o,s,a]=se.a.tidy((()=>{const t=Object(N.a)(s,[e,e],[n-e,1]),u=Object(Fn.a)(t),c=Object(N.a)(s,[e,e],[1,1]),l=Object(Tn.a)(Object(je.a)(c,0),gn([[-1]]),gn([[1]])),d=Object(rt.a)(c,Object(w.a)(l,u)),h=Object(ce.a)(t,d);o=1===h.shape[0]?Object(B.a)(i):Object(k.a)([i,Object(N.a)(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const p=Object(ot.a)(Object(ce.a)(Object(v.a)(l,d),u)),f=Object(N.a)(s,[e,0],[n-e,r]),m=Object(w.a)(p,o),b=Object(Rn.a)(o);if(0===e)s=Object(rt.a)(f,Object(v.a)(m,Object(v.a)(b,f)));else{const t=Object(rt.a)(f,Object(v.a)(m,Object(v.a)(b,f)));s=Object(k.a)([Object(N.a)(s,[0,0],[e,r]),t],0)}const g=Object(Rn.a)(m),y=Object(N.a)(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=Object(rt.a)(y,Object(v.a)(Object(v.a)(y,o),g));else{const t=Object(rt.a)(y,Object(v.a)(Object(v.a)(y,o),g));a=Object(k.a)([Object(N.a)(a,[0,0],[n,e]),t],1)}return[o,s,a]})),Object(vr.d)([t,u,c])}return!t&&n>r&&(a=Object(N.a)(a,[0,0],[n,r]),s=Object(N.a)(s,[0,0],[r,r])),[a,s]}))}const Ir=Object(I.b)({qr_:function(e,t=!1){if(Object(A.b)(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return wr(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=Object(Nn.a)(Object(ye.a)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];r.forEach((e=>{const[n,r]=wr(e,t);a.push(n),s.push(r)}));return[Object(ye.a)(Object(cn.a)(a,0),e.shape),Object(ye.a)(Object(cn.a)(s,0),e.shape)]}}});var jr=n(30);const Nr=Object(I.b)({computeWeightedLoss_:function(e,t,n=jr.a.SUM_BY_NONZERO_WEIGHTS){const r=Object(O.a)(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=Object(O.a)(t,"weights","computeWeightedLoss"));const s=null==a?r:Object(w.a)(r,a);if(n===jr.a.NONE)return s;if(n===jr.a.SUM)return Object(hn.a)(s);if(n===jr.a.MEAN){if(null==a)return Object(Ye.a)(s);{const e=r.size/a.size,t=Object(ce.a)(Object(hn.a)(s),Object(hn.a)(a));return e>1?Object(ce.a)(t,Object(Pt.a)(e)):t}}if(n===jr.a.SUM_BY_NONZERO_WEIGHTS){if(null==a)return Object(ce.a)(Object(hn.a)(s),Object(Pt.a)(r.size));{const e=Object(w.a)(a,Object(lt.a)(r.shape)),t=Object(z.a)(Object(hn.a)(Object(ut.a)(e,Object(Pt.a)(0))),"float32");return Object(ce.a)(Object(hn.a)(s),t)}}throw Error(`Unknown reduction: ${n}`)}});const Sr=Object(I.b)({absoluteDifference_:function(e,t,n,r=jr.a.SUM_BY_NONZERO_WEIGHTS){const s=Object(O.a)(e,"labels","absoluteDifference"),i=Object(O.a)(t,"predictions","absoluteDifference");let o=null;null!=n&&(o=Object(O.a)(n,"weights","absoluteDifference")),Object(A.e)(s.shape,i.shape,"Error in absoluteDifference: ");const u=Object(a.a)(Object(rt.a)(s,i));return Nr(u,o,r)}});const Tr=Object(I.b)({cosineDistance_:function(e,t,n,r,a=jr.a.SUM_BY_NONZERO_WEIGHTS){const s=Object(O.a)(e,"labels","cosineDistance"),i=Object(O.a)(t,"predictions","cosineDistance");let o=null;null!=r&&(o=Object(O.a)(r,"weights","cosineDistance")),Object(A.e)(s.shape,i.shape,"Error in cosineDistance: ");const u=Object(Pt.a)(1),c=Object(rt.a)(u,Object(hn.a)(Object(w.a)(s,i),n,!0));return Nr(c,o,a)}});const Cr=Object(I.b)({hingeLoss_:function(e,t,n,r=jr.a.SUM_BY_NONZERO_WEIGHTS){let a=Object(O.a)(e,"labels","hingeLoss");const s=Object(O.a)(t,"predictions","hingeLoss");let i=null;null!=n&&(i=Object(O.a)(n,"weights","hingeLoss")),Object(A.e)(a.shape,s.shape,"Error in hingeLoss: ");const o=Object(Pt.a)(1);a=Object(rt.a)(Object(w.a)(Object(Pt.a)(2),a),o);const u=Object(At.a)(Object(rt.a)(o,Object(w.a)(a,s)));return Nr(u,i,r)}});const $r=Object(I.b)({huberLoss_:function(e,t,n,r=1,s=jr.a.SUM_BY_NONZERO_WEIGHTS){const i=Object(O.a)(e,"labels","huberLoss"),u=Object(O.a)(t,"predictions","huberLoss");let c=null;null!=n&&(c=Object(O.a)(n,"weights","huberLoss")),Object(A.e)(i.shape,u.shape,"Error in huberLoss: ");const l=Object(Pt.a)(r),d=Object(a.a)(Object(rt.a)(u,i)),h=Object(Je.a)(d,l),p=Object(rt.a)(d,h),f=Object(o.a)(Object(w.a)(Object(Pt.a)(.5),Object(nt.a)(h)),Object(w.a)(l,p));return Nr(f,c,s)}});const Ar=Object(I.b)({logLoss_:function(e,t,n,r=1e-7,a=jr.a.SUM_BY_NONZERO_WEIGHTS){const s=Object(O.a)(e,"labels","logLoss"),i=Object(O.a)(t,"predictions","logLoss");let u=null;null!=n&&(u=Object(O.a)(n,"weights","logLoss")),Object(A.e)(s.shape,i.shape,"Error in logLoss: ");const c=Object(Pt.a)(1),l=Object(Pt.a)(r),d=Object(ot.a)(Object(w.a)(s,Object(De.a)(Object(o.a)(i,l)))),h=Object(w.a)(Object(rt.a)(c,s),Object(De.a)(Object(o.a)(Object(rt.a)(c,i),l))),p=Object(rt.a)(d,h);return Nr(p,u,a)}});const Er=Object(I.b)({meanSquaredError_:function(e,t,n,r=jr.a.SUM_BY_NONZERO_WEIGHTS){const a=Object(O.a)(e,"labels","meanSquaredError"),s=Object(O.a)(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=Object(O.a)(n,"weights","meanSquaredError")),Object(A.e)(a.shape,s.shape,"Error in meanSquaredError: ");const o=Object(on.a)(a,s);return Nr(o,i,r)}});const Rr=Object(I.b)({sigmoidCrossEntropy_:function(e,t,n,r=0,s=jr.a.SUM_BY_NONZERO_WEIGHTS){let i=Object(O.a)(e,"multiClassLabels","sigmoidCrossEntropy");const u=Object(O.a)(t,"logits","sigmoidCrossEntropy");let c=null;if(null!=n&&(c=Object(O.a)(n,"weights","sigmoidCrossEntropy")),Object(A.e)(i.shape,u.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=Object(Pt.a)(r),t=Object(Pt.a)(1),n=Object(Pt.a)(.5);i=Object(o.a)(Object(w.a)(i,Object(rt.a)(t,e)),Object(w.a)(n,e))}const l=function(e,t){const n=Object(O.a)(e,"labels","sigmoidCrossEntropyWithLogits"),r=Object(O.a)(t,"logits","sigmoidCrossEntropyWithLogits");Object(A.e)(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=Object(At.a)(r),i=Object(w.a)(r,n),u=Object(Me.a)(Object(me.a)(Object(ot.a)(Object(a.a)(r))));return Object(o.a)(Object(rt.a)(s,i),u)}(i,u);return Nr(l,c,s)}});const Fr=Object(I.b)({softmaxCrossEntropy_:function(e,t,n,r=0,a=jr.a.SUM_BY_NONZERO_WEIGHTS){let s=Object(O.a)(e,"onehotLabels","softmaxCrossEntropy");const i=Object(O.a)(t,"logits","softmaxCrossEntropy");let u=null;if(null!=n&&(u=Object(O.a)(n,"weights","softmaxCrossEntropy")),Object(A.e)(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=Object(Pt.a)(r),t=Object(Pt.a)(1),n=Object(Pt.a)(s.shape[1]);s=Object(o.a)(Object(w.a)(s,Object(rt.a)(t,e)),Object(ce.a)(e,n))}const c=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return Object(Gn.a)(((e,t,r)=>{const a=Object(Pe.a)(t,[n],!0),s=Object(rt.a)(Object(z.a)(t,"float32"),a);r([e,s]);const i=Object(ot.a)(Object(w.a)(s,e));return{value:Object(hn.a)(i,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=Object(tt.e)(e.shape,[n]);return[Object(w.a)(Object(ye.a)(e,s),Object(rt.a)(Object(z.a)(r,"float32"),Object(me.a)(a))),Object(w.a)(Object(ye.a)(e,s),Object(rt.a)(Object(me.a)(a),Object(z.a)(r,"float32")))]}}}))(e,t)}(s,i);return Nr(c,u,a)}}),_r={fft:en.a,ifft:tn.a,rfft:rn.a,irfft:nn.a},Dr={hammingWindow:nr,hannWindow:rr,frame:ar,stft:sr},Mr={flipLeftRight:or,resizeNearestNeighbor:yr.a,resizeBilinear:gr.a,rotateWithOffset:ur,cropAndResize:ir,nonMaxSuppression:lr,nonMaxSuppressionAsync:hr,nonMaxSuppressionWithScore:pr,nonMaxSuppressionWithScoreAsync:fr,nonMaxSuppressionPadded:mr,nonMaxSuppressionPaddedAsync:br,transform:xr},zr={bandPart:Or,gramSchmidt:kr,qr:Ir},Lr={absoluteDifference:Sr,computeWeightedLoss:Nr,cosineDistance:Tr,hingeLoss:Cr,huberLoss:$r,logLoss:Ar,meanSquaredError:Er,sigmoidCrossEntropy:Rr,softmaxCrossEntropy:Fr}},function(e,t,n){"use strict";n.d(t,"b",(function(){return s})),n.d(t,"c",(function(){return i})),n.d(t,"a",(function(){return o})),n.d(t,"d",(function(){return u}));var r=n(8);const a="tfjsflags";class s{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Object(r.x)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=function(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}(this.global.location.search);if(a in e){e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}}function i(){return o}let o=null;function u(e){o=e}},function(e,t,n){"use strict";n.r(t),n.d(t,"makeTypesMatch",(function(){return i})),n.d(t,"assertTypesMatch",(function(){return o})),n.d(t,"isTensorInList",(function(){return u})),n.d(t,"getTensorsInContainer",(function(){return c}));var r=n(6),a=n(75),s=n(8);function i(e,t){if(e.dtype===t.dtype)return[e,t];const n=Object(a.c)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function o(e,t){Object(s.b)(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function u(e,t){return t.some((t=>t.id===e.id))}function c(e){const t=[];return l(e,t,new Set),t}function l(e,t,n){if(null==e)return;if(e instanceof r.a)return void t.push(e);if(a=e,!Array.isArray(a)&&"object"!=typeof a)return;var a;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),l(r,t,n))}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(3),s=n(4);const i=Object(s.b)({square_:function(e){const t=Object(a.a)(e,"x","square");return r.a.runKernel("Square",{x:t},{})}})},function(e,t,n){"use strict";n.d(t,"g",(function(){return o})),n.d(t,"f",(function(){return u})),n.d(t,"c",(function(){return c})),n.d(t,"b",(function(){return l})),n.d(t,"e",(function(){return d})),n.d(t,"h",(function(){return h})),n.d(t,"m",(function(){return p})),n.d(t,"n",(function(){return f})),n.d(t,"t",(function(){return m})),n.d(t,"d",(function(){return b})),n.d(t,"l",(function(){return g})),n.d(t,"u",(function(){return y})),n.d(t,"r",(function(){return x})),n.d(t,"o",(function(){return O})),n.d(t,"k",(function(){return k})),n.d(t,"q",(function(){return v})),n.d(t,"i",(function(){return w})),n.d(t,"j",(function(){return I})),n.d(t,"p",(function(){return j})),n.d(t,"a",(function(){return N})),n.d(t,"s",(function(){return S}));var r=n(5),a=n(20),s=n(6),i=n(21);function o(){Object(a.c)().set("PROD",!0)}function u(){Object(a.c)().set("DEBUG",!0)}function c(){Object(a.c)().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function l(e){Object(a.c)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function d(){r.a.disposeVariables()}function h(){return r.a}function p(){return r.a.memory()}function f(e){return r.a.profile(e)}function m(e,t){return r.a.tidy(e,t)}function b(e){Object(i.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function g(e){return r.a.keep(e)}function y(e){return r.a.time(e)}function x(e){return r.a.setBackend(e)}function O(){return r.a.ready()}function k(){return r.a.backendName}function v(e){r.a.removeBackend(e)}function w(e){return r.a.findBackend(e)}function I(e){return r.a.findBackendFactory(e)}function j(e,t,n=1){return r.a.registerBackend(e,t,n)}function N(){return r.a.backend}function S(e,t){Object(a.c)().setPlatform(e,t)}Object(s.e)(l)},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({slice_:function(e,t,n){const i=Object(s.a)(e,"x","slice","string_or_numeric");if(0===i.rank)throw new Error("Slicing scalar is not possible");const o={x:i},u={begin:t,size:n};return r.a.runKernel(a.Ec,o,u)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(2),s=n(21),i=n(3),o=n(4);const u=Object(o.b)({matMul_:function(e,t,n=!1,o=!1){let u=Object(i.a)(e,"a","matMul"),c=Object(i.a)(t,"b","matMul");[u,c]=Object(s.makeTypesMatch)(u,c);const l={a:u,b:c},d={transposeA:n,transposeB:o};return r.a.runKernel(a.s,l,d)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({neg_:function(e){const t={x:Object(s.a)(e,"x","neg")};return r.a.runKernel(a.Vb,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(2),s=n(3),i=n(8),o=n(57),u=n(4);const c=Object(u.b)({concat_:function(e,t=0){Object(i.b)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Object(s.b)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Object(o.a)(n[0]);const u=n,c={axis:t};return r.a.runKernel(a.B,u,c)}})},function(e,t,n){"use strict";function r(e,t,n,r,a="NHWC",s){return i(e,[...t,e[3]],n,s,r,null,null,m(a))}function a(e,t,n,r,a,s,o="channelsLast"){const[u,l]=c(t);let d;if("channelsLast"===o)d=[u,l,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);d=[u,l,e[1],e[1]]}return i(e,d,n,r,a,s,!1,o)}function s(e,t,n,r,a,s,i="NDHWC"){const[u,c,d]=l(t);let h,p;if("NDHWC"===i)p="channelsLast",h=[u,c,d,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);p="channelsFirst",h=[u,c,d,e[1],e[1]]}return o(e,h,n,r,a,!1,p,s)}function i(e,t,n,r,a,s,i=!1,o="channelsLast"){let[l,p,f,m]=[-1,-1,-1,-1];if("channelsLast"===o)[l,p,f,m]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,m,p,f]=e}const[b,g,,y]=t,[x,O]=c(n),[k,v]=c(r),w=d(b,k),I=d(g,v),{padInfo:j,outHeight:N,outWidth:S}=function(e,t,n,r,a,s,i,o,c){let l,d,p;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=u(e,t,n));const s=e[0],i=e[1],o=h((s-t+2*r)/n+1,a),c=h((i-t+2*r)/n+1,a);return[o,c]}([t,n],s,r,e,o);d=a[0],p=a[1]}else if("same"===e){d=Math.ceil(t/r),p=Math.ceil(n/a);const e=Math.max(0,(d-1)*r+s-t),o=Math.max(0,(p-1)*a+i-n),u=Math.floor(e/2),c=e-u,h=Math.floor(o/2);l={top:u,bottom:c,left:h,right:o-h,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},d=Math.ceil((t-s+1)/r),p=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const u="channelsLast"===c?e[1][0]:e[2][0],f="channelsLast"===c?e[1][1]:e[2][1],m="channelsLast"===c?e[2][0]:e[3][0],b="channelsLast"===c?e[2][1]:e[3][1];l={top:u,bottom:f,left:m,right:b,type:0===u&&0===f&&0===m&&0===b?"VALID":"EXPLICIT"},d=h((t-s+u+f)/r+1,o),p=h((n-i+m+b)/a+1,o)}}return{padInfo:l,outHeight:d,outWidth:p}}(a,p,f,x,O,w,I,s,o),T=i?y*m:y;let C;return"channelsFirst"===o?C=[l,T,N,S]:"channelsLast"===o&&(C=[l,N,S,T]),{batchSize:l,dataFormat:o,inHeight:p,inWidth:f,inChannels:m,outHeight:N,outWidth:S,outChannels:T,padInfo:j,strideHeight:x,strideWidth:O,filterHeight:b,filterWidth:g,effectiveFilterHeight:w,effectiveFilterWidth:I,dilationHeight:k,dilationWidth:v,inShape:e,outShape:C,filterShape:t}}function o(e,t,n,r,a,s=!1,i="channelsLast",o){let[c,p,f,m,b]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[c,p,f,m,b]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[c,b,p,f,m]=e}const[g,y,x,,O]=t,[k,v,w]=l(n),[I,j,N]=l(r),S=d(g,I),T=d(y,j),C=d(x,N),{padInfo:$,outDepth:A,outHeight:E,outWidth:R}=function(e,t,n,r,a,s,i,o,c,l,d){let p,f,m,b;if("number"==typeof e){p={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,a,s){null==a&&(a=u(e,t,r));const i=e[0],o=e[1],c=e[2],l=h((i-t+2*a)/r+1,s),d=h((o-t+2*a)/r+1,s),p=h((c-t+2*a)/r+1,s);return[l,d,p,n]}([t,n,r,1],o,1,a,e,d);f=s[0],m=s[1],b=s[2]}else if("same"===e){f=Math.ceil(t/a),m=Math.ceil(n/s),b=Math.ceil(r/i);const e=(f-1)*a+o-t,u=(m-1)*s+c-n,d=(b-1)*i+l-r,h=Math.floor(e/2),g=e-h,y=Math.floor(u/2),x=u-y,O=Math.floor(d/2);p={top:y,bottom:x,left:O,right:d-O,front:h,back:g,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);p={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},f=Math.ceil((t-o+1)/a),m=Math.ceil((n-c+1)/s),b=Math.ceil((r-l+1)/i)}return{padInfo:p,outDepth:f,outHeight:m,outWidth:b}}(a,p,f,m,k,v,w,S,T,C,o),F=s?O*b:O;let _;return"channelsFirst"===i?_=[c,F,A,E,R]:"channelsLast"===i&&(_=[c,A,E,R,F]),{batchSize:c,dataFormat:i,inDepth:p,inHeight:f,inWidth:m,inChannels:b,outDepth:A,outHeight:E,outWidth:R,outChannels:F,padInfo:$,strideDepth:k,strideHeight:v,strideWidth:w,filterDepth:g,filterHeight:y,filterWidth:x,effectiveFilterDepth:S,effectiveFilterHeight:T,effectiveFilterWidth:C,dilationDepth:I,dilationHeight:j,dilationWidth:N,inShape:e,outShape:_,filterShape:t}}function u(e,t,n,r=1){const a=d(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function c(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function l(e){return"number"==typeof e?[e,e,e]:e}function d(e,t){return t<=1?e:e+(e-1)*(t-1)}function h(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function p(e){const[t,n,r]=c(e);return 1===t&&1===n&&1===r}function f(e,t){return p(e)||p(t)}function m(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}n.d(t,"d",(function(){return r})),n.d(t,"e",(function(){return a})),n.d(t,"f",(function(){return s})),n.d(t,"a",(function(){return i})),n.d(t,"b",(function(){return o})),n.d(t,"c",(function(){return u})),n.d(t,"i",(function(){return p})),n.d(t,"h",(function(){return f})),n.d(t,"g",(function(){return m}))},function(e,t,n){"use strict";n.d(t,"a",(function(){return h})),n.d(t,"f",(function(){return d})),n.d(t,"d",(function(){return c})),n.d(t,"e",(function(){return l})),n.d(t,"b",(function(){return o})),n.d(t,"c",(function(){return u}));var r=n(5),a=n(6),s=n(3),i=n(8);function o(e){return i.b(i.u(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const a=Object(s.a)(t,"x","tf.grad","string_or_numeric"),o=null!=n?Object(s.a)(n,"dy","tf.grad"):null;return r.a.tidy((()=>{const{value:t,grads:n}=r.a.gradients((()=>e(a)),[a],o);return null!=o&&i.e(t.shape,o.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),p(n),n[0]}))}}function u(e){return i.b(i.u(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{i.b(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const a=Object(s.b)(t,"args","tf.grads","string_or_numeric"),o=null!=n?Object(s.a)(n,"dy","tf.grads"):null;return r.a.tidy((()=>{const{value:t,grads:n}=r.a.gradients((()=>e(...a)),a,o);return null!=o&&i.e(t.shape,o.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),p(n),n}))}}function c(e){return i.b(i.u(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{i.b(t instanceof a.a,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),i.b(null==n||n instanceof a.a,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:s,value:o}=r.a.gradients((()=>e(t)),[t],n);return p(s),{grad:s[0],value:o}}}function l(e){return i.b(i.u(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{i.b(Array.isArray(t)&&t.every((e=>e instanceof a.a)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),i.b(null==n||n instanceof a.a,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const s=r.a.gradients((()=>e(...t)),t,n);return null!=n&&i.e(s.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),p(s.grads),s}}function d(e,t){i.b(i.u(e),(()=>"The f passed in variableGrads(f) must be a function")),i.b(null==t||Array.isArray(t)&&t.every((e=>e instanceof a.c)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in r.a.registeredVariables)t.push(r.a.registeredVariables[e])}const s=n?t.filter((e=>!e.trainable)):null,o=t.length;t=t.filter((e=>e.trainable)),i.b(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`));const{value:u,grads:c}=r.a.gradients(e,t,null,!0);i.b(c.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),i.b(0===u.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${u.rank} tensor`));const l={};return t.forEach(((e,t)=>{null!=c[t]&&(l[e.name]=c[t])})),null!=s&&s.forEach((e=>l[e.name]=null)),{value:u,grads:l}}function h(e){return r.a.customGrad(e)}function p(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}},function(e,t,n){"use strict";var r;n.d(t,"a",(function(){return r})),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(r||(r={}))},function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(5),a=n(2),s=n(3),i=n(8),o=n(87),u=n(16),c=n(4);const l=Object(c.b)({where_:function(e,t,n){const c=Object(s.a)(t,"a","where"),l=Object(s.a)(n,"b","where"),d=Object(s.a)(e,"condition","where","bool"),h=Object(u.a)(c.shape,l.shape),p=Object(o.a)(c,h),f=Object(o.a)(l,h);1===d.rank&&Object(i.b)(d.shape[0]===c.shape[0],(()=>"The first dimension of `a` must match the size of `condition`.")),1!==d.rank&&Object(i.e)(d.shape,f.shape,"Error in where: ");const m={condition:d,t:p,e:f};return r.a.runKernel(a.yc,m)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({sqrt_:function(e){const t={x:Object(s.a)(e,"x","sqrt")};return r.a.runKernel(a.Kc,t)}})},function(e,t,n){"use strict";n.d(t,"b",(function(){return a})),n.d(t,"c",(function(){return s})),n.d(t,"d",(function(){return i})),n.d(t,"e",(function(){return o})),n.d(t,"a",(function(){return u})),n.d(t,"f",(function(){return c})),n.d(t,"h",(function(){return l})),n.d(t,"g",(function(){return d}));var r=n(8);function a(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function s(e,t,n){const r=e.length+t.length,a=[];let s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function i(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map((t=>e[t]))]}function o(e,t){return s(e,t.map((e=>1)),t)}function u(e,t,n){r.b(a(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function c(e,t){if(a(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function l(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function d(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}},function(e,t,n){"use strict";(function(e){n.d(t,"f",(function(){return o})),n.d(t,"e",(function(){return u})),n.d(t,"a",(function(){return h})),n.d(t,"b",(function(){return p})),n.d(t,"d",(function(){return f})),n.d(t,"c",(function(){return m})),n.d(t,"g",(function(){return b}));var r=n(48),a=n(84),s=n(8),i=n(127);async function o(e,t){const n=[],r=[],a=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<a.length;++s){const i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let a=0;for(let e=0;e<t.length;e++){const n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=4,r.set(n,a),a+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:c(await Promise.all(r)),specs:n}}function u(e,t){const n={};let o,u=0;for(const c of t){const t=c.name,l=c.dtype,d=c.shape,h=Object(s.O)(d);let p;if("quantization"in c){const n=c.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${c.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${c.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==l)throw new Error(`Weight ${c.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${l}.`)}const r=i.a[n.dtype],a=e.slice(u,u+h*r),s="uint8"===n.dtype?new Uint8Array(a):new Uint16Array(a);if("float32"===l)if("uint8"===n.dtype||"uint16"===n.dtype){p=new Float32Array(s.length);for(let e=0;e<s.length;e++){const t=s[e];p[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===o&&(o=g()),p=o(s)}else{if("int32"!==l)throw new Error(`Unsupported dtype in weight '${t}': ${l}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);p=new Int32Array(s.length);for(let e=0;e<s.length;e++){const t=s[e];p[e]=Math.round(t*n.scale+n.min)}}u+=h*r}else if("string"===l){const t=Object(s.O)(c.shape);p=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(u,u+4))[0];u+=4;const n=new Uint8Array(e.slice(u,u+t));p.push(n),u+=t}}else{const s=i.a[l],o=e.slice(u,u+h*s);if("float32"===l)p=new Float32Array(o);else if("int32"===l)p=new Int32Array(o);else if("bool"===l)p=new Uint8Array(o);else{if("complex64"!==l)throw new Error(`Unsupported dtype in weight '${t}': ${l}`);{p=new Float32Array(o);const e=new Float32Array(p.length/2),s=new Float32Array(p.length/2);for(let t=0;t<e.length;t++)e[t]=p[2*t],s[t]=p[2*t+1];const i=Object(a.a)(e,d,"float32"),u=Object(a.a)(s,d,"float32");n[t]=Object(r.a)(i,u),i.dispose(),u.dispose()}}u+=h*s}"complex64"!==l&&(n[t]=Object(a.a)(p,d,l))}return n}function c(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let a=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength})),r.buffer}const l=void 0!==e&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function d(t){return l?e.byteLength(t):new Blob([t]).size}function h(t){if(l)return e.from(t).toString("base64");const n=new Uint8Array(t);let r="";for(let e=0,t=n.length;e<t;e++)r+=String.fromCharCode(n[e]);return btoa(r)}function p(t){if(l){const n=e.from(t,"base64");return n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)}const n=atob(t),r=new Uint8Array(n.length);for(let e=0;e<n.length;++e)r.set([n.charCodeAt(e)],e);return r.buffer}function f(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function m(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function b(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:d(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:d(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function g(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){const i=r[a],o=e[n[i>>10]+(1023&i)]+t[i>>10];s[a]=o}return new Float32Array(a)}}}).call(this,n(169).Buffer)},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({exp_:function(e){const t={x:Object(s.a)(e,"x","exp")};return r.a.runKernel(a.Z,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({abs_:function(e){const t=Object(s.a)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return r.a.runKernel(a.A,e)}{const e={x:t};return r.a.runKernel(a.a,e)}}})},function(e,t,n){"use strict";n.d(t,"c",(function(){return p})),n.d(t,"b",(function(){return f})),n.d(t,"a",(function(){return m})),n.d(t,"d",(function(){return b}));var r=n(16),a=n(102),s=n(105),i=n(9),o=n(112),u=n(66),c=n(113),l=n(7),d=n(67),h=n(17);function p(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return Object(i.a)(e,Object(d.a)(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function f(e,t){let n=t;const a=r.c(e.shape,t.shape);return a.length>0&&(n=Object(h.a)(n,a)),Object(l.a)(n,e.shape)}function m(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Object(u.a)(e);if("elu"===t)return Object(a.a)(e);if("relu6"===t)return Object(c.a)(e);if("prelu"===t)return Object(o.a)(e,n);if("leakyrelu"===t)return Object(s.a)(e,r);throw new Error(`Unknown fused activation ${t}.`)}const b=(e,t)=>!(e>0)||"linear"===t},function(e,t,n){"use strict";n.d(t,"f",(function(){return l})),n.d(t,"e",(function(){return d})),n.d(t,"d",(function(){return h})),n.d(t,"g",(function(){return p})),n.d(t,"a",(function(){return f})),n.d(t,"b",(function(){return j})),n.d(t,"c",(function(){return r}));var r,a=n(0),s=n(72),i=n(59);function o(e){return e instanceof a.Tensor?{value:e.clone(),recurse:!1}:Object(i.e)(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class u{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class c extends u{constructor(){super(c.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function l(e){return new m(e)}function d(e){return new b(e)}function h(e,t){return new S(e,t)}function p(e,t=r.FAIL){return new T(e,t)}c.INITIAL_CAPACITY=32;class f{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new w(this,e)}filter(e){return new k(this,e)}map(e){return new v(this,e)}mapAsync(e){return new I(this,e)}serialMapAsync(e){return new I(this,e).serial()}flatmap(e){return new N(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new O(this,e,t)}columnMajorBatch(e,t=!0,n=i.f){return this.rowMajorBatch(e,t).map((e=>Object(i.d)(e,n)))}concatenate(e,t){return new S(l([this,e]),t)}take(e){return e<0||null==e?this:new x(this,e)}skip(e){return e<0||null==e?this:new y(this,e)}prefetch(e){return new C(this,e)}shuffle(e,t){return new $(this,e,t)}serial(){return new g(this)}}class m extends f{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:(t=e,Object(i.b)(t,o)),done:!1};var t}}class b extends f{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class g extends f{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class y extends f{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;a.dispose(e.value)}return this.upstream.next()}}class x extends f{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class O extends f{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class k extends f{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;a.dispose(e.value)}}}class v extends f{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=a.tensor_util.getTensorsInContainer(e.value),n=this.transform(e.value),r=a.tensor_util.getTensorsInContainer(n);for(const e of t)a.tensor_util.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}}class w extends f{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class I extends f{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=a.tensor_util.getTensorsInContainer(e.value),n=await this.transform(e.value),r=a.tensor_util.getTensorsInContainer(n);for(const e of t)a.tensor_util.isTensorInList(e,r)||e.dispose();return{value:n,done:!1}}}class j extends f{constructor(){super(),this.outputQueue=new c,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class N extends j{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=a.tensor_util.getTensorsInContainer(e.value),n=this.transform(e.value),r=a.tensor_util.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const e of t)a.tensor_util.isTensorInList(e,r)||e.dispose();return!0}}class S extends f{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(r||(r={}));class T extends f{constructor(e,t=r.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const a=await Object(i.c)(this.iterators,(function(e){if(e instanceof f){return{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}}return{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case r.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case r.SHORTEST:return{value:null,done:!0};case r.LONGEST:}return this.count++,{value:a,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class C extends f{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new u(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class $ extends C{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=s.alea(n||a.util.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n(6),a=n(8);function s(e,t="float32",n){return t=t||"float32",a.c(e),new r.b(e,t,n)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({reverse_:function(e,t){const n={x:Object(s.a)(e,"x","reverse")},i={dims:t};return r.a.runKernel(a.tc,n,i)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(2),s=n(21),i=n(3),o=n(16),u=n(4);const c=Object(u.b)({greater_:function(e,t){let n=Object(i.a)(e,"a","greater"),u=Object(i.a)(t,"b","greater");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernel(a.nb,c)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(8),s=n(10);function i(e,t,n,i){if(null==i&&(i=Object(a.r)(e)),"complex64"===i)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Object(a.A)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Object(a.c)(t);const e=Object(a.O)(t),r=Object(a.O)(n);Object(a.b)(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==Object(a.O)(t.slice(e));Object(a.b)(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return Object(a.A)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==i?Object(s.toTypedArray)(e,i):Object(a.m)(e,[],!0),r.a.makeTensor(e,t,i)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(2),s=n(3),i=n(8),o=n(4);const u=Object(o.b)({transpose_:function(e,t){const n=Object(s.a)(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),i.b(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{i.b(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const o={x:n},u={perm:t};return r.a.runKernel(a.Wc,o,u)}})},,function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(2),s=n(21),i=n(3),o=n(4);const u=Object(o.b)({pow_:function(e,t){let n=Object(i.a)(e,"base","pow"),o=Object(i.a)(t,"exp","pow");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernel(a.fc,u)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({pad_:function(e,t,n=0){const i=Object(s.a)(e,"x","pad");if(0===i.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const o={paddings:t,constantValue:n},u={x:i};return r.a.runKernel(a.dc,u,o)}})},function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return I})),n.d(t,"i",(function(){return N})),n.d(t,"c",(function(){return S})),n.d(t,"f",(function(){return T})),n.d(t,"e",(function(){return A})),n.d(t,"d",(function(){return E})),n.d(t,"k",(function(){return F})),n.d(t,"g",(function(){return _})),n.d(t,"h",(function(){return D})),n.d(t,"j",(function(){return M})),n.d(t,"b",(function(){return z}));var r=n(0),a=n(73),s=n(86),i=n(1),o=n(207),u=n(208),c=n(209),l=n(210),d=n(211),h=n(212),p=n(213),f=n(214),m=n(215),b=n(216),g=n(217),y=n(218),x=n(219),O=n(220),k=n(221),v=n(222),w=n(223);class I{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[o,u,c,l,d,h,p,g,b,f,y,x,O,k,v,w,m].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],a=[],s=[],o=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e)),{});let u=[];const c=[];let l={},d={};null!=t&&(l=this.mapSignatureEntries(t.inputs),d=this.mapSignatureEntries(t.outputs));const h=Object.keys(o);h.forEach((e=>{const t=o[e];t.inputNames.forEach((e=>{const[n]=Object(i.b)(e);t.inputs.push(o[n]),o[n].children.push(t)}))})),0===Object.keys(d).length?h.forEach((e=>{const t=o[e];0===t.children.length&&c.push(t)})):Object.keys(d).forEach((e=>{const[t]=Object(i.b)(e),n=o[t];null!=n&&(n.signatureKey=d[e],c.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=Object(i.b)(e),n=o[t];n&&(n.signatureKey=l[e],u.push(n))})):u=r;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const f={nodes:o,inputs:u,outputs:c,weights:a,placeholders:r,signature:t,functions:p};return s.length>0&&(f.initNodes=s),f}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=Object(s.a)(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.substr(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let a;switch(n.type){case"string":a=N(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=N(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=D(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=D(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=T(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=T(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=_(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=_(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=S(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=S(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=z(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=z(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=F(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=F(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=M(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=M(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=A(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=A(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=E(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=E(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=$(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=$(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const a=[],s=[];e.signature.inputArg.forEach((e=>{const[t]=Object(i.b)(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:C(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n}));Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach((e=>{const[n]=Object(i.b)(e);t.inputs.push(r[n]),r[n].children.push(t)}))}));const o=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=Object(i.b)(o[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))}));const u=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:u}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function j(t,n){const a=Array.isArray(t)?String.fromCharCode.apply(null,t):function(t){const n=Object(r.env)().global;if(void 0!==n.atob)return n.atob(t);if(void 0!==e)return new e(t,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(t);return n?a:a.toLowerCase()}function N(e,t,n,r=!1){const a=e[t];return null!=a?j(a.s,r):n}function S(e,t,n){const r=e[t];return r?r.b:n}function T(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function C(e){switch("string"==typeof e&&(e=a.a[e]),e){case a.a.DT_FLOAT:return"float32";case a.a.DT_INT32:case a.a.DT_INT64:case a.a.DT_INT8:case a.a.DT_UINT8:return"int32";case a.a.DT_BOOL:return"bool";case a.a.DT_DOUBLE:return"float32";case a.a.DT_STRING:return"string";default:return null}}function $(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function A(e,t,n){const r=e[t];return r&&r.type?C(r.type):n}function E(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>C(e))):n}function R(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function F(e,t,n){const r=e[t];return r&&r.shape?R(r.shape):n}function _(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function D(e,t,n,r=!1){const a=e[t];return a&&a.list&&a.list.s?a.list.s.map((e=>j(e,r))):n}function M(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>R(e))):n}function z(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}}).call(this,n(169).Buffer)},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(2),s=n(3),i=n(8),o=n(4);const u=Object(o.b)({complex_:function(e,t){const n=Object(s.a)(e,"real","complex"),o=Object(s.a)(t,"imag","complex");i.e(n.shape,o.shape,`real and imag shapes, ${n.shape} and ${o.shape}, must match in call to tf.complex().`);const u={real:n,imag:o};return r.a.runKernel(a.z,u)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(2),s=n(3),i=n(16),o=n(4);const u=Object(o.b)({logicalAnd_:function(e,t){const n=Object(s.a)(e,"a","logicalAnd","bool"),o=Object(s.a)(t,"b","logicalAnd","bool");Object(i.a)(n.shape,o.shape);const u={a:n,b:o};return r.a.runKernel(a.Eb,u)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(2),s=n(3),i=n(8),o=n(4);const u=Object(o.b)({stack_:function(e,t=0){const n=Object(s.b)(e,"tensors","stack","string_or_numeric");i.b(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&i.b(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const o=n,u={axis:t};return r.a.runKernel(a.cc,o,u)}})},function(e,t,n){"use strict";n.d(t,"c",(function(){return o})),n.d(t,"b",(function(){return u})),n.d(t,"d",(function(){return c})),n.d(t,"f",(function(){return l})),n.d(t,"e",(function(){return d})),n.d(t,"h",(function(){return h})),n.d(t,"g",(function(){return p})),n.d(t,"a",(function(){return f}));var r=n(20),a=n(92);const s=Object(a.a)("kernelRegistry",(()=>new Map)),i=Object(a.a)("gradRegistry",(()=>new Map));function o(e,t){const n=m(e,t);return s.get(n)}function u(e){return i.get(e)}function c(e){const t=s.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function l(e){const{kernelName:t,backendName:n}=e,r=m(t,n);s.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),s.set(r,e)}function d(e){const{kernelName:t}=e;i.has(t)&&Object(r.c)().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),i.set(t,e)}function h(e,t){const n=m(e,t);if(!s.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);s.delete(n)}function p(e){if(!i.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);i.delete(e)}function f(e,t){c(e).forEach((e=>{l(Object.assign({},e,{backendName:t}))}))}function m(e,t){return`${t}_${e}`}},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(2),s=n(3),i=n(8),o=n(4);const u=Object(o.b)({expandDims_:function(e,t=0){const n=Object(s.a)(e,"x","expandDims","string_or_numeric");i.b(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const o={input:n},u={dim:t};return r.a.runKernel(a.ab,o,u)}})},function(e,t){e.exports=function(){throw new Error("define cannot be used indirect")}},function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(5),a=n(2),s=n(3),i=n(8),o=n(28),u=n(4),c=n(7);const l=Object(u.b)({conv2d_:function(e,t,n,u,l="NHWC",d=[1,1],h){const p=Object(s.a)(e,"x","conv2d"),f=Object(s.a)(t,"filter","conv2d");let m=p,b=!1;3===p.rank&&(b=!0,m=Object(c.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i.b(4===m.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`)),i.b(4===f.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${f.rank}.`)),null!=h&&i.b(i.v(u),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${h} but got pad ${u}.`));const g="NHWC"===l?m.shape[3]:m.shape[1];i.b(g===f.shape[2],(()=>`Error in conv2d: depth of input (${g}) must match input depth for filter ${f.shape[2]}.`)),i.b(o.h(n,d),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`));const y={x:m,filter:f},x={strides:n,pad:u,dataFormat:l,dilations:d,dimRoundingMode:h},O=r.a.runKernel(a.C,y,x);return b?Object(c.a)(O,[O.shape[1],O.shape[2],O.shape[3]]):O}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(2),s=n(21),i=n(3),o=n(16),u=n(4);const c=Object(u.b)({greaterEqual_:function(e,t){let n=Object(i.a)(e,"a","greaterEqual"),u=Object(i.a)(t,"b","greaterEqual");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernel(a.ob,c)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(2),s=n(21),i=n(3),o=n(16),u=n(4);const c=Object(u.b)({lessEqual_:function(e,t){let n=Object(i.a)(e,"a","lessEqual"),u=Object(i.a)(t,"b","lessEqual");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernel(a.zb,c)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({clone_:function(e){const t={x:Object(s.a)(e,"x","clone","string_or_numeric")};return r.a.runKernel(a.qb,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({max_:function(e,t=null,n=!1){const i={x:Object(s.a)(e,"x","max")},o={reductionIndices:t,keepDims:n};return r.a.runKernel(a.Hb,i,o)}})},function(e,t,n){"use strict";n.d(t,"b",(function(){return a})),n.d(t,"d",(function(){return i})),n.d(t,"f",(function(){return u})),n.d(t,"c",(function(){return c})),n.d(t,"e",(function(){return l})),n.d(t,"a",(function(){return d}));var r=n(0);function a(e,t){return s(e,t)}function s(e,t,n=new Map,r=new Set){if(null==e)return null;if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(l(e)){const a=Array.isArray(e)?[]:{};r.add(e);for(const i in e){const o=s(e[i],t,n,r);a[i]=o}return r.delete(e),a}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,a.value),a.value}function i(e,t=u){return o(e,t)}function o(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(l(r)){const a=Array.isArray(r)?[]:{};n.add(r);for(const s in r){const r=o(e.map((e=>e[s])),t,n);a[s]=r}return n.delete(r),a}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return a.value}function u(e){return null===e?null:l(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function c(e,t){const n=new Map;s(e,t,n);for(const e of Array.from(n.keys())){const t=n.get(e);if(r.util.isPromise(t)){const r=await t;n.set(e,r)}}return s(e,t,n)}function l(e){return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof r.Tensor))}function d(e){return null==e||(null===(t=e)||"object"!=typeof t&&"function"!=typeof t)||Array.isArray(e)||"object"==typeof e&&e instanceof r.Tensor||r.util.isTypedArray(e);var t}},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({log_:function(e){const t={x:Object(s.a)(e,"x","log")};return r.a.runKernel(a.Bb,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({split_:function(e,t,n=0){const i={x:Object(s.a)(e,"x","split")},o={numOrSizeSplits:t,axis:n};return r.a.runKernel(a.Jc,i,o)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(3),a=n(8),s=n(42);function i(e,t){Object(a.d)(e);const n=Object(r.c)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Object(s.a)(e,null,n,t)}},function(e,t,n){"use strict";function r(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);const o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||a)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function a(e,t){return e>t?1:e<t?-1:0}function s(e,t,n,r,a){return u(e,t,n,r,a,0)}function i(e,t,n,r,a,s){return u(e,t,n,r,a,0,!1,s,!0)}function o(e,t,n,r,a,s){return u(e,t,n,r,a,s,!0)}function u(e,t,n,a,s,i,o=!1,u=!1,h=!1){const p=[];for(let e=0;e<t.length;e++)t[e]>s&&p.push({score:t[e],boxIndex:e,suppressBeginIndex:0});p.sort(d);const f=i>0?-.5/i:0,m=[],b=[];for(;m.length<n&&p.length>0;){const t=p.pop(),{score:n,boxIndex:i,suppressBeginIndex:o}=t;if(n<s)break;let u=!1;for(let n=m.length-1;n>=o;--n){const r=c(e,i,m[n]);if(r>=a){u=!0;break}if(t.score=t.score*l(a,f,r),t.score<=s)break}t.suppressBeginIndex=m.length,u||(t.score===n?(m.push(i),b.push(t.score)):t.score>s&&r(p,t,d))}const g=m.length,y=n-g;u&&y>0&&(m.push(...new Array(y).fill(0)),b.push(...new Array(y).fill(0)));const x={selectedIndices:m};return o&&(x.selectedScores=b),h&&(x.validOutputs=g),x}function c(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),c=Math.min(a[0],a[2]),l=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),h=Math.max(a[1],a[3]),p=(o-s)*(u-i),f=(d-c)*(h-l);if(p<=0||f<=0)return 0;const m=Math.max(s,c),b=Math.max(i,l),g=Math.min(o,d),y=Math.min(u,h),x=Math.max(g-m,0)*Math.max(y-b,0);return x/(p+f-x)}function l(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function d(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return i})),n.d(t,"c",(function(){return o}))},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(8),s=n(48),i=n(65);function o(e,t="float32"){if("complex64"===t){const t=o(e,"float32"),n=Object(i.a)(e,"float32");return Object(s.a)(t,n)}const n=Object(a.D)(Object(a.O)(e),t);return r.a.makeTensor(n,e,t)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(5),a=n(8),s=n(48);function i(e,t="float32"){if("complex64"===t){const t=i(e,"float32"),n=i(e,"float32");return Object(s.a)(t,n)}const n=Object(a.F)(Object(a.O)(e),t);return r.a.makeTensor(n,e,t)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({relu_:function(e){const t={x:Object(s.a)(e,"x","relu")};return r.a.runKernel(a.mc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({step_:function(e,t=0){const n={x:Object(s.a)(e,"x","step")},i={alpha:t};return r.a.runKernel(a.Nc,n,i)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(2),s=n(3),i=n(8),o=n(4);const u=Object(o.b)({unstack_:function(e,t=0){const n=Object(s.a)(e,"x","unstack","string_or_numeric");i.b(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const o={value:n},u={axis:t};return r.a.runKernel(a.Yc,o,u)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(2),s=n(3),i=n(8),o=n(7);var u=n(4);const c=Object(u.b)({batchNorm_:function(e,t,n,u,c,l){null==l&&(l=.001);const d=Object(s.a)(e,"x","batchNorm"),h=Object(s.a)(t,"mean","batchNorm"),p=Object(s.a)(n,"variance","batchNorm");let f,m;null!=c&&(f=Object(s.a)(c,"scale","batchNorm")),null!=u&&(m=Object(s.a)(u,"offset","batchNorm")),i.b(h.rank===p.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),i.b(null==m||h.rank===m.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),i.b(null==f||h.rank===f.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const b={x:function(e){let t;return t=0===e.rank||1===e.rank?Object(o.a)(e,[1,1,1,e.size]):2===e.rank?Object(o.a)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?Object(o.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(d),scale:f,offset:m,mean:h,variance:p},g={varianceEpsilon:l},y=r.a.runKernel(a.ib,b,g);return Object(o.a)(y,d.shape)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({sigmoid_:function(e){const t={x:Object(s.a)(e,"x","sigmoid")};return r.a.runKernel(a.Ac,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(2),s=n(3),i=n(8),o=n(4);const u=Object(o.b)({tile_:function(e,t){const n=Object(s.a)(e,"x","tile","string_or_numeric");i.b(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const o={x:n},u={reps:t};return r.a.runKernel(a.Tc,o,u)}})},function(e,t,n){var r=n(232),a=n(233),s=n(234),i=n(235),o=n(236),u=n(237),c=n(238);c.alea=r,c.xor128=a,c.xorwow=s,c.xorshift7=i,c.xor4096=o,c.tychei=u,e.exports=c},function(e,t,n){"use strict";var r,a;n.d(t,"a",(function(){return r})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(r||(r={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(a||(a={}))},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({mean_:function(e,t=null,n=!1){const i={x:Object(s.a)(e,"x","mean")},o={axis:t,keepDims:n};return r.a.runKernel(a.Ob,i,o)}})},function(e,t,n){"use strict";var r,a,s,i,o;n.d(t,"a",(function(){return r})),n.d(t,"c",(function(){return c})),n.d(t,"b",(function(){return l})),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(a||(a={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(s||(s={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(i||(i={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(o||(o={}));const u={float32:i,int32:a,bool:s,complex64:o};function c(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return u[e][t]}function l(e){return c(e,"int32")}},function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(5),a=n(2),s=n(21),i=n(3),o=n(16),u=n(11),c=n(4);const l=Object(c.b)({maximum_:function(e,t){let n=Object(i.a)(e,"a","maximum"),c=Object(i.a)(t,"b","maximum");[n,c]=Object(s.makeTypesMatch)(n,c),"bool"===n.dtype&&(n=Object(u.a)(n,"int32"),c=Object(u.a)(c,"int32")),Object(o.a)(n.shape,c.shape);const l={a:n,b:c};return r.a.runKernel(a.Nb,l)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(2),s=n(3),i=n(8),o=n(4);const u=Object(o.b)({batchToSpaceND_:function(e,t,n){const o=Object(s.a)(e,"x","batchToSpaceND"),u=t.reduce(((e,t)=>e*t));i.b(o.rank>=1+t.length,(()=>`input rank is ${o.rank} but should be > than blockShape.length ${t.length}`)),i.b(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),i.b(o.shape[0]%u==0,(()=>`input tensor batch is ${o.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${u}`));const c={x:o},l={blockShape:t,crops:n};return r.a.runKernel(a.t,c,l)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(2),s=n(3),i=n(8),o=n(4),u=n(7);const c=Object(o.b)({depthwiseConv2d_:function(e,t,n,o,c="NHWC",l=[1,1],d){const h=Object(s.a)(e,"x","depthwiseConv2d"),p=Object(s.a)(t,"filter","depthwiseConv2d");let f=h,m=!1;3===h.rank&&(m=!0,f=Object(u.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),i.b(4===f.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`)),i.b(4===p.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),i.b(f.shape[3]===p.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null!=d&&i.b(i.v(o),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${d} but got pad ${o}.`));const b={x:f,filter:p},g={strides:n,pad:o,dataFormat:c,dilations:l,dimRoundingMode:d},y=r.a.runKernel(a.O,b,g);return m?Object(u.a)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(2),s=n(21),i=n(3),o=n(16),u=n(4);const c=Object(u.b)({equal_:function(e,t){let n=Object(i.a)(e,"a","equal"),u=Object(i.a)(t,"b","equal");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernel(a.X,c)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({gather_:function(e,t,n=0,i=0){const o={x:Object(s.a)(e,"x","gather"),indices:Object(s.a)(t,"indices","gather","int32")},u={axis:n,batchDims:i};return r.a.runKernel(a.mb,o,u)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({logicalNot_:function(e){const t={x:Object(s.a)(e,"x","logicalNot","bool")};return r.a.runKernel(a.Fb,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(2),s=n(3),i=n(8),o=n(4);const u=Object(o.b)({spaceToBatchND_:function(e,t,n){const o=Object(s.a)(e,"x","spaceToBatchND");i.b(o.rank>=1+t.length,(()=>`input rank ${o.rank} should be > than [blockShape] ${t.length}`)),i.b(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),i.b(o.shape.reduce(((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]==0:e),!0),(()=>`input spatial dimensions ${o.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const u={x:o},c={blockShape:t,paddings:n};return r.a.runKernel(a.Hc,u,c)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(3),a=n(8),s=n(4),i=n(7);const o=Object(s.b)({squeeze_:function(e,t){const n=Object(r.a)(e,"x","squeeze");return Object(i.a)(n,Object(a.Q)(n.shape,t).newShape)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n(3),a=n(42);function s(e,t,n){const s=Object(r.c)(e,n);return Object(a.a)(e,t,s,n)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a})),n.d(t,"b",(function(){return s})),n.d(t,"c",(function(){return i}));var r=n(72);n(120);class a{constructor(e,t,n,a,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const i=s||Math.random();this.random=r.alea(i.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class s{constructor(e,t,n,s){this.alpha=e,this.beta=1/t,this.dtype=n;const i=s||Math.random();this.randu=r.alea(i.toString()),this.randn=new a(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class i{constructor(e=0,t=1,n,a){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"==typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=r.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));const r={};function a(e){return r[e]}},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(2),s=n(3),i=n(57),o=n(4),u=n(7);const c=Object(o.b)({broadcastTo_:function(e,t){let n=Object(s.a)(e,"broadcastTo","x");const o=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Object(u.a)(n,e)}const c=n.shape,l=Array.from(t);for(let e=t.length-1;e>=0;e--)if(c[e]===t[e])l[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${t}].`);if(0===l.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Object(i.a)(n);const d={x:n},h={reps:l};return r.a.runKernel(a.Tc,d,h)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({min_:function(e,t=null,n=!1){const i={x:Object(s.a)(e,"x","min")},o={axis:t,keepDims:n};return r.a.runKernel(a.Pb,i,o)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({oneHot_:function(e,t,n=1,i=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const o={indices:Object(s.a)(e,"indices","oneHot","int32")},u={depth:t,onValue:n,offValue:i};return r.a.runKernel(a.ac,o,u)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({real_:function(e){const t={input:Object(s.a)(e,"input","real")};return r.a.runKernel(a.jc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(8),i=n(4);const o=Object(i.b)({ifft_:function(e){Object(s.b)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return r.a.runKernel(a.pb,t)}})},function(e,t,n){"use strict";(function(e,r){let a;function s(){if(null==a){let t;if("undefined"!=typeof window)t=window;else if(void 0!==e)t=e;else if(void 0!==r)t=r;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}a=t}return a}function i(e,t){const n=function(){const e=s();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}n.d(t,"b",(function(){return s})),n.d(t,"a",(function(){return i}))}).call(this,n(128),n(129))},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t){(function(t){e.exports=t}).call(this,{})},function(e,t,n){"use strict";n.r(t),n.d(t,"validateUpdateShape",(function(){return a})),n.d(t,"validateInput",(function(){return s})),n.d(t,"calculateShapes",(function(){return i}));var r=n(8);function a(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function s(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}a(n,t,e)}function i(e,t,n){const a=t.shape.length,s=a>1?t.shape[a-1]:1,i=n.length;let o=1;for(let e=s;e<i;++e)o*=n[e];const u=s<1?1:s;return{sliceRank:s,numUpdates:Object(r.O)(t.shape)/u,sliceSize:o,strides:[...Object(r.j)(n.slice(0,s)),1],outputSize:Object(r.O)(n)}}},function(e,t,n){"use strict";n.r(t),n.d(t,"assertParamsValid",(function(){return a})),n.d(t,"maskToAxes",(function(){return s})),n.d(t,"computeOutShape",(function(){return i})),n.d(t,"stridesWithElidedDims",(function(){return o})),n.d(t,"getNormalizedAxes",(function(){return l})),n.d(t,"startIndicesWithElidedDims",(function(){return d})),n.d(t,"stopIndicesWithElidedDims",(function(){return h})),n.d(t,"stridesForAxis",(function(){return p})),n.d(t,"startForAxis",(function(){return f})),n.d(t,"stopForAxis",(function(){return m})),n.d(t,"isSliceContinous",(function(){return b})),n.d(t,"computeFlatOffset",(function(){return g})),n.d(t,"parseSliceParams",(function(){return y})),n.d(t,"sliceInfo",(function(){return x}));var r=n(8);function a(e,t,n){const a=e.shape.length;r.b(a===t.length,(()=>`Error in slice${a}D: Length of begin ${t} must match the rank of the array (${a}).`)),r.b(a===n.length,(()=>`Error in slice${a}D: Length of size ${n} must match the rank of the array (${a}).`));for(let s=0;s<a;++s)r.b(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${a}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function s(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function i(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function o(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function u(e,t,n){return n<=e?n:n-(t-1)}function c(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function l(e,t,n,r,a,s,i,u,c){const l=e.length;let b=new Array(l),g=new Array(l),y=new Array(l);if(t.length&&n>0){const c=t[0],l=n+1;b=d(i,c,l,r,e),g=h(u,c,l,a,e),y=o(s,c,l,e)}else for(let t=0;t<l;t++)b[t]=f(i,r,s,e,t,c),g[t]=m(u,a,s,e,t,c),y[t]=p(s,t,c);return{begin:b,end:g,strides:y}}function d(e,t,n,r,a){const s=[...a],i=c(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{const i=u(t,n,a);let o=r[i];e&1<<i&&(o=0),s[a]=o}return s}function h(e,t,n,a,s){const i=[...s],o=c(n,t);for(let r=0;r<i.length;r++)if(o.indexOf(r)>-1)i[r]=Number.MAX_SAFE_INTEGER;else{const s=u(t,n,r);let o=a[s];e&1<<s&&(o=Number.MAX_SAFE_INTEGER),i[r]=o}for(let e=0;e<i.length;e++){const t=s[e];i[e]<0&&(i[e]+=t),i[e]=r.i(0,i[e],s[e])}return i}function p(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function f(e,t,n,a,s,i){let o=t[s];const u=n[s]||1;(e&1<<s||i&1<<s||null==o)&&(o=u>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const c=a[s];return o<0&&(o+=c),o=r.i(0,o,c-1),o}function m(e,t,n,a,s,i){let o=t[s];const u=n[s]||1;(e&1<<s||i&1<<s||null==o)&&(o=u>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const c=a[s];return o<0&&(o+=c),o=u>0?r.i(0,o,c):r.i(-1,o,c-1),o}function b(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function g(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function y(e,t,n){let a;const s=e.shape.length;let i;return a="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),a.forEach((e=>{r.b(-1!==e,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,i=i.map(((t,n)=>t>=0?t:(r.b(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-a[n]))),[a,i]}function x(e,t,n,r,a,o,u,c,d){let h=t.slice(),p=n.slice(),f=r;null==r&&(f=new Array(h.length));const m=s(u);if(m.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==u&&0!==c)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==u&&0!==d)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const b=e.length-h.length,g=s(c),y=e.slice();g.forEach((e=>{h[e]=0,p[e]=1,y.splice(e,0,1)}));const{begin:x,end:O,strides:k}=l(y,m,b,h,p,f,a,o,u);h=x,p=O,f=k;const v=s(d);v.forEach((e=>{p[e]=h[e]+1,f[e]=1}));const w=i(h,p,f),I=w.filter(((e,t)=>-1===v.indexOf(t)));return{nonStrided:f.every((e=>1===e)),$begin:h,$end:p,$strides:f,size:w,newShape:y,outShape:I}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(2),s=n(21),i=n(3),o=n(4);const u=Object(o.b)({floorDiv_:function(e,t){let n=Object(i.a)(e,"a","floorDiv"),o=Object(i.a)(t,"b","floorDiv");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernel(a.gb,u)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n(5),a=n(2);function s(e,t,n){const s={shape:e,value:t,dtype:n};return r.a.runKernel(a.db,{},s)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return d}));var r=n(5),a=n(2),s=n(3),i=n(8),o=n(11),u=n(28),c=n(4),l=n(7);const d=Object(c.b)({avgPool_:function(e,t,n,c,d){const h=Object(s.a)(e,"x","avgPool","float32");i.b(u.h(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let p=h,f=!1;3===h.rank&&(f=!0,p=Object(l.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),i.b(4===p.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${p.rank}.`)),null!=d&&i.b(i.v(c),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${d} but got pad ${c}.`));const m={x:p},b={filterSize:t,strides:n,pad:c,dimRoundingMode:d};let g=r.a.runKernel(a.o,m,b);return g=Object(o.a)(g,h.dtype),f?Object(l.a)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({cos_:function(e){const t={x:Object(s.a)(e,"x","cos")};return r.a.runKernel(a.I,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({cumsum_:function(e,t=0,n=!1,i=!1){const o={x:Object(s.a)(e,"x","cumsum")},u={axis:t,exclusive:n,reverse:i};return r.a.runKernel(a.L,o,u)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({elu_:function(e){const t={x:Object(s.a)(e,"x","elu")};return r.a.runKernel(a.V,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({floor_:function(e){const t={x:Object(s.a)(e,"x","floor")};return r.a.runKernel(a.fb,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({imag_:function(e){const t={input:Object(s.a)(e,"input","imag")};return r.a.runKernel(a.rb,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({leakyRelu_:function(e,t=.2){const n={x:Object(s.a)(e,"x","leakyRelu")},i={alpha:t};return r.a.runKernel(a.xb,n,i)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(2),s=n(21),i=n(3),o=n(16),u=n(4);const c=Object(u.b)({less_:function(e,t){let n=Object(i.a)(e,"a","less"),u=Object(i.a)(t,"b","less");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernel(a.yb,c)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(3),a=n(8),s=n(12),i=n(33),o=n(35),u=n(60),c=n(58),l=n(4),d=n(7),h=n(13),p=n(17);const f=Object(l.b)({logSumExp_:function(e,t=null,n=!1){const l=Object(r.a)(e,"x","logSumExp"),f=Object(a.I)(t,l.shape),m=Object(c.a)(l,f,!0),b=Object(h.a)(l,m),g=Object(o.a)(b),y=Object(p.a)(g,f),x=Object(u.a)(y),O=Object(s.a)(Object(d.a)(m,x.shape),x);if(n){const e=Object(i.e)(O.shape,f);return Object(d.a)(O,e)}return O}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(2),s=n(3),i=n(16),o=n(4);const u=Object(o.b)({logicalOr_:function(e,t){const n=Object(s.a)(e,"a","logicalOr","bool"),o=Object(s.a)(t,"b","logicalOr","bool");Object(i.a)(n.shape,o.shape);const u={a:n,b:o};return r.a.runKernel(a.Gb,u)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(5),a=n(2),s=n(3),i=n(8),o=n(28),u=n(4),c=n(7);const l=Object(u.b)({maxPool_:function(e,t,n,u,l){const d=Object(s.a)(e,"x","maxPool");let h=d,p=!1;3===d.rank&&(p=!0,h=Object(c.a)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),i.b(4===h.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${h.rank}.`)),i.b(o.h(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=l&&i.b(i.v(u),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${l} but got pad ${u}.`));const f={x:h},m={filterSize:t,strides:n,pad:u,dimRoundingMode:l},b=r.a.runKernel(a.Ib,f,m);return p?Object(c.a)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(5),a=n(2),s=n(21),i=n(3),o=n(16),u=n(11),c=n(4);const l=Object(c.b)({minimum_:function(e,t){let n=Object(i.a)(e,"a","minimum"),c=Object(i.a)(t,"b","minimum");[n,c]=Object(s.makeTypesMatch)(n,c),"bool"===n.dtype&&(n=Object(u.a)(n,"int32"),c=Object(u.a)(c,"int32")),Object(o.a)(n.shape,c.shape);const l={a:n,b:c};return r.a.runKernel(a.Qb,l)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(2),s=n(21),i=n(3),o=n(16),u=n(4);const c=Object(u.b)({notEqual_:function(e,t){let n=Object(i.a)(e,"a","notEqual"),u=Object(i.a)(t,"b","notEqual");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernel(a.Zb,c)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({prelu_:function(e,t){const n={x:Object(s.a)(e,"x","prelu"),alpha:Object(s.a)(t,"alpha","prelu")};return r.a.runKernel(a.gc,n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({relu6_:function(e){const t={x:Object(s.a)(e,"x","relu6")};return r.a.runKernel(a.nc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(8),i=n(4);const o=Object(i.b)({fft_:function(e){Object(s.b)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return r.a.runKernel(a.cb,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return m}));var r=n(8),a=n(48),s=n(27),i=n(104),o=n(4),u=n(90),c=n(7),l=n(24),d=n(61),h=n(65),p=n(18),f=n(114);const m=Object(o.b)({rfft_:function(e,t){Object(r.b)("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const o=e.size/n;let m;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,m=Object(l.a)(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,m=Object(s.a)([e,Object(h.a)(r)],e.shape.length-1),n=t}else m=e;const b=Object(p.a)(m),g=Object(c.a)(Object(a.a)(m,b),[o,n]),y=Object(f.a)(g),x=Math.floor(n/2)+1,O=Object(u.a)(y),k=Object(i.a)(y),v=Object(d.a)(O,[x,n-x],O.shape.length-1),w=Object(d.a)(k,[x,n-x],k.shape.length-1),I=m.shape.slice();return I[m.shape.length-1]=x,Object(c.a)(Object(a.a)(v[0],w[0]),I)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(2),s=n(21),i=n(3),o=n(16),u=n(4);const c=Object(u.b)({squaredDifference_:function(e,t){let n=Object(i.a)(e,"a","squaredDifference"),u=Object(i.a)(t,"b","squaredDifference");[n,u]=Object(s.makeTypesMatch)(n,u),Object(o.a)(n.shape,u.shape);const c={a:n,b:u};return r.a.runKernel(a.Mc,c,{})}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(2),s=n(3),i=n(8),o=n(4);const u=Object(o.b)({unsortedSegmentSum_:function(e,t,n){const o=Object(s.a)(e,"x","unsortedSegmentSum"),u=Object(s.a)(t,"segmentIds","unsortedSegmentSum","int32");Object(i.b)(Object(i.v)(n),(()=>"numSegments must be of dtype int"));const c={x:o,segmentIds:u},l={numSegments:n};return r.a.runKernel(a.Zc,c,l)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return g}));var r=n(3),a=n(8),s=n(36),i=n(33),o=n(58),u=n(88),c=n(4),l=n(45),d=n(7),h=n(15),p=n(32),f=n(22),m=n(17);function b(e,t,n=null){if(0===e.rank)return Object(s.a)(e);if(1!==e.rank&&null===n)return b(Object(d.a)(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Object(m.a)(Object(s.a)(e),n);if(t===1/0)return Object(o.a)(Object(s.a)(e),n);if(t===-1/0)return Object(u.a)(Object(s.a)(e),n);if("euclidean"===t||2===t)return Object(p.a)(Object(m.a)(Object(l.a)(Object(s.a)(e),Object(h.a)(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Object(o.a)(Object(m.a)(Object(s.a)(e),n[0]),n[1]-1);if(t===1/0)return Object(o.a)(Object(m.a)(Object(s.a)(e),n[1]),n[0]);if(t===-1/0)return Object(u.a)(Object(m.a)(Object(s.a)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Object(p.a)(Object(m.a)(Object(f.a)(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const g=Object(c.b)({norm_:function(e,t="euclidean",n=null,s=!1){const o=b(e=Object(r.a)(e,"x","norm"),t,n);let u=o.shape;if(s){const t=Object(a.I)(n,e.shape);u=i.e(o.shape,t)}return Object(d.a)(o,u)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(2),s=n(8),i=n(4),o=n(7);const u=Object(i.b)({conv2DBackpropInput_:function(e,t,n,i,u,c="NHWC",l){s.b(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let d=e,h=t,p=!1;3===t.rank&&(p=!0,h=Object(o.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),d=[1,e[0],e[1],e[2]]),s.b(4===d.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${d.length}.`)),s.b(4===h.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${h.rank}`)),s.b(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const f="NHWC"===c?d[3]:d[1],m="NHWC"===c?h.shape[3]:h.shape[1];s.b(f===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${f}) must match input depth for filter ${n.shape[2]}.`)),s.b(m===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${m}) must match output depth for filter ${n.shape[3]}.`)),null!=l&&s.b(s.v(u),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${l} but got pad ${u}.`));const b={dy:h,filter:n},g={strides:i,pad:u,dataFormat:c,dimRoundingMode:l,inputShape:d},y=r.a.runKernel(a.E,b,g);return p?Object(o.a)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},function(e,t,n){"use strict";n.r(t),n.d(t,"TEST_EPSILON_FLOAT16",(function(){return o})),n.d(t,"expectArraysClose",(function(){return u})),n.d(t,"testEpsilon",(function(){return c})),n.d(t,"expectPromiseToFail",(function(){return d})),n.d(t,"expectArraysEqual",(function(){return h})),n.d(t,"expectNumbersClose",(function(){return p})),n.d(t,"expectValuesInRange",(function(){return m})),n.d(t,"expectArrayBuffersEqual",(function(){return b})),n.d(t,"encodeStrings",(function(){return g}));var r=n(5),a=n(3),s=n(8),i=n(10);const o=.1;function u(e,t,n){return null==n&&(n=c()),l(e,t,((e,t)=>f(e,t,n)))}function c(){return 32===r.a.backend.floatPrecision()?.001:o}function l(e,t,n){let r=!0;if((Object(s.A)(e)||Object(s.A)(t))&&(r=!1),Object(s.A)(e)&&Object(s.A)(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=Object(a.c)(e),r=Object(a.c)(t);if(!Object(s.a)(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const i=Object(s.A)(e)?e:Object(s.m)(e),o=Object(s.A)(t)?t:Object(s.m)(t);if(i.length!==o.length)throw new Error(`Arrays have different lengths actual: ${i.length} vs expected: ${o.length}.\nActual:   ${i}.\nExpected: ${o}.`);for(let e=0;e<o.length;++e){const t=i[e],r=o[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${i}.\nExpected: ${o}.`)}}function d(e,t){e().then((()=>t.fail()),(()=>t()))}function h(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return Object(s.z)(e)||Object(s.z)(e[0])||Object(s.z)(t)||Object(s.z)(t[0])?l(e,n,((e,t)=>e==t)):l(e,t,((e,t)=>f(e,t,0)))}function p(e,t,n){if(null==n&&(n=c()),!f(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function f(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function m(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function b(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}function g(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?g(n):e[t]=Object(i.encodeString)(n)}return e}},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(2),s=n(8),i=n(4),o=n(7);const u=Object(i.b)({conv2DBackpropFilter_:function(e,t,n,i,u,c="NHWC",l){let d=e;3===e.rank&&(d=Object(o.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let h=t;3===h.rank&&(h=Object(o.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),s.b(4===d.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${d.shape}.`)),s.b(4===h.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${h.shape}.`)),s.b(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const p="NHWC"===c?d.shape[3]:d.shape[1],f="NHWC"===c?h.shape[3]:h.shape[1];s.b(p===n[2],(()=>`Error in conv2dDerFilter: depth of input ${p}) must match input depth in filter (${n[2]}.`)),s.b(f===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${f}) must match output depth for filter (${n[3]}).`)),null!=l&&s.b(s.v(u),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${l} but got pad ${u}.`));const m={x:d,dy:h},b={strides:i,pad:u,dataFormat:c,dimRoundingMode:l,filterShape:n};return r.a.runKernel(a.D,m,b)}})},function(e,t,n){"use strict";(function(e){n(5);var t=n(130),r=n(20);const a=Object(r.c)();a.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),a.registerFlag("IS_BROWSER",(()=>t.isBrowser())),a.registerFlag("IS_NODE",(()=>void 0!==e&&void 0!==e.versions&&void 0!==e.versions.node)),a.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),a.registerFlag("PROD",(()=>!1)),a.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>a.getBool("DEBUG"))),a.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),a.registerFlag("IS_TEST",(()=>!1)),a.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),a.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1))}).call(this,n(129))},function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return a}));class r{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class a{refCount(e){return s("refCount")}incRef(e){return s("incRef")}timerAvailable(){return!0}time(e){return s("time")}read(e){return s("read")}readSync(e){return s("readSync")}numDataIds(){return s("numDataIds")}disposeData(e,t){return s("disposeData")}write(e,t,n){return s("write")}move(e,t,n,r,a){return s("move")}memory(){return s("memory")}floatPrecision(){return s("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return s("dispose")}}function s(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({tanh_:function(e){const t={x:Object(s.a)(e,"x","tanh")};return r.a.runKernel(a.Sc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n(5),a=n(2);function s(e,t,n=1,s="float32"){if(0===n)throw new Error("Cannot have a step of zero");const i={start:e,stop:t,step:n,dtype:s};return r.a.runKernel(a.ic,{},i)}},function(e,t,n){"use strict";n.d(t,"b",(function(){return r})),n.d(t,"a",(function(){return a}));const r=1.7580993408473768,a=1.0507009873554805},function(e,t,n){"use strict";n.d(t,"a",(function(){return r}));const r={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8}},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"==typeof window&&(n=window)}e.exports=n},function(e,t){var n,r,a=e.exports={};function s(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function o(e){if(n===setTimeout)return setTimeout(e,0);if((n===s||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:s}catch(e){n=s}try{r="function"==typeof clearTimeout?clearTimeout:i}catch(e){r=i}}();var u,c=[],l=!1,d=-1;function h(){l&&u&&(l=!1,u.length?c=u.concat(c):d=-1,c.length&&p())}function p(){if(!l){var e=o(h);l=!0;for(var t=c.length;t;){for(u=c,c=[];++d<t;)u&&u[d].run();d=-1,t=c.length}u=null,l=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===i||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(t){try{return r.call(null,e)}catch(t){return r.call(this,e)}}}(e)}}function f(e,t){this.fun=e,this.array=t}function m(){}a.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];c.push(new f(e,t)),1!==c.length||l||o(p)},f.prototype.run=function(){this.fun.apply(null,this.array)},a.title="browser",a.browser=!0,a.env={},a.argv=[],a.version="",a.versions={},a.on=m,a.addListener=m,a.once=m,a.off=m,a.removeListener=m,a.removeAllListeners=m,a.emit=m,a.prependListener=m,a.prependOnceListener=m,a.listeners=function(e){return[]},a.binding=function(e){throw new Error("process.binding is not supported")},a.cwd=function(){return"/"},a.chdir=function(e){throw new Error("process.chdir is not supported")},a.umask=function(){return 0}},function(e,t,n){"use strict";function r(){if("undefined"!=typeof navigator&&null!=navigator){const e=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function a(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}n.r(t),n.d(t,"isMobile",(function(){return r})),n.d(t,"isBrowser",(function(){return a}))},function(e,t,n){"use strict";function r(e,t=!1){console.log(e.toString(t))}n.d(t,"a",(function(){return r}))},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({all_:function(e,t=null,n=!1){const i={x:Object(s.a)(e,"x","all","bool")},o={axis:t,keepDims:n};return r.a.runKernel(a.f,i,o)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({any_:function(e,t=null,n=!1){const i={x:Object(s.a)(e,"x","any","bool")},o={axis:t,keepDims:n};return r.a.runKernel(a.g,i,o)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({argMax_:function(e,t=0){const n={x:Object(s.a)(e,"x","argMax")},i={axis:t};return r.a.runKernel(a.h,n,i)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({argMin_:function(e,t=0){const n={x:Object(s.a)(e,"x","argMin")},i={axis:t};return r.a.runKernel(a.i,n,i)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(2),s=n(21),i=n(3),o=n(4);const u=Object(o.b)({atan2_:function(e,t){let n=Object(i.a)(e,"a","atan2"),o=Object(i.a)(t,"b","atan2");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernel(a.m,u)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(3),a=n(8),s=n(54),i=n(28),o=n(4),u=n(7);const c=Object(o.b)({conv1d_:function(e,t,n,o,c="NWC",l=1,d){const h=Object(r.a)(e,"x","conv1d"),p=Object(r.a)(t,"filter","conv1d");let f=h,m=!1;2===h.rank&&(m=!0,f=Object(u.a)(h,[1,h.shape[0],h.shape[1]])),a.b(3===f.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${f.rank}.`)),a.b(3===p.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${p.rank}.`)),null!=d&&a.b(a.v(o),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${d} but got pad ${o}.`)),a.b(f.shape[2]===p.shape[1],(()=>`Error in conv1d: depth of input (${f.shape[2]}) must match input depth for filter ${p.shape[1]}.`)),a.b(i.h(n,l),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${l}'`)),a.b("NWC"===c,(()=>`Error in conv1d: got dataFormat of ${c} but only NWC is currently supported.`));const b=Object(u.a)(p,[1,p.shape[0],p.shape[1],p.shape[2]]),g=Object(u.a)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),y=[1,n],x=[1,l],O=Object(s.a)(g,b,y,o,"NHWC",x,d);return m?Object(u.a)(O,[O.shape[2],O.shape[3]]):Object(u.a)(O,[O.shape[0],O.shape[2],O.shape[3]])}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(3),a=n(119),s=n(4);const i=Object(s.b)({conv2dTranspose_:function(e,t,n,s,i,o){const u=Object(r.a)(e,"x","conv2dTranspose"),c=Object(r.a)(t,"filter","conv2dTranspose");return Object(a.a)(n,u,c,s,i,"NHWC",o)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({cosh_:function(e){const t={x:Object(s.a)(e,"x","cosh")};return r.a.runKernel(a.J,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(2),s=n(3),i=n(8),o=n(4);const u=Object(o.b)({depthToSpace_:function(e,t,n="NHWC"){const o=Object(s.a)(e,"x","depthToSpace"),u="NHWC"===n?o.shape[1]:o.shape[2],c="NHWC"===n?o.shape[2]:o.shape[3],l="NHWC"===n?o.shape[3]:o.shape[1];i.b(u*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${u} and ${t}  for depthToSpace with input shape\n    ${o.shape}`)),i.b(c*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${c} and ${t} for depthToSpace with input shape\n        ${o.shape}`)),i.b(l%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${l} for depthToSpace with input shape ${o.shape}`));const d={x:o},h={blockSize:t,dataFormat:n};return r.a.runKernel(a.N,d,h)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(2),s=n(3),i=n(8),o=n(4),u=n(7);const c=Object(o.b)({dilation2d_:function(e,t,n,o,c=[1,1],l="NHWC"){const d=Object(s.a)(e,"x","dilation2d"),h=Object(s.a)(t,"filter","dilation2d");i.b(3===d.rank||4===d.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${d.rank}.`)),i.b(3===h.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${h.rank}.`)),i.b("NHWC"===l,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${l}`));let p=d,f=!1;3===d.rank&&(p=Object(u.a)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),f=!0);const m={x:p,filter:h},b={strides:n,pad:o,dilations:c},g=r.a.runKernel(a.S,m,b);return f?Object(u.a)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(21),a=n(3),s=n(14),i=n(79),o=n(4),u=n(31),c=n(18);const l=Object(o.b)({divNoNan_:function(e,t){let n=Object(a.a)(e,"a","div"),o=Object(a.a)(t,"b","div");[n,o]=Object(r.makeTypesMatch)(n,o);const l=Object(s.a)(n,o),d=Object(c.a)(l),h=Object(i.a)(o,d);return Object(u.a)(h,d,l)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(3),a=n(8),s=n(25),i=n(4),o=n(7);const u=Object(i.b)({dot_:function(e,t){const n=Object(r.a)(e,"t1","dot"),i=Object(r.a)(t,"t2","dot");a.b(!(1!==n.rank&&2!==n.rank||1!==i.rank&&2!==i.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${i.rank}.`));const u=1===n.rank?n.size:n.shape[1],c=1===i.rank?i.size:i.shape[0];if(a.b(u===c,(()=>`Error in dot: inner dimensions of inputs must match, but got ${u} and ${c}.`)),1===n.rank&&1===i.rank){const e=Object(o.a)(n,[1,-1]),t=Object(o.a)(i,[-1,1]),r=Object(s.a)(e,t);return Object(o.a)(r,[])}if(1===n.rank&&2===i.rank){const e=Object(o.a)(n,[1,-1]),t=Object(o.a)(i,[i.shape[0],i.shape[1]]),r=Object(s.a)(e,t);return Object(o.a)(r,[r.size])}if(2===n.rank&&1===i.rank){const e=Object(o.a)(i,[-1,1]),t=Object(s.a)(n,e);return Object(o.a)(t,[t.size])}{const e=Object(o.a)(i,[i.shape[0],i.shape[1]]);return Object(s.a)(n,e)}}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(2),s=n(3),i=n(8),o=n(4),u=n(7);const c=Object(o.b)({localResponseNormalization_:function(e,t=5,n=1,o=1,c=.5){const l=Object(s.a)(e,"x","localResponseNormalization");i.b(4===l.rank||3===l.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${l.rank}.`)),i.b(i.v(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let d=l,h=!1;3===l.rank&&(h=!0,d=Object(u.a)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const p={x:d},f={depthRadius:t,bias:n,alpha:o,beta:c},m=r.a.runKernel(a.vb,p,f);return h?Object(u.a)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({log1p_:function(e){const t={x:Object(s.a)(e,"x","log1p")};return r.a.runKernel(a.Cb,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({softplus_:function(e){const t={x:Object(s.a)(e,"x","softplus")};return r.a.runKernel(a.Gc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(3),a=n(16),s=n(49),i=n(81),o=n(108),u=n(4);const c=Object(u.b)({logicalXor_:function(e,t){const n=Object(r.a)(e,"a","logicalXor","bool"),u=Object(r.a)(t,"b","logicalXor","bool");return Object(a.a)(n.shape,u.shape),Object(s.a)(Object(o.a)(e,t),Object(i.a)(Object(s.a)(e,t)))}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(2),s=n(3),i=n(8),o=n(4);const u=Object(o.b)({mirrorPad_:function(e,t,n){i.b("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const o=Object(s.a)(e,"x","mirrorPad");if(0===o.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");i.b(t.length===o.rank,(()=>`Padding doesn't match input. Must be ${o.rank}. Got ${t.length}.`));const u="reflect"===n?1:0;for(let e=0;e<o.rank;e++)i.b(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),i.b(t[e][0]>=0&&t[e][0]<=o.shape[e]-u&&t[e][1]>=0&&t[e][1]<=o.shape[e]-u,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${o.shape[e]-u} or less than 0 for input of shape ${o.shape}`));const c={paddings:t,mode:n},l={x:o};return r.a.runKernel(a.Rb,l,c)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(2),s=n(21),i=n(3),o=n(4);const u=Object(o.b)({mod_:function(e,t){let n=Object(i.a)(e,"a","mod"),o=Object(i.a)(t,"b","mod");[n,o]=Object(s.makeTypesMatch)(n,o);const u={a:n,b:o};return r.a.runKernel(a.Sb,u)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return h}));var r=n(3),a=n(8),s=n(99),i=n(77),o=n(28),u=n(109),c=n(4),l=n(7),d=n(82);const h=Object(c.b)({pool_:function(e,t,n,c,h,p){null==h&&(h=[1,1]),null==p&&(p=1),0===c&&(c="valid");const f=Object(r.a)(e,"x","maxPool");let m=f,b=!1;3===f.rank&&(b=!0,m=Object(l.a)(f,[1,f.shape[0],f.shape[1],f.shape[2]])),a.b(o.h(p,h),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${p} and dilations '${h}'`));const g=o.e(m.shape,t,p,h,c),y=[g.dilationHeight,g.dilationWidth];let x;x="same"===c?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),a=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],a[t]]))}([g.filterHeight,g.filterWidth],y):[[0,0],[0,0]];const O=1===y[0]&&1===y[1],[k,v]=function(e,t,n){const r=n.map((e=>e[0])),a=n.map((e=>e[1])),s=e.concat(r,a),i=t.map(((e,t)=>(e-s[t]%e)%e)),o=a.map(((e,t)=>e+i[t])),u=t.map(((e,t)=>[r[t],o[t]])),c=t.map(((e,t)=>[0,i[t]]));return[u,c]}([g.inHeight,g.inWidth],y,x),w=O?c:"valid",I=O?m:Object(d.a)(m,y,k),j=("avg"===n?()=>Object(s.a)(I,t,p,w):()=>Object(u.a)(I,t,p,w))(),N=O?j:Object(i.a)(j,y,v);return b?Object(l.a)(N,[N.shape[1],N.shape[2],N.shape[3]]):N}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(2),s=n(3),i=n(11),o=n(4);const u=Object(o.b)({prod_:function(e,t=null,n=!1){let o=Object(s.a)(e,"x","prod");"bool"===o.dtype&&(o=Object(i.a)(o,"int32"));const u={x:o},c={axis:t,keepDims:n};return r.a.runKernel(a.hc,u,c)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(39),a=n(4),s=n(85);const i=Object(a.b)({randomUniform_:function(e,t=0,n=1,a="float32",i){const o=Object(r.a)(e,a),u=new s.c(t,n,null,i);for(let e=0;e<o.values.length;e++)o.values[e]=u.nextValue();return o.toTensor()}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({rsqrt_:function(e){const t={x:Object(s.a)(e,"x","rsqrt")};return r.a.runKernel(a.wc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({selu_:function(e){const t={x:Object(s.a)(e,"x","selu")};return r.a.runKernel(a.zc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(3),a=n(8),s=n(54),i=n(78),o=n(4),u=n(7);const c=Object(o.b)({separableConv2d_:function(e,t,n,o,c,l=[1,1],d="NHWC"){const h=Object(r.a)(e,"x","separableConv2d"),p=Object(r.a)(t,"depthwiseFilter","separableConv2d"),f=Object(r.a)(n,"pointwiseFilter","separableConv2d");let m=h,b=!1;if(3===h.rank&&(b=!0,m=Object(u.a)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),"NCHW"===d)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");a.b(4===m.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${m.rank}.`)),a.b(4===p.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${p.rank}.`)),a.b(4===f.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${p.rank}.`)),a.b(1===f.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${f.shape[0]}.`)),a.b(1===f.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${f.shape[1]}.`));const g=p.shape[2],y=p.shape[3];a.b(f.shape[2]===g*y,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${g*y}, but got ${f.shape[2]}.`));const x=Object(i.a)(m,p,o,c,d,l),O=Object(s.a)(x,f,1,"valid",d);return b?Object(u.a)(O,[O.shape[1],O.shape[2],O.shape[3]]):O}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({sin_:function(e){const t={x:Object(s.a)(e,"x","sin")};return r.a.runKernel(a.Cc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({sinh_:function(e){const t={x:Object(s.a)(e,"x","sinh")};return r.a.runKernel(a.Dc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return f}));var r=n(48),a=n(27),s=n(104),i=n(9),o=n(4),u=n(90),c=n(7),l=n(40),d=n(15),h=n(24),p=n(91);const f=Object(o.b)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let o;if(t<=2){const r=Object(c.a)(e,[n,t]);o=Object(p.a)(r)}else{const f=[n,2*(t-1)],m=Object(c.a)(Object(u.a)(e),[n,t]),b=Object(c.a)(Object(s.a)(e),[n,t]),g=Object(l.a)(Object(h.a)(m,[0,1],[n,t-2]),1),y=Object(i.a)(Object(l.a)(Object(h.a)(b,[0,1],[n,t-2]),1),Object(d.a)(-1)),x=Object(a.a)([m,g],1),O=Object(a.a)([b,y],1),k=Object(c.a)(Object(r.a)(x,O),[f[0],f[1]]);o=Object(p.a)(k)}if(o=Object(u.a)(o),3===e.rank&&0!==e.shape[0]){const t=o,n=e.shape[0];o=Object(c.a)(o,[n,o.shape[0]/n,o.shape[1]]),t.dispose()}return o}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(3),a=n(8),s=n(42);function i(e,t,n){if(Object(a.d)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const i=Object(r.c)(e,n);if(3!==i.length&&1!==i.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===i.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Object(s.a)(e,t,i,n)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({topk_:function(e,t=1,n=!0){const i=Object(s.a)(e,"x","topk");if(0===i.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const o=i.shape[i.shape.length-1];if(t>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${t}`);const u={x:i},c={k:t,sorted:n},[l,d]=r.a.runKernel(a.Uc,u,c);return{values:l,indices:d}}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(2),s=n(3),i=n(8),o=n(4);const u=Object(o.b)({unique_:function(e,t=0){const n=Object(s.a)(e,"x","unique","string_or_numeric");Object(i.b)(n.rank>0,(()=>"The input tensor must be at least 1D"));const o={x:n},u={axis:t},[c,l]=r.a.runKernel(a.Xc,o,u);return{values:c,indices:l}}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n(163),a=n(3);const s=async function(e){const t=Object(a.a)(e,"condition","whereAsync","bool"),n=await t.data(),s=Object(r.a)(t.shape,n);return e!==t&&t.dispose(),s}},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(39);function a(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const a=Object(r.a)(e,"int32"),s=Object(r.a)([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const r=a.indexToLoc(n[t]),i=t*e.length;s.values.set(r,i)}return s.toTensor()}},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(2),s=n(8),i=n(4),o=n(7);const u=Object(i.b)({conv3DBackpropInput_:function(e,t,n,i,u){s.b(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let c=e,l=t,d=!1;4===t.rank&&(d=!0,l=Object(o.a)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),c=[1,e[0],e[1],e[2],e[3]]);const h=c[4],p=l.shape[4];s.b(5===c.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${c.length}.`)),s.b(5===l.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${l.rank}`)),s.b(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),s.b(h===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${h}) must match input depth for filter ${n.shape[3]}.`)),s.b(p===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${p}) must match output depth for filter ${n.shape[4]}.`));const f={dy:l,filter:n},m={pad:u,strides:i,inputShape:c},b=r.a.runKernel(a.H,f,m);return d?Object(o.a)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(2),s=n(3),i=n(8),o=n(4),u=n(7);const c=Object(o.b)({resizeNearestNeighbor_:function(e,t,n=!1,o=!1){const c=Object(s.a)(e,"images","resizeNearestNeighbor");i.b(3===c.rank||4===c.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${c.rank}.`)),i.b(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),i.b("float32"===c.dtype||"int32"===c.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),i.b(!1===o||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let l=c,d=!1;3===c.rank&&(d=!0,l=Object(u.a)(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const[]=t,h={images:l},p={alignCorners:n,halfPixelCenters:o,size:t},f=r.a.runKernel(a.rc,h,p);return d?Object(u.a)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(2),s=n(3),i=n(8),o=n(4),u=n(7);const c=Object(o.b)({resizeBilinear_:function(e,t,n=!1,o=!1){const c=Object(s.a)(e,"images","resizeBilinear");i.b(3===c.rank||4===c.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${c.rank}.`)),i.b(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),i.b(!1===o||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let l=c,d=!1;3===c.rank&&(d=!0,l=Object(u.a)(c,[1,c.shape[0],c.shape[1],c.shape[2]]));const[]=t,h={images:l},p={alignCorners:n,halfPixelCenters:o,size:t},f=r.a.runKernel(a.pc,h,p);return d?Object(u.a)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(4),i=n(7);const o=Object(s.b)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,s,o,u=[1,1],c){let l=t,d=!1;3===t.rank&&(d=!0,l=Object(i.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={dy:l,filter:n},p={strides:s,pad:o,dimRoundingMode:c,dilations:u,inputShape:e},f=r.a.runKernel(a.Q,h,p);return d?Object(i.a)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(4),i=n(7);const o=Object(s.b)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,s,o,u=[1,1],c){let l=e;3===e.rank&&(l=Object(i.a)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let d=t;3===d.rank&&(d=Object(i.a)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const h={x:l,dy:d},p={strides:s,pad:o,dimRoundingMode:c,dilations:u,filterShape:n};return r.a.runKernel(a.P,h,p)}})},function(e,t,n){"use strict";(function(e){var r=n(226),a=n(227),s=n(228);function i(){return u.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function o(e,t){if(i()<t)throw new RangeError("Invalid typed array length");return u.TYPED_ARRAY_SUPPORT?(e=new Uint8Array(t)).__proto__=u.prototype:(null===e&&(e=new u(t)),e.length=t),e}function u(e,t,n){if(!(u.TYPED_ARRAY_SUPPORT||this instanceof u))return new u(e,t,n);if("number"==typeof e){if("string"==typeof t)throw new Error("If encoding is specified then the first argument must be a string");return d(this,e)}return c(this,e,t,n)}function c(e,t,n,r){if("number"==typeof t)throw new TypeError('"value" argument must not be a number');return"undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer?function(e,t,n,r){if(t.byteLength,n<0||t.byteLength<n)throw new RangeError("'offset' is out of bounds");if(t.byteLength<n+(r||0))throw new RangeError("'length' is out of bounds");t=void 0===n&&void 0===r?new Uint8Array(t):void 0===r?new Uint8Array(t,n):new Uint8Array(t,n,r);u.TYPED_ARRAY_SUPPORT?(e=t).__proto__=u.prototype:e=h(e,t);return e}(e,t,n,r):"string"==typeof t?function(e,t,n){"string"==typeof n&&""!==n||(n="utf8");if(!u.isEncoding(n))throw new TypeError('"encoding" must be a valid string encoding');var r=0|f(t,n),a=(e=o(e,r)).write(t,n);a!==r&&(e=e.slice(0,a));return e}(e,t,n):function(e,t){if(u.isBuffer(t)){var n=0|p(t.length);return 0===(e=o(e,n)).length||t.copy(e,0,0,n),e}if(t){if("undefined"!=typeof ArrayBuffer&&t.buffer instanceof ArrayBuffer||"length"in t)return"number"!=typeof t.length||(r=t.length)!=r?o(e,0):h(e,t);if("Buffer"===t.type&&s(t.data))return h(e,t.data)}var r;throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")}(e,t)}function l(e){if("number"!=typeof e)throw new TypeError('"size" argument must be a number');if(e<0)throw new RangeError('"size" argument must not be negative')}function d(e,t){if(l(t),e=o(e,t<0?0:0|p(t)),!u.TYPED_ARRAY_SUPPORT)for(var n=0;n<t;++n)e[n]=0;return e}function h(e,t){var n=t.length<0?0:0|p(t.length);e=o(e,n);for(var r=0;r<n;r+=1)e[r]=255&t[r];return e}function p(e){if(e>=i())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+i().toString(16)+" bytes");return 0|e}function f(e,t){if(u.isBuffer(e))return e.length;if("undefined"!=typeof ArrayBuffer&&"function"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(e)||e instanceof ArrayBuffer))return e.byteLength;"string"!=typeof e&&(e=""+e);var n=e.length;if(0===n)return 0;for(var r=!1;;)switch(t){case"ascii":case"latin1":case"binary":return n;case"utf8":case"utf-8":case void 0:return B(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return W(e).length;default:if(r)return B(e).length;t=(""+t).toLowerCase(),r=!0}}function m(e,t,n){var r=!1;if((void 0===t||t<0)&&(t=0),t>this.length)return"";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return"";if((n>>>=0)<=(t>>>=0))return"";for(e||(e="utf8");;)switch(e){case"hex":return $(this,t,n);case"utf8":case"utf-8":return N(this,t,n);case"ascii":return T(this,t,n);case"latin1":case"binary":return C(this,t,n);case"base64":return j(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return A(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function b(e,t,n){var r=e[t];e[t]=e[n],e[n]=r}function g(e,t,n,r,a){if(0===e.length)return-1;if("string"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=a?0:e.length-1),n<0&&(n=e.length+n),n>=e.length){if(a)return-1;n=e.length-1}else if(n<0){if(!a)return-1;n=0}if("string"==typeof t&&(t=u.from(t,r)),u.isBuffer(t))return 0===t.length?-1:y(e,t,n,r,a);if("number"==typeof t)return t&=255,u.TYPED_ARRAY_SUPPORT&&"function"==typeof Uint8Array.prototype.indexOf?a?Uint8Array.prototype.indexOf.call(e,t,n):Uint8Array.prototype.lastIndexOf.call(e,t,n):y(e,[t],n,r,a);throw new TypeError("val must be string, number or Buffer")}function y(e,t,n,r,a){var s,i=1,o=e.length,u=t.length;if(void 0!==r&&("ucs2"===(r=String(r).toLowerCase())||"ucs-2"===r||"utf16le"===r||"utf-16le"===r)){if(e.length<2||t.length<2)return-1;i=2,o/=2,u/=2,n/=2}function c(e,t){return 1===i?e[t]:e.readUInt16BE(t*i)}if(a){var l=-1;for(s=n;s<o;s++)if(c(e,s)===c(t,-1===l?0:s-l)){if(-1===l&&(l=s),s-l+1===u)return l*i}else-1!==l&&(s-=s-l),l=-1}else for(n+u>o&&(n=o-u),s=n;s>=0;s--){for(var d=!0,h=0;h<u;h++)if(c(e,s+h)!==c(t,h)){d=!1;break}if(d)return s}return-1}function x(e,t,n,r){n=Number(n)||0;var a=e.length-n;r?(r=Number(r))>a&&(r=a):r=a;var s=t.length;if(s%2!=0)throw new TypeError("Invalid hex string");r>s/2&&(r=s/2);for(var i=0;i<r;++i){var o=parseInt(t.substr(2*i,2),16);if(isNaN(o))return i;e[n+i]=o}return i}function O(e,t,n,r){return V(B(t,e.length-n),e,n,r)}function k(e,t,n,r){return V(function(e){for(var t=[],n=0;n<e.length;++n)t.push(255&e.charCodeAt(n));return t}(t),e,n,r)}function v(e,t,n,r){return k(e,t,n,r)}function w(e,t,n,r){return V(W(t),e,n,r)}function I(e,t,n,r){return V(function(e,t){for(var n,r,a,s=[],i=0;i<e.length&&!((t-=2)<0);++i)r=(n=e.charCodeAt(i))>>8,a=n%256,s.push(a),s.push(r);return s}(t,e.length-n),e,n,r)}function j(e,t,n){return 0===t&&n===e.length?r.fromByteArray(e):r.fromByteArray(e.slice(t,n))}function N(e,t,n){n=Math.min(e.length,n);for(var r=[],a=t;a<n;){var s,i,o,u,c=e[a],l=null,d=c>239?4:c>223?3:c>191?2:1;if(a+d<=n)switch(d){case 1:c<128&&(l=c);break;case 2:128==(192&(s=e[a+1]))&&(u=(31&c)<<6|63&s)>127&&(l=u);break;case 3:s=e[a+1],i=e[a+2],128==(192&s)&&128==(192&i)&&(u=(15&c)<<12|(63&s)<<6|63&i)>2047&&(u<55296||u>57343)&&(l=u);break;case 4:s=e[a+1],i=e[a+2],o=e[a+3],128==(192&s)&&128==(192&i)&&128==(192&o)&&(u=(15&c)<<18|(63&s)<<12|(63&i)<<6|63&o)>65535&&u<1114112&&(l=u)}null===l?(l=65533,d=1):l>65535&&(l-=65536,r.push(l>>>10&1023|55296),l=56320|1023&l),r.push(l),a+=d}return function(e){var t=e.length;if(t<=S)return String.fromCharCode.apply(String,e);var n="",r=0;for(;r<t;)n+=String.fromCharCode.apply(String,e.slice(r,r+=S));return n}(r)}t.Buffer=u,t.SlowBuffer=function(e){+e!=e&&(e=0);return u.alloc(+e)},t.INSPECT_MAX_BYTES=50,u.TYPED_ARRAY_SUPPORT=void 0!==e.TYPED_ARRAY_SUPPORT?e.TYPED_ARRAY_SUPPORT:function(){try{var e=new Uint8Array(1);return e.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===e.foo()&&"function"==typeof e.subarray&&0===e.subarray(1,1).byteLength}catch(e){return!1}}(),t.kMaxLength=i(),u.poolSize=8192,u._augment=function(e){return e.__proto__=u.prototype,e},u.from=function(e,t,n){return c(null,e,t,n)},u.TYPED_ARRAY_SUPPORT&&(u.prototype.__proto__=Uint8Array.prototype,u.__proto__=Uint8Array,"undefined"!=typeof Symbol&&Symbol.species&&u[Symbol.species]===u&&Object.defineProperty(u,Symbol.species,{value:null,configurable:!0})),u.alloc=function(e,t,n){return function(e,t,n,r){return l(t),t<=0?o(e,t):void 0!==n?"string"==typeof r?o(e,t).fill(n,r):o(e,t).fill(n):o(e,t)}(null,e,t,n)},u.allocUnsafe=function(e){return d(null,e)},u.allocUnsafeSlow=function(e){return d(null,e)},u.isBuffer=function(e){return!(null==e||!e._isBuffer)},u.compare=function(e,t){if(!u.isBuffer(e)||!u.isBuffer(t))throw new TypeError("Arguments must be Buffers");if(e===t)return 0;for(var n=e.length,r=t.length,a=0,s=Math.min(n,r);a<s;++a)if(e[a]!==t[a]){n=e[a],r=t[a];break}return n<r?-1:r<n?1:0},u.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"latin1":case"binary":case"base64":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},u.concat=function(e,t){if(!s(e))throw new TypeError('"list" argument must be an Array of Buffers');if(0===e.length)return u.alloc(0);var n;if(void 0===t)for(t=0,n=0;n<e.length;++n)t+=e[n].length;var r=u.allocUnsafe(t),a=0;for(n=0;n<e.length;++n){var i=e[n];if(!u.isBuffer(i))throw new TypeError('"list" argument must be an Array of Buffers');i.copy(r,a),a+=i.length}return r},u.byteLength=f,u.prototype._isBuffer=!0,u.prototype.swap16=function(){var e=this.length;if(e%2!=0)throw new RangeError("Buffer size must be a multiple of 16-bits");for(var t=0;t<e;t+=2)b(this,t,t+1);return this},u.prototype.swap32=function(){var e=this.length;if(e%4!=0)throw new RangeError("Buffer size must be a multiple of 32-bits");for(var t=0;t<e;t+=4)b(this,t,t+3),b(this,t+1,t+2);return this},u.prototype.swap64=function(){var e=this.length;if(e%8!=0)throw new RangeError("Buffer size must be a multiple of 64-bits");for(var t=0;t<e;t+=8)b(this,t,t+7),b(this,t+1,t+6),b(this,t+2,t+5),b(this,t+3,t+4);return this},u.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?N(this,0,e):m.apply(this,arguments)},u.prototype.equals=function(e){if(!u.isBuffer(e))throw new TypeError("Argument must be a Buffer");return this===e||0===u.compare(this,e)},u.prototype.inspect=function(){var e="",n=t.INSPECT_MAX_BYTES;return this.length>0&&(e=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(e+=" ... ")),"<Buffer "+e+">"},u.prototype.compare=function(e,t,n,r,a){if(!u.isBuffer(e))throw new TypeError("Argument must be a Buffer");if(void 0===t&&(t=0),void 0===n&&(n=e?e.length:0),void 0===r&&(r=0),void 0===a&&(a=this.length),t<0||n>e.length||r<0||a>this.length)throw new RangeError("out of range index");if(r>=a&&t>=n)return 0;if(r>=a)return-1;if(t>=n)return 1;if(this===e)return 0;for(var s=(a>>>=0)-(r>>>=0),i=(n>>>=0)-(t>>>=0),o=Math.min(s,i),c=this.slice(r,a),l=e.slice(t,n),d=0;d<o;++d)if(c[d]!==l[d]){s=c[d],i=l[d];break}return s<i?-1:i<s?1:0},u.prototype.includes=function(e,t,n){return-1!==this.indexOf(e,t,n)},u.prototype.indexOf=function(e,t,n){return g(this,e,t,n,!0)},u.prototype.lastIndexOf=function(e,t,n){return g(this,e,t,n,!1)},u.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)r=t,n=this.length,t=0;else{if(!isFinite(t))throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");t|=0,isFinite(n)?(n|=0,void 0===r&&(r="utf8")):(r=n,n=void 0)}var a=this.length-t;if((void 0===n||n>a)&&(n=a),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError("Attempt to write outside buffer bounds");r||(r="utf8");for(var s=!1;;)switch(r){case"hex":return x(this,e,t,n);case"utf8":case"utf-8":return O(this,e,t,n);case"ascii":return k(this,e,t,n);case"latin1":case"binary":return v(this,e,t,n);case"base64":return w(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return I(this,e,t,n);default:if(s)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),s=!0}},u.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var S=4096;function T(e,t,n){var r="";n=Math.min(e.length,n);for(var a=t;a<n;++a)r+=String.fromCharCode(127&e[a]);return r}function C(e,t,n){var r="";n=Math.min(e.length,n);for(var a=t;a<n;++a)r+=String.fromCharCode(e[a]);return r}function $(e,t,n){var r=e.length;(!t||t<0)&&(t=0),(!n||n<0||n>r)&&(n=r);for(var a="",s=t;s<n;++s)a+=P(e[s]);return a}function A(e,t,n){for(var r=e.slice(t,n),a="",s=0;s<r.length;s+=2)a+=String.fromCharCode(r[s]+256*r[s+1]);return a}function E(e,t,n){if(e%1!=0||e<0)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function R(e,t,n,r,a,s){if(!u.isBuffer(e))throw new TypeError('"buffer" argument must be a Buffer instance');if(t>a||t<s)throw new RangeError('"value" argument is out of bounds');if(n+r>e.length)throw new RangeError("Index out of range")}function F(e,t,n,r){t<0&&(t=65535+t+1);for(var a=0,s=Math.min(e.length-n,2);a<s;++a)e[n+a]=(t&255<<8*(r?a:1-a))>>>8*(r?a:1-a)}function _(e,t,n,r){t<0&&(t=4294967295+t+1);for(var a=0,s=Math.min(e.length-n,4);a<s;++a)e[n+a]=t>>>8*(r?a:3-a)&255}function D(e,t,n,r,a,s){if(n+r>e.length)throw new RangeError("Index out of range");if(n<0)throw new RangeError("Index out of range")}function M(e,t,n,r,s){return s||D(e,0,n,4),a.write(e,t,n,r,23,4),n+4}function z(e,t,n,r,s){return s||D(e,0,n,8),a.write(e,t,n,r,52,8),n+8}u.prototype.slice=function(e,t){var n,r=this.length;if((e=~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),(t=void 0===t?r:~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),t<e&&(t=e),u.TYPED_ARRAY_SUPPORT)(n=this.subarray(e,t)).__proto__=u.prototype;else{var a=t-e;n=new u(a,void 0);for(var s=0;s<a;++s)n[s]=this[s+e]}return n},u.prototype.readUIntLE=function(e,t,n){e|=0,t|=0,n||E(e,t,this.length);for(var r=this[e],a=1,s=0;++s<t&&(a*=256);)r+=this[e+s]*a;return r},u.prototype.readUIntBE=function(e,t,n){e|=0,t|=0,n||E(e,t,this.length);for(var r=this[e+--t],a=1;t>0&&(a*=256);)r+=this[e+--t]*a;return r},u.prototype.readUInt8=function(e,t){return t||E(e,1,this.length),this[e]},u.prototype.readUInt16LE=function(e,t){return t||E(e,2,this.length),this[e]|this[e+1]<<8},u.prototype.readUInt16BE=function(e,t){return t||E(e,2,this.length),this[e]<<8|this[e+1]},u.prototype.readUInt32LE=function(e,t){return t||E(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},u.prototype.readUInt32BE=function(e,t){return t||E(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},u.prototype.readIntLE=function(e,t,n){e|=0,t|=0,n||E(e,t,this.length);for(var r=this[e],a=1,s=0;++s<t&&(a*=256);)r+=this[e+s]*a;return r>=(a*=128)&&(r-=Math.pow(2,8*t)),r},u.prototype.readIntBE=function(e,t,n){e|=0,t|=0,n||E(e,t,this.length);for(var r=t,a=1,s=this[e+--r];r>0&&(a*=256);)s+=this[e+--r]*a;return s>=(a*=128)&&(s-=Math.pow(2,8*t)),s},u.prototype.readInt8=function(e,t){return t||E(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},u.prototype.readInt16LE=function(e,t){t||E(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt16BE=function(e,t){t||E(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt32LE=function(e,t){return t||E(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},u.prototype.readInt32BE=function(e,t){return t||E(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},u.prototype.readFloatLE=function(e,t){return t||E(e,4,this.length),a.read(this,e,!0,23,4)},u.prototype.readFloatBE=function(e,t){return t||E(e,4,this.length),a.read(this,e,!1,23,4)},u.prototype.readDoubleLE=function(e,t){return t||E(e,8,this.length),a.read(this,e,!0,52,8)},u.prototype.readDoubleBE=function(e,t){return t||E(e,8,this.length),a.read(this,e,!1,52,8)},u.prototype.writeUIntLE=function(e,t,n,r){(e=+e,t|=0,n|=0,r)||R(this,e,t,n,Math.pow(2,8*n)-1,0);var a=1,s=0;for(this[t]=255&e;++s<n&&(a*=256);)this[t+s]=e/a&255;return t+n},u.prototype.writeUIntBE=function(e,t,n,r){(e=+e,t|=0,n|=0,r)||R(this,e,t,n,Math.pow(2,8*n)-1,0);var a=n-1,s=1;for(this[t+a]=255&e;--a>=0&&(s*=256);)this[t+a]=e/s&255;return t+n},u.prototype.writeUInt8=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,1,255,0),u.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),this[t]=255&e,t+1},u.prototype.writeUInt16LE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):F(this,e,t,!0),t+2},u.prototype.writeUInt16BE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):F(this,e,t,!1),t+2},u.prototype.writeUInt32LE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=255&e):_(this,e,t,!0),t+4},u.prototype.writeUInt32BE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):_(this,e,t,!1),t+4},u.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t|=0,!r){var a=Math.pow(2,8*n-1);R(this,e,t,n,a-1,-a)}var s=0,i=1,o=0;for(this[t]=255&e;++s<n&&(i*=256);)e<0&&0===o&&0!==this[t+s-1]&&(o=1),this[t+s]=(e/i>>0)-o&255;return t+n},u.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t|=0,!r){var a=Math.pow(2,8*n-1);R(this,e,t,n,a-1,-a)}var s=n-1,i=1,o=0;for(this[t+s]=255&e;--s>=0&&(i*=256);)e<0&&0===o&&0!==this[t+s+1]&&(o=1),this[t+s]=(e/i>>0)-o&255;return t+n},u.prototype.writeInt8=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,1,127,-128),u.TYPED_ARRAY_SUPPORT||(e=Math.floor(e)),e<0&&(e=255+e+1),this[t]=255&e,t+1},u.prototype.writeInt16LE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8):F(this,e,t,!0),t+2},u.prototype.writeInt16BE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>8,this[t+1]=255&e):F(this,e,t,!1),t+2},u.prototype.writeInt32LE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,4,2147483647,-2147483648),u.TYPED_ARRAY_SUPPORT?(this[t]=255&e,this[t+1]=e>>>8,this[t+2]=e>>>16,this[t+3]=e>>>24):_(this,e,t,!0),t+4},u.prototype.writeInt32BE=function(e,t,n){return e=+e,t|=0,n||R(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+1),u.TYPED_ARRAY_SUPPORT?(this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=255&e):_(this,e,t,!1),t+4},u.prototype.writeFloatLE=function(e,t,n){return M(this,e,t,!0,n)},u.prototype.writeFloatBE=function(e,t,n){return M(this,e,t,!1,n)},u.prototype.writeDoubleLE=function(e,t,n){return z(this,e,t,!0,n)},u.prototype.writeDoubleBE=function(e,t,n){return z(this,e,t,!1,n)},u.prototype.copy=function(e,t,n,r){if(n||(n=0),r||0===r||(r=this.length),t>=e.length&&(t=e.length),t||(t=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===e.length||0===this.length)return 0;if(t<0)throw new RangeError("targetStart out of bounds");if(n<0||n>=this.length)throw new RangeError("sourceStart out of bounds");if(r<0)throw new RangeError("sourceEnd out of bounds");r>this.length&&(r=this.length),e.length-t<r-n&&(r=e.length-t+n);var a,s=r-n;if(this===e&&n<t&&t<r)for(a=s-1;a>=0;--a)e[a+t]=this[a+n];else if(s<1e3||!u.TYPED_ARRAY_SUPPORT)for(a=0;a<s;++a)e[a+t]=this[a+n];else Uint8Array.prototype.set.call(e,this.subarray(n,n+s),t);return s},u.prototype.fill=function(e,t,n,r){if("string"==typeof e){if("string"==typeof t?(r=t,t=0,n=this.length):"string"==typeof n&&(r=n,n=this.length),1===e.length){var a=e.charCodeAt(0);a<256&&(e=a)}if(void 0!==r&&"string"!=typeof r)throw new TypeError("encoding must be a string");if("string"==typeof r&&!u.isEncoding(r))throw new TypeError("Unknown encoding: "+r)}else"number"==typeof e&&(e&=255);if(t<0||this.length<t||this.length<n)throw new RangeError("Out of range index");if(n<=t)return this;var s;if(t>>>=0,n=void 0===n?this.length:n>>>0,e||(e=0),"number"==typeof e)for(s=t;s<n;++s)this[s]=e;else{var i=u.isBuffer(e)?e:B(new u(e,r).toString()),o=i.length;for(s=0;s<n-t;++s)this[s+t]=i[s%o]}return this};var L=/[^+\/0-9A-Za-z-_]/g;function P(e){return e<16?"0"+e.toString(16):e.toString(16)}function B(e,t){var n;t=t||1/0;for(var r=e.length,a=null,s=[],i=0;i<r;++i){if((n=e.charCodeAt(i))>55295&&n<57344){if(!a){if(n>56319){(t-=3)>-1&&s.push(239,191,189);continue}if(i+1===r){(t-=3)>-1&&s.push(239,191,189);continue}a=n;continue}if(n<56320){(t-=3)>-1&&s.push(239,191,189),a=n;continue}n=65536+(a-55296<<10|n-56320)}else a&&(t-=3)>-1&&s.push(239,191,189);if(a=null,n<128){if((t-=1)<0)break;s.push(n)}else if(n<2048){if((t-=2)<0)break;s.push(n>>6|192,63&n|128)}else if(n<65536){if((t-=3)<0)break;s.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error("Invalid code point");if((t-=4)<0)break;s.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return s}function W(e){return r.toByteArray(function(e){if((e=function(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}(e).replace(L,"")).length<2)return"";for(;e.length%4!=0;)e+="=";return e}(e))}function V(e,t,n,r){for(var a=0;a<r&&!(a+n>=t.length||a>=e.length);++a)t[a+n]=e[a];return a}}).call(this,n(128))},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({acos_:function(e){const t={x:Object(s.a)(e,"x","acos")};return r.a.runKernel(a.b,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({acosh_:function(e){const t={x:Object(s.a)(e,"x","acosh")};return r.a.runKernel(a.c,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(2),s=n(3),i=n(8),o=n(4);const u=Object(o.b)({addN_:function(e){i.b(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),i.b(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>Object(s.a)(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!i.a(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const o=t;return r.a.runKernel(a.e,o)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({asin_:function(e){const t={x:Object(s.a)(e,"x","asin")};return r.a.runKernel(a.j,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({asinh_:function(e){const t={x:Object(s.a)(e,"x","asinh")};return r.a.runKernel(a.k,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({atan_:function(e){const t={x:Object(s.a)(e,"x","atan")};return r.a.runKernel(a.l,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({atanh_:function(e){const t={x:Object(s.a)(e,"x","atanh")};return r.a.runKernel(a.n,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(5),a=n(2),s=n(3),i=n(8),o=n(11),u=n(4),c=n(7);const l=Object(u.b)({avgPool3d_:function(e,t,n,u,l,d="NDHWC"){const h=Object(s.a)(e,"x","avgPool3d","float32");let p=h,f=!1;4===h.rank&&(f=!0,p=Object(c.a)(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),i.b(5===p.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${p.rank}.`)),i.b("NDHWC"===d,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${d}`)),null!=l&&i.b(i.v(u),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${l} but got pad ${u}.`));const m={x:p},b={filterSize:t,strides:n,pad:u,dimRoundingMode:l,dataFormat:d};let g=r.a.runKernel(a.p,m,b);return g=Object(o.a)(g,p.dtype),f?Object(c.a)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(2),s=n(3),i=n(8),o=n(4);const u=Object(o.b)({bincount_:function(e,t,n){const o=Object(s.a)(e,"x","bincount"),u=Object(s.a)(t,"weights","bincount");i.b("int32"===o.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${o.dtype}`)),i.b(n>=0,(()=>`size must be non-negative, but got ${n}.`)),i.b(u.size===o.size||0===u.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${o.shape}, weights shape: ${u.shape}.`));const c={x:o,weights:u},l={size:n};return r.a.runKernel(a.u,c,l)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({ceil_:function(e){const t={x:Object(s.a)(e,"x","ceil")};return r.a.runKernel(a.x,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(2),s=n(3),i=n(8),o=n(4);const u=Object(o.b)({clipByValue_:function(e,t,n){const o=Object(s.a)(e,"x","clipByValue");i.b(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const u={x:o},c={clipValueMin:t,clipValueMax:n};return r.a.runKernel(a.y,u,c)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(5),a=n(2),s=n(3),i=n(8),o=n(28),u=n(4),c=n(7);const l=Object(u.b)({conv3d_:function(e,t,n,u,l="NDHWC",d=[1,1,1]){const h=Object(s.a)(e,"x","conv3d"),p=Object(s.a)(t,"filter","conv3d");let f=h,m=!1;4===h.rank&&(m=!0,f=Object(c.a)(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),i.b(5===f.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${f.rank}.`)),i.b(5===p.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${p.rank}.`)),i.b(f.shape[4]===p.shape[3],(()=>`Error in conv3d: depth of input (${f.shape[4]}) must match input depth for filter ${p.shape[3]}.`)),i.b(Object(o.h)(n,d),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${d}'`)),i.b("NDHWC"===l,(()=>`Error in conv3d: got dataFormat of ${l} but only NDHWC is currently supported.`));const b={x:f,filter:p},g={strides:n,pad:u,dataFormat:l,dilations:d},y=r.a.runKernel(a.F,b,g);return m?Object(c.a)(y,[y.shape[1],y.shape[2],y.shape[3],y.shape[4]]):y}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(2),s=n(3),i=n(8),o=n(4);const u=Object(o.b)({denseBincount_:function(e,t,n,o=!1){const u=Object(s.a)(e,"x","denseBincount"),c=Object(s.a)(t,"weights","denseBincount");i.b("int32"===u.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${u.dtype}`)),i.b(u.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${u.rank}.`)),i.b(n>=0,(()=>`size must be non-negative, but got ${n}.`)),i.b(c.size===u.size||0===c.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${u.shape}, weights shape: ${c.shape}.`));const l={x:u,weights:c},d={size:n,binaryOutput:o};return r.a.runKernel(a.M,l,d)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(2),s=n(3),i=n(8),o=n(11),u=n(4);const c=Object(u.b)({erf_:function(e){let t=Object(s.a)(e,"x","erf");i.b("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Object(o.a)(t,"float32"));const n={x:t};return r.a.runKernel(a.Y,n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({expm1_:function(e){const t={x:Object(s.a)(e,"x","expm1")};return r.a.runKernel(a.bb,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({isFinite_:function(e){const t={x:Object(s.a)(e,"x","isFinite")};return r.a.runKernel(a.sb,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({isInf_:function(e){const t={x:Object(s.a)(e,"x","isInf")};return r.a.runKernel(a.tb,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({isNaN_:function(e){const t={x:Object(s.a)(e,"x","isNaN")};return r.a.runKernel(a.ub,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n(5),a=n(2);function s(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const s={start:e,stop:t,num:n};return r.a.runKernel(a.Ab,{},s)}},function(e,t,n){"use strict";n.d(t,"a",(function(){return l}));var r=n(29),a=n(3),s=n(9),i=n(26),o=n(4),u=n(70),c=n(146);const l=Object(o.b)({logSigmoid_:function(e){const t=Object(a.a)(e,"x","logSigmoid");return Object(r.a)((e=>({value:Object(i.a)(Object(c.a)(Object(i.a)(e))),gradFunc:t=>Object(s.a)(t,Object(u.a)(Object(i.a)(e)))})))(t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return p}));var r=n(29),a=n(3),s=n(11),i=n(35),o=n(60),u=n(58),c=n(9),l=n(4),d=n(13),h=n(17);const p=Object(l.b)({logSoftmax_:function(e,t=-1){const n=Object(a.a)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return Object(r.a)(((e,n)=>{const r=Object(u.a)(e,t,!0),a=Object(d.a)(e,r),l=Object(d.a)(Object(s.a)(a,"float32"),Object(o.a)(Object(h.a)(Object(i.a)(a),t,!0)));n([l]);return{value:l,gradFunc:(e,n)=>{const[r]=n,a=Object(i.a)(r);return Object(d.a)(e,Object(c.a)(Object(h.a)(e,t,!0),a))}}}))(n)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return c}));var r=n(5),a=n(2),s=n(3),i=n(8),o=n(4),u=n(7);const c=Object(o.b)({maxPool3d_:function(e,t=[1,1,1],n,o,c,l="NDHWC"){const d=Object(s.a)(e,"x","maxPool3d");let h=d,p=!1;4===d.rank&&(p=!0,h=Object(u.a)(d,[1,d.shape[0],d.shape[1],d.shape[2],d.shape[3]])),i.b(5===h.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${h.rank}.`)),i.b("NDHWC"===l,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${l}`)),null!=c&&i.b(i.v(o),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${c} but got pad ${o}.`));const f={x:h},m={filterSize:t,strides:n,pad:o,dimRoundingMode:c,dataFormat:l},b=r.a.runKernel(a.Jb,f,m);return p?Object(u.a)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({maxPoolWithArgmax_:function(e,t,n,i,o=!1){const u={x:Object(s.a)(e,"x","maxPoolWithArgmax")},c={filterSize:t,strides:n,pad:i,includeBatchInIndex:o},l=r.a.runKernel(a.Mb,u,c);return{result:l[0],indexes:l[1]}}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(2),s=n(3),i=n(4),o=n(7);const u=Object(i.b)({multinomial_:function(e,t,n,i=!1){const u=Object(s.a)(e,"logits","multinomial"),c=u.size,l=u.rank;if(c<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${c}.`);if(l>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${l}`);n=n||Math.random();const d={logits:1===l?Object(o.a)(u,[1,-1]):u},h={numSamples:t,seed:n,normalized:i},p=r.a.runKernel(a.Tb,d,h);return 1===l?Object(o.a)(p,[p.size]):p}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({onesLike_:function(e){const t={x:Object(s.a)(e,"x","onesLike")};return r.a.runKernel(a.bc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({reciprocal_:function(e){const t={x:Object(s.a)(e,"x","reciprocal")};return r.a.runKernel(a.lc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({round_:function(e){const t={x:Object(s.a)(e,"x","round")};return r.a.runKernel(a.vc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(6),a=n(3),s=n(8);const i=async function(e,t){const n=Object(a.a)(e,"x","setdiff1d"),i=Object(a.a)(t,"y","setdiff1d");s.b(n.dtype===i.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${i.dtype}).`)),s.b(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),s.b(1===i.rank,(()=>`y should be 1D tensor, but got y (${i.shape}).`));const o=await n.data(),u=await i.data(),c=new Set(u);let l=0;for(let e=0;e<o.length;e++)c.has(o[e])||l++;const d=new r.b([l],n.dtype),h=new r.b([l],"int32");for(let e=0,t=0;e<o.length;e++)c.has(o[e])||(d.values[t]=o[e],h.values[t]=e,t++);return[d.toTensor(),h.toTensor()]}},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({sign_:function(e){const t={x:Object(s.a)(e,"x","sign")};return r.a.runKernel(a.Bc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({softmax_:function(e,t=-1){const n=Object(s.a)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const i={logits:n},o={dim:t};return r.a.runKernel(a.Fc,i,o)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({stridedSlice_:function(e,t,n,i,o=0,u=0,c=0,l=0,d=0){const h={x:Object(s.a)(e,"x","stridedSlice")},p={begin:t,end:n,strides:i,beginMask:o,endMask:u,ellipsisMask:c,newAxisMask:l,shrinkAxisMask:d};return r.a.runKernel(a.Oc,h,p)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({tan_:function(e){const t={x:Object(s.a)(e,"x","tan")};return r.a.runKernel(a.Rc,t)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return i}));var r=n(39),a=n(4),s=n(85);const i=Object(a.b)({truncatedNormal_:function(e,t=0,n=1,a,i){if(null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");const o=new s.a(t,n,a,!0,i),u=Object(r.a)(e,a);for(let e=0;e<u.values.length;e++)u.values[e]=o.nextValue();return u.toTensor()}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var r=n(5),a=n(2),s=n(3),i=n(4),o=n(95);const u=Object(i.b)({scatterND_:function(e,t,n){const i=Object(s.a)(e,"indices","scatterND","int32"),u=Object(s.a)(t,"updates","scatterND");o.validateInput(u,i,n);const c={indices:i,updates:u},l={shape:n};return r.a.runKernel(a.xc,c,l)}})},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2),s=n(3),i=n(4);const o=Object(i.b)({gatherND_:function(e,t){const n=Object(s.a)(t,"indices","gatherND","int32"),i={params:Object(s.a)(e,"x","gatherND"),indices:n};return r.a.runKernel(a.lb,i)}})},function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return a}));const r="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:void 0!==e?e:e=>e();function a(){return new Promise((e=>r((()=>e()))))}}).call(this,n(240).setImmediate)},function(e,t,n){"use strict";n.d(t,"a",(function(){return o}));var r=n(5),a=n(2);var s=n(3),i=n(4);const o=Object(i.b)({sparseToDense_:function(e,t,n,i=0){const o=Object(s.a)(e,"sparseIndices","sparseToDense","int32"),u=Object(s.a)(t,"sparseValues","sparseToDense"),c=Object(s.a)(i,"defaultValue","sparseToDense",u.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(o,u,n,c);const l={sparseIndices:o,sparseValues:u,defaultValue:c},d={outputShape:n};return r.a.runKernel(a.Ic,l,d)}})},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}]},function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return r}));const r=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}]},function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return i}));var r=n(0),a=n(38),s=n(225);class i extends a.a{decodeUTF8(){return new o(this)}}class o extends s.a{constructor(e){super(),this.upstream=e,this.impl=new u(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class u extends a.b{constructor(e){if(super(),this.upstream=e,Object(r.env)().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=n(242);this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const t=await this.upstream.next();let n,a;return!t.done&&(n=t.value,a=Object(r.env)().get("IS_BROWSER")?this.decoder.decode(n,{stream:!0}):this.decoder.write(e.from(n.buffer)),this.outputQueue.push(a),!0)}}}).call(this,n(169).Buffer)},function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var r=n(38);class a extends r.a{split(e){return new s(this,e)}}class s extends a{constructor(e,t){super(),this.upstream=e,this.impl=new i(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class i extends r.b{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}}},function(e,t,n){"use strict";t.byteLength=function(e){var t=c(e),n=t[0],r=t[1];return 3*(n+r)/4-r},t.toByteArray=function(e){var t,n,r=c(e),i=r[0],o=r[1],u=new s(function(e,t,n){return 3*(t+n)/4-n}(0,i,o)),l=0,d=o>0?i-4:i;for(n=0;n<d;n+=4)t=a[e.charCodeAt(n)]<<18|a[e.charCodeAt(n+1)]<<12|a[e.charCodeAt(n+2)]<<6|a[e.charCodeAt(n+3)],u[l++]=t>>16&255,u[l++]=t>>8&255,u[l++]=255&t;2===o&&(t=a[e.charCodeAt(n)]<<2|a[e.charCodeAt(n+1)]>>4,u[l++]=255&t);1===o&&(t=a[e.charCodeAt(n)]<<10|a[e.charCodeAt(n+1)]<<4|a[e.charCodeAt(n+2)]>>2,u[l++]=t>>8&255,u[l++]=255&t);return u},t.fromByteArray=function(e){for(var t,n=e.length,a=n%3,s=[],i=16383,o=0,u=n-a;o<u;o+=i)s.push(l(e,o,o+i>u?u:o+i));1===a?(t=e[n-1],s.push(r[t>>2]+r[t<<4&63]+"==")):2===a&&(t=(e[n-2]<<8)+e[n-1],s.push(r[t>>10]+r[t>>4&63]+r[t<<2&63]+"="));return s.join("")};for(var r=[],a=[],s="undefined"!=typeof Uint8Array?Uint8Array:Array,i="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",o=0,u=i.length;o<u;++o)r[o]=i[o],a[i.charCodeAt(o)]=o;function c(e){var t=e.length;if(t%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var n=e.indexOf("=");return-1===n&&(n=t),[n,n===t?0:4-n%4]}function l(e,t,n){for(var a,s,i=[],o=t;o<n;o+=3)a=(e[o]<<16&16711680)+(e[o+1]<<8&65280)+(255&e[o+2]),i.push(r[(s=a)>>18&63]+r[s>>12&63]+r[s>>6&63]+r[63&s]);return i.join("")}a["-".charCodeAt(0)]=62,a["_".charCodeAt(0)]=63},function(e,t){t.read=function(e,t,n,r,a){var s,i,o=8*a-r-1,u=(1<<o)-1,c=u>>1,l=-7,d=n?a-1:0,h=n?-1:1,p=e[t+d];for(d+=h,s=p&(1<<-l)-1,p>>=-l,l+=o;l>0;s=256*s+e[t+d],d+=h,l-=8);for(i=s&(1<<-l)-1,s>>=-l,l+=r;l>0;i=256*i+e[t+d],d+=h,l-=8);if(0===s)s=1-c;else{if(s===u)return i?NaN:1/0*(p?-1:1);i+=Math.pow(2,r),s-=c}return(p?-1:1)*i*Math.pow(2,s-r)},t.write=function(e,t,n,r,a,s){var i,o,u,c=8*s-a-1,l=(1<<c)-1,d=l>>1,h=23===a?Math.pow(2,-24)-Math.pow(2,-77):0,p=r?0:s-1,f=r?1:-1,m=t<0||0===t&&1/t<0?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(o=isNaN(t)?1:0,i=l):(i=Math.floor(Math.log(t)/Math.LN2),t*(u=Math.pow(2,-i))<1&&(i--,u*=2),(t+=i+d>=1?h/u:h*Math.pow(2,1-d))*u>=2&&(i++,u/=2),i+d>=l?(o=0,i=l):i+d>=1?(o=(t*u-1)*Math.pow(2,a),i+=d):(o=t*Math.pow(2,d-1)*Math.pow(2,a),i=0));a>=8;e[n+p]=255&o,p+=f,o/=256,a-=8);for(i=i<<a|o,c+=a;c>0;e[n+p]=255&i,p+=f,i/=256,c-=8);e[n+p-f]|=128*m}},function(e,t){var n={}.toString;e.exports=Array.isArray||function(e){return"[object Array]"==n.call(e)}},function(e,t,n){"use strict";(function(e){var t=n(20);const r=()=>n(230);let a;class s{constructor(){this.util=n(231),this.textEncoder=new this.util.TextEncoder}fetch(e,n){return null!=Object(t.c)().global.fetch?Object(t.c)().global.fetch(e,n):(null==a&&(a=r()),a(e,n))}now(){const t=e.hrtime();return 1e3*t[0]+t[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}}Object(t.c)().get("IS_NODE")&&Object(t.c)().setPlatform("node",new s)}).call(this,n(129))},function(e,t){},function(e,t){},function(e,t,n){(function(e){var r;!function(e,a,s){function i(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new i(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n(53)&&n(94)?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.alea=u}(0,e,n(53))}).call(this,n(93)(e))},function(e,t,n){(function(e){var r;!function(e,a,s){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n(53)&&n(94)?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor128=u}(0,e,n(53))}).call(this,n(93)(e))},function(e,t,n){(function(e){var r;!function(e,a,s){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n(53)&&n(94)?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorwow=u}(0,e,n(53))}).call(this,n(93)(e))},function(e,t,n){(function(e){var r;!function(e,a,s){function i(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n(53)&&n(94)?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xorshift7=u}(0,e,n(53))}).call(this,n(93)(e))},function(e,t,n){(function(e){var r;!function(e,a,s){function i(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n(53)&&n(94)?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.xor4096=u}(0,e,n(53))}).call(this,n(93)(e))},function(e,t,n){(function(e){var r;!function(e,a,s){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&o(r,n),a.state=function(){return o(n,{})}),a}a&&a.exports?a.exports=u:n(53)&&n(94)?void 0===(r=function(){return u}.call(t,n,t,a))||(a.exports=r):this.tychei=u}(0,e,n(53))}).call(this,n(93)(e))},function(e,t,n){var r;!function(a,s){var i,o=this,u=256,c=s.pow(u,6),l=s.pow(2,52),d=2*l,h=255;function p(e,t,n){var r=[],h=g(b((t=1==t?{entropy:!0}:t||{}).entropy?[e,y(a)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(e)),y(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,y(a)]}}():e,3),r),p=new f(r),x=function(){for(var e=p.g(6),t=c,n=0;e<l;)e=(e+n)*u,t*=u,n=p.g(1);for(;e>=d;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|p.g(4)},x.quick=function(){return p.g(4)/4294967296},x.double=x,g(y(p.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,p),e.state=function(){return m(p,{})}),n?(s.random=e,t):e})(x,h,"global"in t?t.global:this==s,t.state)}function f(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);a<u;)i[a]=a++;for(a=0;a<u;a++)i[a]=i[s=h&s+e[a%n]+(t=i[a])],i[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,i=r.S;e--;)t=i[a=h&a+1],n=n*u+i[h&(i[a]=i[s=h&s+t])+(i[s]=t)];return r.i=a,r.j=s,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function b(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(b(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function g(e,t){for(var n,r=e+"",a=0;a<r.length;)t[h&a]=h&(n^=19*t[h&a])+r.charCodeAt(a++);return y(t)}function y(e){return String.fromCharCode.apply(0,e)}if(s.seedrandom=p,g(s.random(),a),e.exports){e.exports=p;try{i=n(239)}catch(e){}}else void 0===(r=function(){return p}.call(t,n,t,e))||(e.exports=r)}([],Math)},function(e,t){},function(e,t,n){(function(e){var r=void 0!==e&&e||"undefined"!=typeof self&&self||window,a=Function.prototype.apply;function s(e,t){this._id=e,this._clearFn=t}t.setTimeout=function(){return new s(a.call(setTimeout,r,arguments),clearTimeout)},t.setInterval=function(){return new s(a.call(setInterval,r,arguments),clearInterval)},t.clearTimeout=t.clearInterval=function(e){e&&e.close()},s.prototype.unref=s.prototype.ref=function(){},s.prototype.close=function(){this._clearFn.call(r,this._id)},t.enroll=function(e,t){clearTimeout(e._idleTimeoutId),e._idleTimeout=t},t.unenroll=function(e){clearTimeout(e._idleTimeoutId),e._idleTimeout=-1},t._unrefActive=t.active=function(e){clearTimeout(e._idleTimeoutId);var t=e._idleTimeout;t>=0&&(e._idleTimeoutId=setTimeout((function(){e._onTimeout&&e._onTimeout()}),t))},n(241),t.setImmediate="undefined"!=typeof self&&self.setImmediate||void 0!==e&&e.setImmediate||this&&this.setImmediate,t.clearImmediate="undefined"!=typeof self&&self.clearImmediate||void 0!==e&&e.clearImmediate||this&&this.clearImmediate}).call(this,n(128))},function(e,t,n){(function(e,t){!function(e,n){"use strict";if(!e.setImmediate){var r,a,s,i,o,u=1,c={},l=!1,d=e.document,h=Object.getPrototypeOf&&Object.getPrototypeOf(e);h=h&&h.setTimeout?h:e,"[object process]"==={}.toString.call(e.process)?r=function(e){t.nextTick((function(){f(e)}))}:!function(){if(e.postMessage&&!e.importScripts){var t=!0,n=e.onmessage;return e.onmessage=function(){t=!1},e.postMessage("","*"),e.onmessage=n,t}}()?e.MessageChannel?((s=new MessageChannel).port1.onmessage=function(e){f(e.data)},r=function(e){s.port2.postMessage(e)}):d&&"onreadystatechange"in d.createElement("script")?(a=d.documentElement,r=function(e){var t=d.createElement("script");t.onreadystatechange=function(){f(e),t.onreadystatechange=null,a.removeChild(t),t=null},a.appendChild(t)}):r=function(e){setTimeout(f,0,e)}:(i="setImmediate$"+Math.random()+"$",o=function(t){t.source===e&&"string"==typeof t.data&&0===t.data.indexOf(i)&&f(+t.data.slice(i.length))},e.addEventListener?e.addEventListener("message",o,!1):e.attachEvent("onmessage",o),r=function(t){e.postMessage(i+t,"*")}),h.setImmediate=function(e){"function"!=typeof e&&(e=new Function(""+e));for(var t=new Array(arguments.length-1),n=0;n<t.length;n++)t[n]=arguments[n+1];var a={callback:e,args:t};return c[u]=a,r(u),u++},h.clearImmediate=p}function p(e){delete c[e]}function f(e){if(l)setTimeout(f,0,e);else{var t=c[e];if(t){l=!0;try{!function(e){var t=e.callback,n=e.args;switch(n.length){case 0:t();break;case 1:t(n[0]);break;case 2:t(n[0],n[1]);break;case 3:t(n[0],n[1],n[2]);break;default:t.apply(void 0,n)}}(t)}finally{p(e),l=!1}}}}}("undefined"==typeof self?void 0===e?this:e:self)}).call(this,n(128),n(129))},function(e,t){},function(e,t){},function(e,t,n){"use strict";n.r(t),n.d(t,"preloadModel",(function(){return aj})),n.d(t,"getOffscreenCanvasFromImageUrl",(function(){return sj})),n.d(t,"getDogBreed",(function(){return ij}));var r={};n.r(r),n.d(r,"simpleAbsImpl",(function(){return jd})),n.d(r,"addImpl",(function(){return bd})),n.d(r,"bincountImpl",(function(){return uh})),n.d(r,"bincountReduceImpl",(function(){return ch})),n.d(r,"ceilImpl",(function(){return hh})),n.d(r,"concatImpl",(function(){return yh})),n.d(r,"expImpl",(function(){return ap})),n.d(r,"expm1Impl",(function(){return cp})),n.d(r,"floorImpl",(function(){return $p})),n.d(r,"gatherV2Impl",(function(){return Lp})),n.d(r,"greaterImpl",(function(){return Bp})),n.d(r,"lessImpl",(function(){return ef})),n.d(r,"linSpaceImpl",(function(){return of})),n.d(r,"logImpl",(function(){return cf})),n.d(r,"maxImpl",(function(){return If})),n.d(r,"maximumImpl",(function(){return Sf})),n.d(r,"minimumImpl",(function(){return Lf})),n.d(r,"multiplyImpl",(function(){return hp})),n.d(r,"negImpl",(function(){return Xf})),n.d(r,"notEqualImpl",(function(){return rm})),n.d(r,"prodImpl",(function(){return bm})),n.d(r,"rangeImpl",(function(){return ym})),n.d(r,"rsqrtImpl",(function(){return $m})),n.d(r,"sliceImpl",(function(){return ah})),n.d(r,"squaredDifferenceImpl",(function(){return rb})),n.d(r,"stridedSliceImpl",(function(){return ub})),n.d(r,"subImpl",(function(){return xp})),n.d(r,"tileImpl",(function(){return fb})),n.d(r,"topKImpl",(function(){return bb})),n.d(r,"transposeImpl",(function(){return Ed})),n.d(r,"uniqueImpl",(function(){return wb}));const a=Symbol("Comlink.proxy"),s=Symbol("Comlink.endpoint"),i=Symbol("Comlink.releaseProxy"),o=Symbol("Comlink.thrown"),u=e=>"object"==typeof e&&null!==e||"function"==typeof e,c=new Map([["proxy",{canHandle:e=>u(e)&&e[a],serialize(e){const{port1:t,port2:n}=new MessageChannel;return l(e,t),[n,[n]]},deserialize(e){return e.start(),p(e,[],t);var t}}],["throw",{canHandle:e=>u(e)&&o in e,serialize({value:e}){let t;return t=e instanceof Error?{isError:!0,value:{message:e.message,name:e.name,stack:e.stack}}:{isError:!1,value:e},[t,[]]},deserialize(e){if(e.isError)throw Object.assign(new Error(e.value.message),e.value);throw e.value}}]]);function l(e,t=self){t.addEventListener("message",(function n(r){if(!r||!r.data)return;const{id:s,type:i,path:u}=Object.assign({path:[]},r.data),c=(r.data.argumentList||[]).map(g);let h;try{const t=u.slice(0,-1).reduce(((e,t)=>e[t]),e),n=u.reduce(((e,t)=>e[t]),e);switch(i){case 0:h=n;break;case 1:t[u.slice(-1)[0]]=g(r.data.value),h=!0;break;case 2:h=n.apply(t,c);break;case 3:h=function(e){return Object.assign(e,{[a]:!0})}(new n(...c));break;case 4:{const{port1:t,port2:n}=new MessageChannel;l(e,n),h=function(e,t){return m.set(e,t),e}(t,[t])}break;case 5:h=void 0}}catch(e){h={value:e,[o]:0}}Promise.resolve(h).catch((e=>({value:e,[o]:0}))).then((e=>{const[r,a]=b(e);t.postMessage(Object.assign(Object.assign({},r),{id:s}),a),5===i&&(t.removeEventListener("message",n),d(t))}))})),t.start&&t.start()}function d(e){(function(e){return"MessagePort"===e.constructor.name})(e)&&e.close()}function h(e){if(e)throw new Error("Proxy has been released and is not useable")}function p(e,t=[],n=function(){}){let r=!1;const a=new Proxy(n,{get(n,s){if(h(r),s===i)return()=>y(e,{type:5,path:t.map((e=>e.toString()))}).then((()=>{d(e),r=!0}));if("then"===s){if(0===t.length)return{then:()=>a};const n=y(e,{type:0,path:t.map((e=>e.toString()))}).then(g);return n.then.bind(n)}return p(e,[...t,s])},set(n,a,s){h(r);const[i,o]=b(s);return y(e,{type:1,path:[...t,a].map((e=>e.toString())),value:i},o).then(g)},apply(n,a,i){h(r);const o=t[t.length-1];if(o===s)return y(e,{type:4}).then(g);if("bind"===o)return p(e,t.slice(0,-1));const[u,c]=f(i);return y(e,{type:2,path:t.map((e=>e.toString())),argumentList:u},c).then(g)},construct(n,a){h(r);const[s,i]=f(a);return y(e,{type:3,path:t.map((e=>e.toString())),argumentList:s},i).then(g)}});return a}function f(e){const t=e.map(b);return[t.map((e=>e[0])),(n=t.map((e=>e[1])),Array.prototype.concat.apply([],n))];var n}const m=new WeakMap;function b(e){for(const[t,n]of c)if(n.canHandle(e)){const[r,a]=n.serialize(e);return[{type:3,name:t,value:r},a]}return[{type:0,value:e},m.get(e)||[]]}function g(e){switch(e.type){case 3:return c.get(e.name).deserialize(e.value);case 0:return e.value}}function y(e,t,n){return new Promise((r=>{const a=new Array(4).fill(0).map((()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER).toString(16))).join("-");e.addEventListener("message",(function t(n){n.data&&n.data.id&&n.data.id===a&&(e.removeEventListener("message",t),r(n.data))})),e.start&&e.start(),e.postMessage(Object.assign({id:a},t),n)}))}var x=n(0),O=n(2),k=n(11),v=n(9),w=n(67);const I={kernelName:O.a,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(v.a)(e,Object(w.a)(Object(k.a)(n,"float32"),-1))}}};var j=n(14),N=n(26),S=n(15),T=n(32),C=n(22),$=n(13);const A={kernelName:O.b,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Object(C.a)(Object(k.a)(n,"float32")),r=Object(T.a)(Object($.a)(Object(S.a)(1),t));return Object(N.a)(Object(j.a)(e,r))}}}},E={kernelName:O.c,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Object(T.a)(Object($.a)(Object(C.a)(Object(k.a)(n,"float32")),1));return Object(j.a)(e,t)}}}};var R=n(16),F=n(7),_=n(17);const D={kernelName:O.d,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=R.a(n.shape,r.shape);return{a:()=>{let t=e;const r=R.c(n.shape,a);return r.length>0&&(t=Object(_.a)(t,r)),Object(F.a)(t,n.shape)},b:()=>{let t=e;const n=R.c(r.shape,a);return n.length>0&&(t=Object(_.a)(t,n)),Object(F.a)(t,r.shape)}}}},M={kernelName:O.e,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}};var z=n(18);const L={kernelName:O.h,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(z.a)(n)}}},P={kernelName:O.i,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(z.a)(n)}}},B={kernelName:O.j,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(j.a)(e,Object(T.a)(Object($.a)(Object(S.a)(1),Object(C.a)(Object(k.a)(n,"float32")))))}}};var W=n(12);const V={kernelName:O.k,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Object(T.a)(Object(W.a)(Object(S.a)(1),Object(C.a)(Object(k.a)(n,"float32"))));return Object(j.a)(e,t)}}}},U={kernelName:O.m,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(R.a)(n.shape,r.shape);return{a:()=>{const t=Object(W.a)(Object(C.a)(n),Object(C.a)(r));let s=Object(v.a)(e,Object(j.a)(r,t));const i=Object(R.c)(n.shape,a);return i.length>0&&(s=Object(_.a)(s,i)),Object(F.a)(s,n.shape)},b:()=>{const t=Object(W.a)(Object(C.a)(n),Object(C.a)(r));let s=Object(N.a)(Object(v.a)(e,Object(j.a)(n,t)));const i=Object(R.c)(r.shape,a);return i.length>0&&(s=Object(_.a)(s,i)),Object(F.a)(s,r.shape)}}}},G={kernelName:O.l,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(j.a)(e,Object(W.a)(Object(C.a)(Object(k.a)(n,"float32")),1))}}},H={kernelName:O.n,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(j.a)(e,Object($.a)(Object(S.a)(1),Object(C.a)(Object(k.a)(n,"float32"))))}}};var q=n(5),K=n(3),X=n(8),Y=n(4);const Z=Object(Y.b)({avgPool3dGrad_:function(e,t,n,r,a,s){const i=Object(K.a)(e,"dy","avgPool3dGrad"),o=Object(K.a)(t,"input","avgPool3dGrad");let u=i,c=o,l=!1;4===o.rank&&(l=!0,u=Object(F.a)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),c=Object(F.a)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),X.b(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),X.b(5===c.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${c.rank}.`)),null!=s&&X.b(X.v(a),(()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${s} but got pad ${a}.`));const d={dy:u,input:c},h={filterSize:n,strides:r,pad:a,dimRoundingMode:s},p=q.a.runKernel(O.q,d,h);return l?Object(F.a)(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),J={kernelName:O.p,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>Z(e,r,a,s,i,o)}}};const Q=Object(Y.b)({avgPoolGrad_:function(e,t,n,r,a){const s=Object(K.a)(e,"dy","avgPoolGrad"),i=Object(K.a)(t,"input","avgPoolGrad");X.b(i.rank===s.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`));let o=i,u=s,c=!1;3===i.rank&&(c=!0,o=Object(F.a)(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=Object(F.a)(s,[1,s.shape[0],s.shape[1],s.shape[2]])),X.b(4===u.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),X.b(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const l={dy:u,input:o},d={filterSize:n,strides:r,pad:a},h=q.a.runKernel(O.r,l,d);return c?Object(F.a)(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),ee={kernelName:O.o,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>Q(e,r,a,s,i)}}};var te=n(25);const ne={kernelName:O.s,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>Object(te.a)(e,a,!1,!1),b:()=>Object(te.a)(e,r,!0,!1)}:s&&!i?{a:()=>Object(te.a)(a,e,!1,!0),b:()=>Object(te.a)(r,e,!1,!1)}:{a:()=>Object(te.a)(a,e,!0,!0),b:()=>Object(te.a)(e,r,!0,!0)}:{a:()=>Object(te.a)(e,a,!1,!0),b:()=>Object(te.a)(r,e,!0,!1)}}};var re=n(82);const ae={kernelName:O.t,gradFunc:(e,t,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>Object(re.a)(e,r,a)}}},se={kernelName:O.v,gradFunc:(e,t,n)=>{const r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let e=a.length-1;e>=0;e--)if(a[e]===s[e])i[e]=1;else if(1!==a[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>Object(_.a)(e,o,!0)}}},ie={kernelName:O.w,gradFunc:e=>({x:()=>e.clone()})},oe={kernelName:O.x,gradFunc:e=>({x:()=>Object(z.a)(e)})};var ue=n(55),ce=n(56),le=n(49),de=n(31);const he={kernelName:O.y,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>Object(de.a)(Object(le.a)(Object(ue.a)(r,a),Object(ce.a)(r,s)),e,Object(z.a)(e))}}},pe={kernelName:O.A,inputsToSave:["x"],gradFunc:I.gradFunc};var fe=n(61);const me={kernelName:O.B,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:a}=n,s=Object(X.I)(a,t[0].shape)[0],i=r.map((e=>e[s]));return Object(fe.a)(e,i,s).map((e=>()=>e))}};var be=n(121),ge=n(119),ye=n(28);const xe={kernelName:O.C,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:u}=n;return X.b(ye.i(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>Object(ge.a)(r.shape,e,a,i,o,u),filter:()=>Object(be.a)(r,e,a.shape,i,o,u)}}};var Oe=n(54);const ke={kernelName:O.E,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>Object(Oe.a)(e,a,s,i,o,1,u),filter:()=>Object(be.a)(e,r,a.shape,s,i,o,u)}}};const ve=Object(Y.b)({conv3DBackpropFilter_:function(e,t,n,r,a){let s=e;4===e.rank&&(s=Object(F.a)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=Object(F.a)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),X.b(5===s.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`)),X.b(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),X.b(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),X.b(s.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`)),X.b(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:s,dy:i},u={strides:r,pad:a,filterShape:n};return q.a.runKernel(O.G,o,u)}});var we=n(164);const Ie={kernelName:O.F,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s}=n;X.b(Object(ye.i)(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>Object(we.a)(i.shape,e,o,a,s),filter:()=>ve(i,e,o.shape,a,s)}}};var je=n(156);const Ne={kernelName:O.I,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(v.a)(Object(N.a)(Object(je.a)(Object(k.a)(n,"float32"))),e)}}};var Se=n(157);const Te={kernelName:O.J,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(v.a)(Object(Se.a)(Object(k.a)(n,"float32")),e)}}};var Ce=n(33),$e=n(101),Ae=n(43);const Ee={kernelName:O.L,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{const t=Object(Ce.f)([a],r.rank);let n=Object($e.a)(e,a,s,!i);return null!=t&&(n=Object(Ae.a)(n,t)),n}}}};var Re=n(168),Fe=n(167);const _e={kernelName:O.O,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;X.b(ye.i(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[u,c]=t;return X.b(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),X.b(4===c.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`)),X.b(u.shape[3]===c.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`)),X.b(ye.h(a,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`)),null!=i&&X.b(X.v(s),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`)),{x:()=>Object(Fe.a)(u.shape,e,c,a,s,r,i),filter:()=>Object(Re.a)(u,e,c.shape,a,s,r,i)}}},De={kernelName:O.S,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>q.a.runKernel(O.U,s,n),filter:()=>q.a.runKernel(O.T,i,n)}}},Me={kernelName:O.V,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>q.a.runKernel(O.W,r)}}};var ze=n(35);const Le={kernelName:O.Y,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Object(v.a)(Object(ze.a)(Object(N.a)(Object(C.a)(n))),2/Math.sqrt(Math.PI));return{x:()=>Object(v.a)(e,r)}}},Pe={kernelName:O.Z,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(v.a)(e,n)}}},Be={kernelName:O.ab,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>Object(F.a)(e,n.shape)}}},We={kernelName:O.bb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(v.a)(e,Object(ze.a)(n))}}},Ve={kernelName:O.fb,gradFunc:e=>({x:()=>Object(z.a)(e)})},Ue={kernelName:O.gb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(R.a)(n.shape,r.shape);return{a:()=>{const t=Object(j.a)(e,Object(k.a)(r,"float32")),s=Object(R.c)(n.shape,a);return s.length>0?Object(F.a)(Object(_.a)(t,s),n.shape):t},b:()=>{let t=Object(v.a)(e,Object(k.a)(n,"float32"));const s=Object(R.c)(r.shape,a);s.length>0&&(t=Object(F.a)(Object(_.a)(t,s),r.shape));const i=Object(C.a)(r);return Object(N.a)(Object(j.a)(t,Object(k.a)(i,"float32")))}}}};var Ge=n(153),He=n(71);const qe={kernelName:O.ib,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[a,s,i,o]=t,u=null==o?Object(S.a)(1):o,c=Object(R.c)(s.shape,a.shape),l=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)l.push(a.shape[e]);l.push(1)}const d=Object($.a)(a,s),h=Object(v.a)(e,u),p=Object(Ge.a)(Object(W.a)(i,Object(S.a)(r))),f=Object(v.a)(Object(v.a)(Object(v.a)(p,p),p),Object(S.a)(-.5));return{x:()=>1===s.rank?Object(F.a)(Object(v.a)(Object(v.a)(e,Object(He.a)(Object(F.a)(p,[1,1,1,s.shape[0]]),l)),u),a.shape):Object(F.a)(Object(v.a)(Object(v.a)(e,p),u),a.shape),mean:()=>{let e=Object(v.a)(Object(v.a)(p,Object(S.a)(-1)),h);return 1===s.rank&&(e=Object(_.a)(e,c)),Object(F.a)(e,s.shape)},variance:()=>{let e=Object(v.a)(Object(v.a)(f,d),h);return 1===s.rank&&(e=Object(_.a)(e,c)),Object(F.a)(e,s.shape)},scale:()=>{const t=Object(v.a)(d,p);let n=Object(v.a)(e,t);return 1===s.rank&&(n=Object(_.a)(n,c)),Object(F.a)(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=Object(_.a)(t,c)),Object(F.a)(t,s.shape)}}}};var Ke=n(117);const Xe={kernelName:O.mb,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,a]=t,{axis:s}=n,i=Object(X.I)(s,r.shape)[0];return{x:()=>{const t=r.shape,n=a.size,o=t.slice(0,i),u=o.length,c=t.slice(s,t.length).slice(1),l=c.length,d=Ye(0,u),h=Ye(u+1,u+1+l),p=Ze([o,[n],c]),f=Object(F.a)(e,p),m=Object(F.a)(a,[n]),b=Ze([[u],d,h]),g=Object(Ae.a)(f,b);let y=Object(Ke.a)(g,m,r.shape[i]);const x=Object(Ce.h)(b);return y=Object(Ae.a)(y,x),y},indices:()=>a}}};function Ye(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Ze(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const Je={kernelName:O.ob,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Object(z.a)(n),b:()=>Object(z.a)(r)}}},Qe={kernelName:O.qb,gradFunc:e=>({x:()=>Object(k.a)(e,"float32")})},et={kernelName:O.sb,gradFunc:e=>({x:()=>Object(z.a)(e)})},tt={kernelName:O.tb,gradFunc:e=>({x:()=>Object(z.a)(e)})},nt={kernelName:O.ub,gradFunc:e=>({x:()=>Object(z.a)(e)})};var rt=n(41);const at={kernelName:O.xb,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:a}=n,s=Object(rt.a)(r,0);return{x:()=>Object(de.a)(s,e,Object(v.a)(e,a))}}},st={kernelName:O.Cb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(j.a)(e,Object(W.a)(n,1))}}},it={kernelName:O.Bb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(j.a)(e,Object(k.a)(n,"float32"))}}},ot={kernelName:O.Db,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;return{logits:()=>{const t=Object(ze.a)(r);return Object($.a)(e,Object(v.a)(Object(_.a)(e,a,!0),t))}}}};const ut=Object(Y.b)({localResponseNormalizationBackprop_:function(e,t,n,r=5,a=1,s=1,i=.5){const o={x:e,y:t,dy:n},u={depthRadius:r,bias:a,alpha:s,beta:i};return q.a.runKernel(O.wb,o,u)}}),ct={kernelName:O.vb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:u}=n;return{x:()=>ut(r,a,e,s,i,o,u)}}};var lt=n(79);function dt(e,t,n,r){return t.rank<n.rank&&(t=Object(F.a)(t,Ce.e(t.shape,r))),e.rank<n.rank&&(e=Object(F.a)(e,Ce.e(e.shape,r))),{x:()=>Object(v.a)(e,Object(k.a)(Object(lt.a)(n,t),e.dtype))}}const ht={kernelName:O.Hb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:a}=r,s=t[0],i=dt(e,t[1],s,X.I(a,s.shape));return{x:()=>i.x()}}};var pt=n(106);const ft={kernelName:O.Nb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Object(v.a)(e,Object(k.a)(Object(ue.a)(n,r),"float32")),b:()=>Object(v.a)(e,Object(k.a)(Object(pt.a)(n,r),"float32"))}}};const mt=Object(Y.b)({maxPool3dGrad_:function(e,t,n,r,a,s,i){const o=Object(K.a)(e,"dy","maxPool3dGrad"),u=Object(K.a)(t,"input","maxPool3dGrad"),c=Object(K.a)(n,"output","maxPool3dGrad");let l=o,d=u,h=c,p=!1;4===u.rank&&(p=!0,l=Object(F.a)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),d=Object(F.a)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),h=Object(F.a)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),X.b(5===l.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),X.b(5===d.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`)),X.b(5===h.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${h.rank}.`)),null!=i&&X.b(X.v(s),(()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const f={dy:l,input:d,output:h},m={filterSize:r,strides:a,pad:s,dimRoundingMode:i},b=q.a.runKernel(O.Kb,f,m);return p?Object(F.a)(b,[b.shape[1],b.shape[2],b.shape[3],b.shape[4]]):b}}),bt={kernelName:O.Jb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>mt(e,r,a,s,i,o,u)}}};const gt=Object(Y.b)({maxPoolGrad_:function(e,t,n,r,a,s,i){const o=Object(K.a)(e,"dy","maxPoolGrad"),u=Object(K.a)(t,"input","maxPoolGrad"),c=Object(K.a)(n,"output","maxPoolGrad");X.b(u.rank===o.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`)),X.b(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),X.b(4===u.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`)),null!=i&&X.b(X.v(s),(()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const l={dy:o,input:u,output:c},d={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return q.a.runKernel(O.Lb,l,d)}}),yt={kernelName:O.Ib,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>gt(e,r,a,s,i,o)}}};var xt=n(64);const Ot={kernelName:O.Ob,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n,s=X.I(a,r.shape),i=Object(Ce.d)(r.shape,s)[1],o=X.O(i);return{x:()=>{const t=r.shape.slice();s.forEach((e=>{t[e]=1}));const n=Object(F.a)(e,t);return Object(j.a)(Object(v.a)(n,Object(xt.a)(r.shape,"float32")),o)}}}},kt={kernelName:O.Pb,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:a}=r,[s,i]=t,o=dt(e,i,s,X.I(a,s.shape));return{x:()=>o.x()}}},vt={kernelName:O.Qb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>Object(v.a)(e,Object(k.a)(Object(ce.a)(n,r),"float32")),b:()=>Object(v.a)(e,Object(k.a)(Object(rt.a)(n,r),"float32"))}}};var wt=n(24);const It={kernelName:O.Rb,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>Object(wt.a)(e,s,r.shape)}}};var jt=n(103);const Nt={kernelName:O.Sb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(R.a)(n.shape,r.shape);return{a:()=>{const t=Object(R.c)(n.shape,a);return t.length>0?Object(F.a)(Object(_.a)(e,t),n.shape):e},b:()=>{const t=Object(v.a)(e,Object(N.a)(Object(jt.a)(Object(j.a)(n,r)))),s=Object(R.c)(r.shape,a);return s.length>0?Object(F.a)(Object(_.a)(t,s),r.shape):t}}}},St={kernelName:O.Ub,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(R.a)(n.shape,r.shape);return{a:()=>{const t=Object(v.a)(e,Object(k.a)(r,"float32")),s=Object(R.c)(n.shape,a);return s.length>0?Object(F.a)(Object(_.a)(t,s),n.shape):t},b:()=>{const t=Object(v.a)(e,Object(k.a)(n,"float32")),s=Object(R.c)(r.shape,a);return s.length>0?Object(F.a)(Object(_.a)(t,s),r.shape):t}}}},Tt={kernelName:O.Vb,gradFunc:e=>({x:()=>Object(N.a)(e)})};var Ct=n(65);const $t={kernelName:O.ac,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Object(Ct.a)(n.shape,"float32")}}},At={kernelName:O.bc,gradFunc:e=>({x:()=>Object(z.a)(e)})};var Et=n(68);const Rt={kernelName:O.cc,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return Object(Et.a)(e,r).map((e=>()=>e))}},Ft={kernelName:O.dc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map((e=>e[0]));return{x:()=>Object(wt.a)(e,s,r.shape)}}};var _t=n(60),Dt=n(45);const Mt={kernelName:O.fc,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,a]=t,s=n,i=r,o=R.a(s.shape,i.shape);return{a:()=>{const t=Object(k.a)(i,"float32");let n=Object(v.a)(e,Object(v.a)(t,Object(Dt.a)(s,Object($.a)(t,Object(S.a)(1)))));const r=R.c(s.shape,o);return r.length>0&&(n=Object(_.a)(n,r)),Object(F.a)(n,s.shape)},b:()=>{const t=Object(rt.a)(s,0),n=Object(de.a)(t,Object(_t.a)(s),Object(z.a)(s));let r=Object(v.a)(e,Object(v.a)(a,n));const u=R.c(i.shape,o);return u.length>0&&(r=Object(_.a)(r,u)),Object(F.a)(r,i.shape)}}}},zt={kernelName:O.gc,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(rt.a)(n,0);return{x:()=>Object(de.a)(a,e,Object(v.a)(e,r)),alpha:()=>{let t=Object(de.a)(a,Object(z.a)(e),Object(v.a)(e,n));const s=Object(R.c)(r.shape,e.shape);return s.length>0&&(t=Object(_.a)(t,s)),Object(F.a)(t,r.shape)}}}},Lt={kernelName:O.kc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=R.a(n.shape,r.shape);return{a:()=>{const t=Object(j.a)(e,Object(k.a)(r,"float32")),s=R.c(n.shape,a);return s.length>0?Object(F.a)(Object(_.a)(t,s),n.shape):t},b:()=>{let t=Object(v.a)(e,Object(k.a)(n,"float32"));const s=R.c(r.shape,a);s.length>0&&(t=Object(F.a)(Object(_.a)(t,s),r.shape));const i=Object(C.a)(r);return Object(N.a)(Object(j.a)(t,Object(k.a)(i,"float32")))}}}},Pt={kernelName:O.lc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(j.a)(e,Object(N.a)(Object(C.a)(n)))}}},Bt={kernelName:O.nc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=Object(v.a)(Object(ce.a)(n,6),Object(w.a)(n));return{x:()=>Object(v.a)(e,Object(k.a)(r,"float32"))}}},Wt={kernelName:O.mc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(v.a)(e,Object(k.a)(Object(w.a)(n),"float32"))}}},Vt={kernelName:O.oc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(F.a)(e,n.shape)}}},Ut={kernelName:O.pc,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>q.a.runKernel(O.qc,a,n)}}},Gt={kernelName:O.rc,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>q.a.runKernel(O.sc,a,n)}}};var Ht=n(40);const qt={kernelName:O.tc,gradFunc:(e,t,n)=>{const{dims:r}=n,a=Object(X.I)(r,e.shape);return{x:()=>Object(Ht.a)(e,a)}}},Kt={kernelName:O.vc,gradFunc:e=>({x:()=>Object(z.a)(e)})},Xt={kernelName:O.wc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(N.a)(Object(j.a)(e,Object(v.a)(Object(Dt.a)(n,1.5),2)))}}};var Yt=n(81);const Zt={kernelName:O.yc,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Object(k.a)(Object(z.a)(n),"float32"),t:()=>Object(v.a)(e,Object(k.a)(n,e.dtype)),e:()=>Object(v.a)(e,Object(k.a)(Object(Yt.a)(n),e.dtype))}}};var Jt=n(126);const Qt={kernelName:O.zc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Object(rt.a)(n,Object(S.a)(0)),r=Object(S.a)(Jt.b),a=Object(S.a)(Jt.a),s=Object(v.a)(e,a),i=Object(v.a)(Object(v.a)(e,r),Object(ze.a)(Object(k.a)(n,"float32")));return Object(de.a)(t,s,i)}}}},en={kernelName:O.Ac,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(v.a)(e,Object(v.a)(n,Object($.a)(Object(S.a)(1),n)))}}},tn={kernelName:O.Bc,gradFunc:e=>({x:()=>Object(z.a)(e)})};var nn=n(100);const rn={kernelName:O.Cc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(v.a)(Object(nn.a)(Object(k.a)(n,"float32")),e)}}};var an=n(139);const sn={kernelName:O.Dc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(v.a)(Object(an.a)(Object(k.a)(n,"float32")),e)}}};var on=n(46),un=n(96);const cn={kernelName:O.Ec,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:a,size:s}=n,i=r.shape,[o,u]=Object(un.parseSliceParams)(r,a,s),c=[];for(let t=0;t<e.rank;t++)c.push([o[t],i[t]-o[t]-u[t]]);return{x:()=>Object(on.a)(e,c)}}},ln={kernelName:O.Fc,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:a}=n,s=Object(v.a)(e,r);return{logits:()=>Object($.a)(s,Object(v.a)(Object(_.a)(s,[a],true),r))}}};var dn=n(70);const hn={kernelName:O.Gc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(v.a)(e,Object(dn.a)(n))}}};var pn=n(77);const fn={kernelName:O.Hc,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>Object(pn.a)(e,r,a)}}};var mn=n(27);const bn={kernelName:O.Jc,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>Object(mn.a)(e,r)}}},gn={kernelName:O.Kc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(j.a)(e,Object(v.a)(Object(T.a)(Object(k.a)(n,"float32")),2))}}},yn={kernelName:O.Lc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(v.a)(e,Object(v.a)(Object(k.a)(n,"float32"),2))}}},xn={kernelName:O.Mc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Object(S.a)(2);return{a:()=>Object(v.a)(e,Object(v.a)(a,Object($.a)(n,r))),b:()=>Object(v.a)(e,Object(v.a)(a,Object($.a)(r,n)))}}},On={kernelName:O.Nc,gradFunc:e=>({x:()=>Object(z.a)(e)})},kn={kernelName:O.Pc,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=R.a(n.shape,r.shape);return{a:()=>{let t=e;const r=R.c(n.shape,a);return r.length>0&&(t=Object(_.a)(t,r)),Object(F.a)(t,n.shape)},b:()=>{let t=e;const n=R.c(r.shape,a);return n.length>0&&(t=Object(_.a)(t,n)),Object(F.a)(Object(N.a)(t),r.shape)}}}},vn={kernelName:O.Qc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,a=r.shape.slice(),{axis:s}=n;Object(X.I)(s,r.shape).forEach((e=>{a[e]=1}));const i=Object(F.a)(e,a),o=Object(v.a)(i,Object(xt.a)(r.shape,"float32"));return{x:()=>o}}},wn={kernelName:O.Rc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(j.a)(e,Object(C.a)(Object(nn.a)(n)))}}},In={kernelName:O.Sc,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Object(v.a)(Object($.a)(Object(S.a)(1),Object(C.a)(n)),e)}}},jn={kernelName:O.Tc,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:a}=n;return{x:()=>{let t=Object(z.a)(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=Object(W.a)(t,Object(wt.a)(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=Object(W.a)(t,Object(wt.a)(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=Object(W.a)(t,Object(wt.a)(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=Object(W.a)(t,Object(wt.a)(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},Nn={kernelName:O.Wc,gradFunc:(e,t,n)=>{const r=n,{perm:a}=r,s=Ce.h(a);return{x:()=>Object(Ae.a)(e,s)}}};var Sn=n(50);const Tn={kernelName:O.Yc,gradFunc:(e,t,n)=>{const r=n,{axis:a}=r;return{value:()=>Object(Sn.a)(e,a)}}};var Cn=n(52),$n=n(80),An=n(76);const En={kernelName:O.Zc,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Object(An.a)(t,Object(z.a)(t)),r=Object($n.a)(e,n);let a=Object(ue.a)(t,Object(S.a)(0,"int32"));const s=r.rank-a.rank;for(let e=0;e<s;++e)a=Object(Cn.a)(a,e+1);a=Object(le.a)(a,Object(xt.a)(r.shape,"bool"));const i=Object(z.a)(r);return Object(de.a)(a,r,i)}(e,n)}}};const Rn={kernelName:O.ad,gradFunc:e=>({x:()=>Object(z.a)(e)})};var Fn=n(51);const _n=[I,A,E,D,M,L,P,B,V,U,G,H,J,ee,ne,ae,se,ie,oe,he,pe,me,ke,xe,Ie,Ne,Te,Ee,_e,De,Lt,Me,Le,Pe,Be,We,Ue,Ve,qe,Xe,Je,Qe,et,tt,nt,at,st,it,ot,ct,ht,ht,ft,bt,yt,Ot,kt,vt,It,Nt,St,Tt,$t,At,Rt,Ft,Ft,Mt,zt,Pt,Bt,Wt,Vt,Ut,Gt,qt,Kt,Xt,Zt,Qt,en,tn,rn,sn,cn,ln,hn,fn,fn,bn,bn,gn,xn,yn,On,kn,vn,wn,In,jn,Nn,Tn,En,Rn];for(const e of _n)Object(Fn.e)(e);var Dn=n(36),Mn=n(6);Object(Mn.d)().prototype.abs=function(){return this.throwIfDisposed(),Object(Dn.a)(this)};var zn=n(170);Object(Mn.d)().prototype.acos=function(){return this.throwIfDisposed(),Object(zn.a)(this)};var Ln=n(171);Object(Mn.d)().prototype.acosh=function(){return this.throwIfDisposed(),Object(Ln.a)(this)},Object(Mn.d)().prototype.add=function(e){return this.throwIfDisposed(),Object(W.a)(this,e)};var Pn=n(132);Object(Mn.d)().prototype.all=function(e,t){return this.throwIfDisposed(),Object(Pn.a)(this,e,t)};var Bn=n(133);Object(Mn.d)().prototype.any=function(e,t){return this.throwIfDisposed(),Object(Bn.a)(this,e,t)};var Wn=n(134);Object(Mn.d)().prototype.argMax=function(e){return this.throwIfDisposed(),Object(Wn.a)(this,e)};var Vn=n(135);Object(Mn.d)().prototype.argMin=function(e){return this.throwIfDisposed(),Object(Vn.a)(this,e)},Object(Mn.d)().prototype.asScalar=function(){return this.throwIfDisposed(),Object(X.b)(1===this.size,(()=>"The array must have only 1 element.")),Object(F.a)(this,[])},Object(Mn.d)().prototype.asType=function(e){return this.throwIfDisposed(),Object(k.a)(this,e)},Object(Mn.d)().prototype.as1D=function(){return this.throwIfDisposed(),Object(F.a)(this,[this.size])},Object(Mn.d)().prototype.as2D=function(e,t){return this.throwIfDisposed(),Object(F.a)(this,[e,t])},Object(Mn.d)().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),Object(F.a)(this,[e,t,n])},Object(Mn.d)().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),Object(F.a)(this,[e,t,n,r])},Object(Mn.d)().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),Object(F.a)(this,[e,t,n,r,a])};var Un=n(173);Object(Mn.d)().prototype.asin=function(){return this.throwIfDisposed(),Object(Un.a)(this)};var Gn=n(174);Object(Mn.d)().prototype.asinh=function(){return this.throwIfDisposed(),Object(Gn.a)(this)};var Hn=n(175);Object(Mn.d)().prototype.atan=function(){return this.throwIfDisposed(),Object(Hn.a)(this)};var qn=n(136);Object(Mn.d)().prototype.atan2=function(e){return this.throwIfDisposed(),Object(qn.a)(this,e)};var Kn=n(176);Object(Mn.d)().prototype.atanh=function(){return this.throwIfDisposed(),Object(Kn.a)(this)};var Xn=n(99);Object(Mn.d)().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),Object(Xn.a)(this,e,t,n,r)},Object(Mn.d)().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Object(pn.a)(this,e,t)};var Yn=n(69);Object(Mn.d)().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),Object(Yn.a)(this,e,t,n,r,a)};var Zn=n(87);Object(Mn.d)().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Object(Zn.a)(this,e)},Object(Mn.d)().prototype.cast=function(e){return this.throwIfDisposed(),Object(k.a)(this,e)};var Jn=n(179);Object(Mn.d)().prototype.ceil=function(){return this.throwIfDisposed(),Object(Jn.a)(this)};var Qn=n(180);Object(Mn.d)().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Object(Qn.a)(this,e,t)},Object(Mn.d)().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Mn.a&&(e=[e]),Object(mn.a)([this,...e],t)};var er=n(137);Object(Mn.d)().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Object(er.a)(this,e,t,n,r,a,s)};var tr=n(138);Object(Mn.d)().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),Object(tr.a)(this,e,t,n,r,a)},Object(Mn.d)().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Object(Oe.a)(this,e,t,n,r,a,s)},Object(Mn.d)().prototype.cos=function(){return this.throwIfDisposed(),Object(nn.a)(this)},Object(Mn.d)().prototype.cosh=function(){return this.throwIfDisposed(),Object(an.a)(this)},Object(Mn.d)().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Object($e.a)(this,e,t,n)};var nr=n(140);Object(Mn.d)().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Object(nr.a)(this,e,t)};var rr=n(78);Object(Mn.d)().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Object(rr.a)(this,e,t,n,r,a,s)};var ar=n(141);Object(Mn.d)().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),Object(ar.a)(this,e,t,n,r,a)};var sr=n(142);Object(Mn.d)().prototype.divNoNan=function(e){return this.throwIfDisposed(),Object(sr.a)(this,e)},Object(Mn.d)().prototype.div=function(e){return this.throwIfDisposed(),Object(j.a)(this,e)};var ir=n(143);Object(Mn.d)().prototype.dot=function(e){return this.throwIfDisposed(),Object(ir.a)(this,e)};var or=n(102);Object(Mn.d)().prototype.elu=function(){return this.throwIfDisposed(),Object(or.a)(this)},Object(Mn.d)().prototype.equal=function(e){return this.throwIfDisposed(),Object(lt.a)(this,e)};var ur=n(183);Object(Mn.d)().prototype.erf=function(){return this.throwIfDisposed(),Object(ur.a)(this)},Object(Mn.d)().prototype.exp=function(){return this.throwIfDisposed(),Object(ze.a)(this)},Object(Mn.d)().prototype.expandDims=function(e){return this.throwIfDisposed(),Object(Cn.a)(this,e)};var cr=n(184);Object(Mn.d)().prototype.expm1=function(){return this.throwIfDisposed(),Object(cr.a)(this)};var lr=n(114);Object(Mn.d)().prototype.fft=function(){return this.throwIfDisposed(),Object(lr.a)(this)},Object(Mn.d)().prototype.flatten=function(){return this.throwIfDisposed(),Object(F.a)(this,[this.size])},Object(Mn.d)().prototype.floor=function(){return this.throwIfDisposed(),Object(jt.a)(this)};var dr=n(97);Object(Mn.d)().prototype.floorDiv=function(e){return this.throwIfDisposed(),Object(dr.a)(this,e)},Object(Mn.d)().prototype.gather=function(e,t){return this.throwIfDisposed(),Object($n.a)(this,e,t)},Object(Mn.d)().prototype.greaterEqual=function(e){return this.throwIfDisposed(),Object(ue.a)(this,e)},Object(Mn.d)().prototype.greater=function(e){return this.throwIfDisposed(),Object(rt.a)(this,e)};var hr=n(91);Object(Mn.d)().prototype.ifft=function(){return this.throwIfDisposed(),Object(hr.a)(this)};var pr=n(158);Object(Mn.d)().prototype.irfft=function(){return this.throwIfDisposed(),Object(pr.a)(this)};var fr=n(185);Object(Mn.d)().prototype.isFinite=function(){return this.throwIfDisposed(),Object(fr.a)(this)};var mr=n(186);Object(Mn.d)().prototype.isInf=function(){return this.throwIfDisposed(),Object(mr.a)(this)};var br=n(187);Object(Mn.d)().prototype.isNaN=function(){return this.throwIfDisposed(),Object(br.a)(this)};var gr=n(105);Object(Mn.d)().prototype.leakyRelu=function(e){return this.throwIfDisposed(),Object(gr.a)(this,e)},Object(Mn.d)().prototype.lessEqual=function(e){return this.throwIfDisposed(),Object(ce.a)(this,e)},Object(Mn.d)().prototype.less=function(e){return this.throwIfDisposed(),Object(pt.a)(this,e)};var yr=n(144);Object(Mn.d)().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Object(yr.a)(this,e,t,n,r)};var xr=n(189);Object(Mn.d)().prototype.logSigmoid=function(){return this.throwIfDisposed(),Object(xr.a)(this)};var Or=n(190);Object(Mn.d)().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Object(Or.a)(this,e)};var kr=n(107);Object(Mn.d)().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Object(kr.a)(this,e,t)},Object(Mn.d)().prototype.log=function(){return this.throwIfDisposed(),Object(_t.a)(this)};var vr=n(145);Object(Mn.d)().prototype.log1p=function(){return this.throwIfDisposed(),Object(vr.a)(this)},Object(Mn.d)().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Object(le.a)(this,e)},Object(Mn.d)().prototype.logicalNot=function(){return this.throwIfDisposed(),Object(Yt.a)(this)};var wr=n(108);Object(Mn.d)().prototype.logicalOr=function(e){return this.throwIfDisposed(),Object(wr.a)(this,e)};var Ir=n(147);Object(Mn.d)().prototype.logicalXor=function(e){return this.throwIfDisposed(),Object(Ir.a)(this,e)},Object(Mn.d)().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Object(te.a)(this,e,t,n)};var jr=n(109);Object(Mn.d)().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),Object(jr.a)(this,e,t,n,r)};var Nr=n(58);Object(Mn.d)().prototype.max=function(e,t){return this.throwIfDisposed(),Object(Nr.a)(this,e,t)},Object(Mn.d)().prototype.maximum=function(e){return this.throwIfDisposed(),Object(An.a)(this,e)};var Sr=n(74);Object(Mn.d)().prototype.mean=function(e,t){return this.throwIfDisposed(),Object(Sr.a)(this,e,t)};var Tr=n(88);Object(Mn.d)().prototype.min=function(e,t){return this.throwIfDisposed(),Object(Tr.a)(this,e,t)};var Cr=n(110);Object(Mn.d)().prototype.minimum=function(e){return this.throwIfDisposed(),Object(Cr.a)(this,e)};var $r=n(148);Object(Mn.d)().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Object($r.a)(this,e,t)};var Ar=n(149);Object(Mn.d)().prototype.mod=function(e){return this.throwIfDisposed(),Object(Ar.a)(this,e)},Object(Mn.d)().prototype.mul=function(e){return this.throwIfDisposed(),Object(v.a)(this,e)},Object(Mn.d)().prototype.neg=function(){return this.throwIfDisposed(),Object(N.a)(this)};var Er=n(118);Object(Mn.d)().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Object(Er.a)(this,e,t,n)};var Rr=n(111);Object(Mn.d)().prototype.notEqual=function(e){return this.throwIfDisposed(),Object(Rr.a)(this,e)};var Fr=n(89);Object(Mn.d)().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Object(Fr.a)(this,e,t,n)};var _r=n(194);Object(Mn.d)().prototype.onesLike=function(){return this.throwIfDisposed(),Object(_r.a)(this)},Object(Mn.d)().prototype.pad=function(e,t){return this.throwIfDisposed(),Object(on.a)(this,e,t)};var Dr=n(150);Object(Mn.d)().prototype.pool=function(e,t,n,r,a){return this.throwIfDisposed(),Object(Dr.a)(this,e,t,n,r,a)},Object(Mn.d)().prototype.pow=function(e){return this.throwIfDisposed(),Object(Dt.a)(this,e)};var Mr=n(112);Object(Mn.d)().prototype.prelu=function(e){return this.throwIfDisposed(),Object(Mr.a)(this,e)};var zr=n(151);Object(Mn.d)().prototype.prod=function(e,t){return this.throwIfDisposed(),Object(zr.a)(this,e,t)};var Lr=n(195);Object(Mn.d)().prototype.reciprocal=function(){return this.throwIfDisposed(),Object(Lr.a)(this)};var Pr=n(66);Object(Mn.d)().prototype.relu=function(){return this.throwIfDisposed(),Object(Pr.a)(this)};var Br=n(113);Object(Mn.d)().prototype.relu6=function(){return this.throwIfDisposed(),Object(Br.a)(this)},Object(Mn.d)().prototype.reshapeAs=function(e){return this.throwIfDisposed(),Object(F.a)(this,e.shape)},Object(Mn.d)().prototype.reshape=function(e){return this.throwIfDisposed(),Object(F.a)(this,e)};var Wr=n(166);Object(Mn.d)().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Object(Wr.a)(this,e,t,n)};var Vr=n(165);Object(Mn.d)().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Object(Vr.a)(this,e,t,n)},Object(Mn.d)().prototype.reverse=function(e){return this.throwIfDisposed(),Object(Ht.a)(this,e)};var Ur=n(115);Object(Mn.d)().prototype.rfft=function(){return this.throwIfDisposed(),Object(Ur.a)(this)};var Gr=n(196);Object(Mn.d)().prototype.round=function(){return this.throwIfDisposed(),Object(Gr.a)(this)},Object(Mn.d)().prototype.rsqrt=function(){return this.throwIfDisposed(),Object(Ge.a)(this)};var Hr=n(154);Object(Mn.d)().prototype.selu=function(){return this.throwIfDisposed(),Object(Hr.a)(this)};var qr=n(155);Object(Mn.d)().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Object(qr.a)(this,e,t,n,r,a,s)},Object(Mn.d)().prototype.sigmoid=function(){return this.throwIfDisposed(),Object(dn.a)(this)};var Kr=n(198);Object(Mn.d)().prototype.sign=function(){return this.throwIfDisposed(),Object(Kr.a)(this)},Object(Mn.d)().prototype.sin=function(){return this.throwIfDisposed(),Object(je.a)(this)},Object(Mn.d)().prototype.sinh=function(){return this.throwIfDisposed(),Object(Se.a)(this)},Object(Mn.d)().prototype.slice=function(e,t){return this.throwIfDisposed(),Object(wt.a)(this,e,t)};var Xr=n(199);Object(Mn.d)().prototype.softmax=function(e){return this.throwIfDisposed(),Object(Xr.a)(this,e)};var Yr=n(146);Object(Mn.d)().prototype.softplus=function(){return this.throwIfDisposed(),Object(Yr.a)(this)},Object(Mn.d)().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),Object(re.a)(this,e,t)},Object(Mn.d)().prototype.split=function(e,t){return this.throwIfDisposed(),Object(fe.a)(this,e,t)},Object(Mn.d)().prototype.sqrt=function(){return this.throwIfDisposed(),Object(T.a)(this)},Object(Mn.d)().prototype.square=function(){return this.throwIfDisposed(),Object(C.a)(this)};var Zr=n(116);Object(Mn.d)().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Object(Zr.a)(this,e)};var Jr=n(83);Object(Mn.d)().prototype.squeeze=function(e){return this.throwIfDisposed(),Object(Jr.a)(this,e)},Object(Mn.d)().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Mn.a?[this,e]:[this,...e];return Object(Sn.a)(n,t)},Object(Mn.d)().prototype.step=function(e){return this.throwIfDisposed(),Object(w.a)(this,e)};var Qr=n(200);Object(Mn.d)().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),Object(Qr.a)(this,e,t,n,r,a,s,i,o)},Object(Mn.d)().prototype.sub=function(e){return this.throwIfDisposed(),Object($.a)(this,e)},Object(Mn.d)().prototype.sum=function(e,t){return this.throwIfDisposed(),Object(_.a)(this,e,t)};var ea=n(201);Object(Mn.d)().prototype.tan=function(){return this.throwIfDisposed(),Object(ea.a)(this)};var ta=n(124);Object(Mn.d)().prototype.tanh=function(){return this.throwIfDisposed(),Object(ta.a)(this)},Object(Mn.d)().prototype.tile=function(e){return this.throwIfDisposed(),Object(He.a)(this,e)},Object(Mn.d)().prototype.toBool=function(){return this.throwIfDisposed(),Object(k.a)(this,"bool")},Object(Mn.d)().prototype.toFloat=function(){return this.throwIfDisposed(),Object(k.a)(this,"float32")},Object(Mn.d)().prototype.toInt=function(){return this.throwIfDisposed(),Object(k.a)(this,"int32")};var na=n(160);Object(Mn.d)().prototype.topk=function(e,t){return this.throwIfDisposed(),Object(na.a)(this,e,t)},Object(Mn.d)().prototype.transpose=function(e){return this.throwIfDisposed(),Object(Ae.a)(this,e)};var ra=n(161);let aa;function sa(){return null==aa&&(aa=Object(x.backend)().epsilon()),aa}Object(Mn.d)().prototype.unique=function(e){return this.throwIfDisposed(),Object(ra.a)(this,e)},Object(Mn.d)().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Object(Ke.a)(this,e,t)},Object(Mn.d)().prototype.unstack=function(e){return this.throwIfDisposed(),Object(Et.a)(this,e)},Object(Mn.d)().prototype.where=function(e,t){return this.throwIfDisposed(),Object(de.a)(e,this,t)},Object(Mn.d)().prototype.zerosLike=function(){return this.throwIfDisposed(),Object(z.a)(this)};class ia extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ia.prototype)}}class oa extends Error{constructor(e){super(e),Object.setPrototypeOf(this,oa.prototype)}}class ua extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ua.prototype)}}class ca extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ca.prototype)}}class la extends Error{constructor(e){super(e),Object.setPrototypeOf(this,la.prototype)}}Error;function da(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function ha(e,t){if(!e)throw new la(t)}function pa(e,t){let n=0;for(const r of e)r===t&&n++;return n}function fa(e){return 1===e.length?e[0]:e}function ma(e){return Array.isArray(e)?e:[e]}function ba(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function ga(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}let ya={};function xa(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Oa(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>Oa(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?Oa(t):e[n]=t.value)}}}function ka(e,t={},n={},r="object",a=!1){if("string"==typeof e){const a=e;let s;if(a in n)s=n[a];else if(a in ya)s=ya[a];else if(s=t[a],null==s)throw new ua(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{const s=e;if(null==s.className||null==s.config)throw new ua(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);const i=s.className;let o,u;if(i in n?[o,u]=n[i]:i in ya?[o,u]=ya.className:i in t&&([o,u]=t[i]),null==o)throw new ua(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const t of Object.keys(ya))e[t]=ya[t];for(const t of Object.keys(n))e[t]=n[t];s.config.customObjects=e;const t=Object.assign({},ya);for(const e of Object.keys(n))ya[e]=n[e];Oa(s.config);const r=u(o,s.config,n,a);return ya=Object.assign({},t),r}{const e=Object.assign({},ya);for(const e of Object.keys(n))ya[e]=n[e];const t=new o(s.config);return ya=Object.assign({},e),t}}}function va(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function wa(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Ia(e){if(null==e)throw new ua(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function ja(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new ua(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Na(e,t,n=0,r=1/0){return ha(n>=0),ha(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function Sa(e,t){Array.isArray(e)?(x.util.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>Sa(e,`element ${n+1} of ${t}`)))):x.util.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${Ta(e)}.`))}function Ta(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>Ta(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function Ca(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function $a(e,t){return Object(x.tidy)((()=>x.sqrt(x.sum(x.mul(e,e),t,!0))))}class Aa extends x.serialization.Serializable{getConfig(){return{}}}class Ea extends Aa{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Object(x.tidy)((()=>{const t=$a(e,this.axis),n=x.clipByValue(t,0,this.maxValue);return x.mul(e,x.div(n,x.add(sa(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Ea.className="MaxNorm",x.serialization.registerClass(Ea);class Ra extends Aa{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Object(x.tidy)((()=>x.div(e,x.add(sa(),$a(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Ra.className="UnitNorm",x.serialization.registerClass(Ra);class Fa extends Aa{apply(e){return x.relu(e)}}Fa.className="NonNeg",x.serialization.registerClass(Fa);class _a extends Aa{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Object(x.tidy)((()=>{const t=$a(e,this.axis),n=x.add(x.mul(this.rate,x.clipByValue(t,this.minValue,this.maxValue)),x.mul(1-this.rate,t));return x.mul(e,x.div(n,x.add(sa(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}_a.className="MinMaxNorm",x.serialization.registerClass(_a);const Da={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Ma(e){return xa(e)}function za(e,t={}){return ka(e,x.serialization.SerializationMap.getMap().classNameMap,t,"constraint")}function La(e){if(null==e)return null;if("string"==typeof e){return za({className:e in Da?Da[e]:e,config:{}})}return e instanceof Aa?e:za(e)}const Pa=["channelsFirst","channelsLast"],Ba=["nearest","bilinear"],Wa=["valid","same","causal"],Va=["max","avg"],Ua=["sum","mul","concat","ave"],Ga=new Map;function Ha(e){ja(Pa,"DataFormat",e)}function qa(e){ja(Wa,"PaddingMode",e)}function Ka(e){ja(Va,"PoolMode",e)}const Xa=[];function Ya(e,t){Xa.push(e);try{const e=t();return Xa.pop(),e}catch(e){throw Xa.pop(),e}}function Za(e){if(!es(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Xa.length?"":Xa.join("/")+"/")+e}function Ja(e){if(!es(e))throw new Error("Not a valid tensor name: '"+e+"'");Ga.has(e)||Ga.set(e,0);const t=Ga.get(e);if(Ga.set(e,Ga.get(e)+1),t>0){const n=`${e}_${t}`;return Ga.set(n,1),n}return e}const Qa=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function es(e){return!!e.match(Qa)}function ts(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function ns(e){return e=Array.isArray(e)?new Float32Array(e):e,Object(x.tensor1d)(e)}function rs(e){return x.min(ns(e)).dataSync()[0]}function as(e){return x.max(ns(e)).dataSync()[0]}function ss(e,t){if(t<e)throw new ua(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function is(e,t){return e.asType(t)}function os(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),e.reshape(n)}function us(e,t,n){return Object(x.tidy)((()=>{switch(e.rank){case 1:return x.slice1d(e,t,n);case 2:return x.slice2d(e,[t,0],[n,e.shape[1]]);case 3:return x.slice3d(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return x.slice4d(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return x.slice(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return x.slice(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new ua(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function cs(e,t,n){return Object(x.tidy)((()=>{switch(e.rank){case 1:return x.slice1d(e,t,n);case 2:return x.slice2d(e,[0,t],[e.shape[0],n]);case 3:return x.slice3d(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return x.slice4d(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new ua(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function ls(e,t,n,r){return Object(x.tidy)((()=>{switch(e.rank){case 1:return x.slice1d(e,t,n);case 2:switch(r){case 1:return us(e,t,n);case 2:return cs(e,t,n);default:throw new ua(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return us(e,t,n);case 2:return x.slice3d(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return cs(e,t,n);default:throw new ua(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return us(e,t,n);case 2:return x.slice4d(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return x.slice4d(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return cs(e,t,n);default:throw new ua(`The axis is not within the rank of the tensor ${r}`)}default:throw new ua(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function ds(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),x.concat(e,t)}function hs(e,t){switch(e.rank){case 1:return x.concat1d([e,t]);case 2:return x.concat2d([e,t],0);case 3:return x.concat3d([e,t],0);case 4:return x.concat4d([e,t],0);default:throw new ua(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function ps(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new ua(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return x.tile(e,t)}function fs(e,t=0,n=1,r,a){return x.randomNormal(e,t,n,r,a)}function ms(e,t,n,r){if(e.rank<2||t.rank<2)throw new ca(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3){if(e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new ca(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`)}if(2===e.rank&&2===t.rank){const a=!1,s=!1;return x.fused.matMul({a:e,b:t,transposeA:a,transposeB:s,bias:r?ys(e.rank,r,"channelsLast"):null,activation:n})}{const a=e.shape.slice(),s=a.pop();e=e.reshape([-1,s]);const i=t.shape.slice(),o=i.pop(),u=i.pop(),c=[...i,o],l=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=t.transpose(l).reshape([u,-1]);const d=[...a,...c],h=!1,p=!1;return x.fused.matMul({a:e,b:t,transposeA:h,transposeB:p,bias:r?ys(e.rank,r,"channelsLast"):null,activation:n}).reshape(d)}}function bs(e,t,n){return Object(x.tidy)((()=>(t=Array.isArray(t)?Object(x.tensor1d)(t,"int32"):t.toInt(),x.gather(e,t,n))))}function gs(e){return x.mul(e,e)}function ys(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new ua(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1,1]):t.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,1,r[0]]):t.reshape([1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1]):t.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,r[0]]):t.reshape([1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1]):t.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,r[0]]):t.reshape([1].concat(r))}else if(e<3)return t;throw new ua(`Unsupported input rank by biasAdd: ${t.rank}`)}function xs(e,t,n){return Object(x.tidy)((()=>(null==n&&(n="channelsLast"),Ha(n),e.add(ys(e.rank,t,n)))))}function Os(e,t,n,r){return Object(x.tidy)((()=>x.dropout(e,t,n,r)))}function ks(e,t,n=!1){return n?e():t()}const vs=["fanIn","fanOut","fanAvg"],ws=["normal","uniform","truncatedNormal"];class Is extends x.serialization.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class js extends Is{apply(e,t){return Object(x.zeros)(e,t)}}js.className="Zeros",x.serialization.registerClass(js);class Ns extends Is{apply(e,t){return Object(x.ones)(e,t)}}Ns.className="Ones",x.serialization.registerClass(Ns);class Ss extends Is{constructor(e){if(super(),"object"!=typeof e)throw new ua(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new ua(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Object(x.tidy)((()=>Object(x.mul)(Object(x.scalar)(this.value),Object(x.ones)(e,t))))}getConfig(){return{value:this.value}}}Ss.className="Constant",x.serialization.registerClass(Ss);class Ts extends Is{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Object(x.randomUniform)(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Ts.className="RandomUniform",x.serialization.registerClass(Ts);class Cs extends Is{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ca(`randomNormal does not support dType ${t}.`);return fs(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Cs.className="RandomNormal",x.serialization.registerClass(Cs);class $s extends Is{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ca(`truncatedNormal does not support dType ${t}.`);return Object(x.truncatedNormal)(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}$s.className="TruncatedNormal",x.serialization.registerClass($s);class As extends Is{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Object(x.tidy)((()=>{if(2!==e.length||e[0]!==e[1])throw new ua("Identity matrix initializer can only be used for 2D square matrices.");return Object(x.mul)(this.gain,Object(x.eye)(e[0]))}))}getConfig(){return{gain:this.gain}}}As.className="Identity",x.serialization.registerClass(As);class Es extends Is{constructor(e){if(super(),e.scale<0)throw new ua(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,ja(vs,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){ja(ws,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(Ha(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=ts(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=ts(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=ts(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],a=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ca(`${this.getClassName()} does not support dType ${t}.`);return Object(x.truncatedNormal)(e,0,n,t,this.seed)}{const n=Math.sqrt(3*s);return Object(x.randomUniform)(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Es.className="VarianceScaling",x.serialization.registerClass(Es);class Rs extends Es{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Es.className}}Rs.className="GlorotUniform",x.serialization.registerClass(Rs);class Fs extends Es{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Es.className}}Fs.className="GlorotNormal",x.serialization.registerClass(Fs);class _s extends Es{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Es.className}}_s.className="HeNormal",x.serialization.registerClass(_s);class Ds extends Es{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Es.className}}Ds.className="HeUniform",x.serialization.registerClass(Ds);class Ms extends Es{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Es.className}}Ms.className="LeCunNormal",x.serialization.registerClass(Ms);class zs extends Es{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Es.className}}zs.className="LeCunNormal",x.serialization.registerClass(zs);class Ls extends Is{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new ca("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Object(x.tidy)((()=>{if(e.length<2)throw new ca("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=fs(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=x.linalg.gramSchmidt(t);return e[0]>e[1]&&(n=n.transpose()),Object(x.mul)(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Ls.className="Orthogonal",x.serialization.registerClass(Ls);const Ps={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Bs(e,t={}){return ka(e,x.serialization.SerializationMap.getMap().classNameMap,t,"initializer")}function Ws(e){return xa(e)}function Vs(e){if("string"==typeof e){const t=e in Ps?Ps[e]:e;if("GlorotNormal"===t)return new Fs;if("GlorotUniform"===t)return new Rs;if("HeNormal"===t)return new _s;if("HeUniform"===t)return new Ds;if("LeCunNormal"===t)return new Ms;if("LeCunUniform"===t)return new zs;{const e={};return e.className=t,e.config={},Bs(e)}}return e instanceof Is?e:Bs(e)}let Us=0;function Gs(){return Us++}const Hs={};function qs(e=""){return e in Hs||(Hs[e]=0),Hs[e]+=1,e+Hs[e].toString()}function Ks(e){return Array.isArray(e)&&Array.isArray(e[0])}function Xs(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Ys(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new ua(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Zs(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new ua(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Js(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}const Qs="Variable";class ei{constructor(e,t="float32",n="Variable",r=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Gs(),n=null==n?Qs:n,this.originalName=Za(n),this.name=Ja(this.originalName),this.trainable_=r,this.constraint=a,this.val=x.variable(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function ti(e){return e.map((e=>e.read()))}function ni(e){e.forEach((e=>{e[0].write(e[1])}))}class ri{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class ai{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=Gs(),null!=s&&(this.originalName=Za(s),this.name=Ja(this.originalName)),this.rank=t.length}}let si=0;class ii{constructor(e,t){this.callArgs=t,this.id=si++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let oi=0;class ui extends x.serialization.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=oi++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=ba(e)+"_"+qs(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new oa(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new ua(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return fa(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return fa(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new ia(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new ia(`Layer ${this.name} is not connected, no input to return.`);return fa(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new ia(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new ia(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return fa(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=ma(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=ma(this.inputSpec);if(e.length!==t.length)throw new ua(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],a=t[n];if(null==a)continue;const s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new ua(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new ua(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new ua(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new ua(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){const e=r.shape;for(const t in a.axes){const r=Number(t),s=a.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new ua(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=a.shape)for(let e=0;e<a.shape.length;++e){const t=a.shape[e],s=r.shape[e];if(null!=t&&null!=s&&t!==s)throw new ua(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=ma(e);let r=!0;for(const e of n)if(!(e instanceof ai)){r=!1;break}let a=!0;for(const e of n)if(e instanceof ai){a=!1;break}if(r===a)throw new ua("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ya(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of ma(e))t.push(n.shape);this.build(fa(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t);const a=ma(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=fa(s),null!=this.activityRegularizer)throw new ca("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=ma(e);const t=[];for(const n of e)t.push(n.shape);return fa(t)}(e),r=this.computeOutputShape(n);let a;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),a=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new ai(s,n,this,ma(e),t,this.name,r))):new ai(s,r,this,ma(e),t,this.name),this.addInboundNode(e,a,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new ca("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new ia(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new ia(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new oa(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Js(this.weights)}build(e){this.built=!0}getWeights(e=!1){return ti(e?this.trainableWeights:this.weights)}setWeights(e){Object(x.tidy)((()=>{const t=this.weights;if(t.length!==e.length)throw new ua(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=ti(t);for(let a=0;a<r.length;++a){const s=r[a],i=t[a],o=e[a];if(!x.util.arraysEqual(s.shape,o.shape))throw new ua(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}ni(n)}))}addWeight(e,t,n,r,a,s,i){if(-1!==this._addedWeightNames.indexOf(e))throw new ua(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=Vs("zeros"));const o=r.apply(t,n),u=new ei(o,n,e,s,i);return o.dispose(),null!=a&&this.addLoss((()=>a.apply(u.read()))),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=ma(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,a,s,i=null){const o=ma(e);t=ma(t),n=ma(n),r=ma(r),a=Xs(a),s=Xs(s);const u=[],c=[],l=[];for(const e of o)u.push(e.sourceLayer),c.push(e.nodeIndex),l.push(e.tensorIndex);new ii({outboundLayer:this,inboundLayers:u,nodeIndices:c,tensorIndices:l,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function ci(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=ci(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class li extends ui{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:qs("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new ua("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new ua("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new ua("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new ai(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new ii({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new ua(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function di(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new ua("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;null==n&&(n="float32");return new li({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function hi(e){if(null==e)return;const t=[],n=[],r=[];for(const a in e){const s=e[a];if("number"!=typeof s){const e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){const a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];Object(x.dispose)(r)}}function pi(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var fi;li.className="InputLayer",x.serialization.registerClass(li),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(fi||(fi={}));class mi{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class bi{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class gi extends mi{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const a=Object(x.tidy)((()=>Object(x.add)(this.totals[e],Object(x.mul)(r,n))));this.totals[e]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:Object(x.tidy)((()=>{const n=Object(x.mul)(Object(x.div)(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),Object(x.keep)(t[e])})))}}class yi extends mi{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const a=this.history[r];for(let s=0;s<a.length;++s)if("number"!=typeof a[s]){const i=a[s];e.push(i.data()),t.push(r),n.push(s)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e){this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}}class xi extends mi{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");x.util.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t){let n,r=x.util.now();return(...a)=>{const s=x.util.now();return s-r<t||(r=s,n=e(...a)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await hi(n),r.push(this.yield(e,t,n))),r.push(Object(x.nextFrame)()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await hi(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await hi(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(Object(x.nextFrame)()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await hi(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await hi(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(Object(x.nextFrame)()):x.util.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await hi(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await hi(e),await this.trainEnd(e))}}function Oi(e,t){if(null==e&&(e={}),e instanceof mi)return[e];if(Array.isArray(e)&&e[0]instanceof mi)return e;return ma(e).map((e=>new xi(e,t)))}class ki{constructor(){}static registerCallbackConstructor(e,t){x.util.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),ki.checkForDuplicate(t),null==ki.constructors[e]&&(ki.constructors[e]=[]),ki.constructors[e].push(t)}static checkForDuplicate(e){for(const t in ki.constructors){ki.constructors[+t].forEach((t=>{if(t===e)throw new ua("Duplicate callback constructor.")}))}}static clear(){ki.constructors={}}static createCallbacks(e){const t=[];for(const n in ki.constructors){const r=+n;e>=r&&t.push(...ki.constructors[r])}return t.map((e=>new e))}}function vi(e,t,n,r,a,s,i,o,u){const c=new yi,l=[new gi,...ki.createCallbacks(t)];null!=e&&l.push(...e),l.push(c);const d=new bi(l);return d.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:d,history:c}}function wi(e,t={},n=!1){return ka(e,x.serialization.SerializationMap.getMap().classNameMap,t,"layer",n)}function Ii(e,t){return Object(x.tidy)((()=>{"float32"!==e.dtype&&(e=e.asType("float32"));const n=x.sum(gs(e),t,!0),r=x.fill(n.shape,sa()),a=x.sqrt(x.maximum(n,r));return x.div(e,a)}))}function ji(e,t){return Object(x.tidy)((()=>x.mean(gs(x.sub(t,e)),-1)))}function Ni(e,t){return Object(x.tidy)((()=>x.mean(x.abs(x.sub(t,e)),-1)))}function Si(e,t){return Object(x.tidy)((()=>{const n=x.sub(e,t),r=x.clipByValue(x.abs(e),sa(),Number.MAX_VALUE),a=x.abs(x.div(n,r));return x.mul(100,x.mean(a,-1))}))}function Ti(e,t){return Object(x.tidy)((()=>{const n=x.clipByValue(t,sa(),Number.MAX_VALUE),r=x.log(x.add(1,n)),a=x.clipByValue(e,sa(),Number.MAX_VALUE),s=x.log(x.add(1,a));return x.mean(gs(x.sub(r,s)),-1)}))}function Ci(e,t,n=!1){return Object(x.tidy)((()=>{if(n)t=x.softmax(t);else{const e=x.sum(t,t.shape.length-1,!0);t=x.div(t,e)}return t=x.clipByValue(t,sa(),1-sa()),x.neg(x.sum(x.mul(e.toFloat(),x.log(t)),t.shape.length-1))}))}function $i(e,t,n=!1){return Object(x.tidy)((()=>{const r=x.floor(function(e){const t=[ts(e.shape)];return e.reshape(t)}(e)).toInt(),a=(t=x.clipByValue(t,sa(),1-sa())).shape;return Ci(x.oneHot(r,a[a.length-1]).reshape(a),t,n)}))}function Ai(e,t){return Object(x.tidy)((()=>{let n;return n=x.clipByValue(t,sa(),1-sa()),n=x.log(x.div(n,x.sub(1,n))),x.mean(function(e,t){if(!x.util.arraysEqual(e.shape,t.shape))throw new ua(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Object(x.tidy)((()=>{const n=t.relu(),r=t.abs().neg();return n.sub(t.mul(e)).add(r.exp().log1p())}))}(e,n),-1)}))}function Ei(e,t){return Object(x.tidy)((()=>{const n=x.clipByValue(e,sa(),1),r=x.clipByValue(t,sa(),1);return x.sum(x.mul(e,x.log(x.div(n,r))),-1)}))}function Ri(e,t){return Object(x.tidy)((()=>{const n=Ii(e,-1),r=Ii(t,-1),a=x.mul(n,r);return x.neg(x.sum(a,-1))}))}ki.constructors={};const Fi={meanSquaredError:ji,meanAbsoluteError:Ni,meanAbsolutePercentageError:Si,meanSquaredLogarithmicError:Ti,squaredHinge:function(e,t){return Object(x.tidy)((()=>{const n=x.maximum(0,x.sub(1,x.mul(e,t)));return x.mean(gs(n),-1)}))},hinge:function(e,t){return Object(x.tidy)((()=>{const n=x.maximum(0,x.sub(1,x.mul(e,t)));return x.mean(n,-1)}))},categoricalHinge:function(e,t){return Object(x.tidy)((()=>{const n=x.sum(x.mul(e,t),-1),r=x.max(x.mul(x.sub(1,e),t),-1);return x.maximum(0,x.add(1,x.sub(r,n)))}))},logcosh:function(e,t){return Object(x.tidy)((()=>{const n=Math.log(2),r=x.sub(t,e),a=x.sub(x.add(r,x.softplus(x.mul(-2,r))),n);return x.mean(a,-1)}))},categoricalCrossentropy:Ci,sparseCategoricalCrossentropy:$i,binaryCrossentropy:Ai,kullbackLeiblerDivergence:Ei,poisson:function(e,t){return Object(x.tidy)((()=>{const n=x.log(x.add(sa(),t));return x.mean(x.sub(t,x.mul(e,n)),-1)}))},cosineProximity:Ri};function _i(e){if("string"==typeof e){if(e in Fi)return Fi[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new ua(t)}return e}function Di(e,t){return Object(x.tidy)((()=>{const n=x.mul(.5,x.onesLike(t)),r=is(x.greater(t,n),e.dtype);return x.mean(x.equal(e,r),-1)}))}function Mi(e,t){return Object(x.tidy)((()=>is(x.equal(x.argMax(e,-1),x.argMax(t,-1)),"float32")))}function zi(e,t){return Object(x.tidy)((()=>x.logicalAnd(e.equal(1),t.equal(1)).sum().cast("float32")))}function Li(e,t){return Object(x.tidy)((()=>{const n=zi(e,t),r=function(e,t){return Object(x.tidy)((()=>x.logicalAnd(e.equal(0),t.equal(1)).sum().cast("float32")))}(e,t),a=n.add(r);return x.where(x.greater(a,0),n.div(a),0).cast("float32")}))}function Pi(e,t){return Ai(e,t)}function Bi(e,t){return e.rank===t.rank&&(e=e.squeeze([e.rank-1])),(t=t.argMax(-1)).dtype!==e.dtype&&(t=t.asType(e.dtype)),x.equal(e,t).asType("float32")}const Wi=Ci,Vi=$i,Ui={binaryAccuracy:Di,categoricalAccuracy:Mi,precision:Li,categoricalCrossentropy:Wi,sparseCategoricalCrossentropy:Vi,mse:ji,MSE:ji,mae:Ni,MAE:Ni,mape:Si,MAPE:Si,cosine:Ri};function Gi(e){if("string"==typeof e&&e in Ui)return Ui[e];if("string"!=typeof e&&null!=e)return e;throw new ua(`Unknown metric ${e}`)}function Hi(e){if(ha(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(Fi))if(Fi[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Ui))if(Ui[n]===e){t=n;break}return void 0!==t?t:e.name}}const qi=1048576;function Ki(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Xi(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>qi&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Xi(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!Xi(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Xi(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Yi(e,t,n,r=console.log){const a=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const a of n.inboundNodes)if(-1!==r.indexOf(a)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),s=["Layer (type)","Output shape","Param #"];let i;if(a?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!a){s.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),Zi(s,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)a?Ji(o[e],n,r):Qi(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;t=null!=e.collectedTrainableWeights?Js(e.collectedTrainableWeights):Js(e.trainableWeights);return t}(e),c=Js(e.nonTrainableWeights);r(`Total params: ${u+c}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${c}`),r("_".repeat(t))}function Zi(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function Ji(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}Zi([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function Qi(e,t,n,r){let a;try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}const s=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],a=t.tensorIndices[e];s.push(`${n}[${r}][${a}]`)}const i=e.name,o=e.getClassName(),u=0===s.length?"":s[0];Zi([`${i} (${o})`,a,e.countParams().toString(),u],t,r);for(let e=1;e<s.length;++e)Zi(["","","",s[e]],t,r)}function eo(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function to(e,t){if(null===e)return null;if("string"==typeof e)return ga(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];eo(t,a,r)?n.push(r):n.push(to(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=ga(n);t[e]=to(r,e)}}return t}}function no(e,t){if(null==e)return null;if("string"==typeof e)return ba(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];eo(t,a,r)?n.push(r):n.push(no(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n],a=ba(n);t[a]="name"!==n&&"className"!==n||"string"!=typeof r?no(r,n):r}return t}}class ro{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof ro)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new ua(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Object(x.cast)(t,e.dtype)}catch(n){throw new ua(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof ai){if(null==this.id2Value[e.id])throw new ua(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new ua(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof ai){if(null==this.id2Value[e.id])throw new ua(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new ua(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Object(x.dispose)(this.id2Mask)}}const ao={},so={};function io(e,t,n,r){const a=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map((e=>e.name)),u=[],c=t.names();for(const e of o)-1!==c.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const l=o.join(",")+"|"+t.names().join(",");let d,h;if(null==ao[l]){const e=function(e,t){x.util.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const a=uo(e[0],t);n=a.sorted,r=a.recipientMap}else{const a=new Set;for(const s of e){const{sorted:e,recipientMap:i}=uo(s,t);for(const t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:oo(r)}}(i,t);d=e.sorted,h=e.recipientCounts,ao[l]=d,so[l]=h}d=ao[l],h={},a||Object.assign(h,so[l]);const p=new ro(t);for(let e=0;e<d.length;++e){if(null!=r){const e=Object(x.memory)().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const s=d[e],i=s.sourceLayer;if(i instanceof li)continue;const c=[],l=[],f=[];let m=!1;for(const e of s.inputs){const n=p.getValue(e),r=p.getMask(e);c.push(n),l.push(r),null!=r&&(m=!0),a||(h[e.name]--,0!==h[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=l[0]);const b=ma(i.apply(c,n));let g=null;i.supportsMasking&&(g=i.computeMask(c,l));const y=co(s),O=Array.isArray(y)?y:[y];for(let e=0;e<O.length;++e){p.hasKey(O[e])||p.add(O[e],b[e],Array.isArray(g)?g[0]:g);const t=o.indexOf(O[e].name);-1!==t&&(u[t]=b[e])}a||Object(x.dispose)(f)}return p.disposeMasks(),s?u:u[0]}function oo(e){const t={};for(const n in e)t[n]=e[n].size;return t}function uo(e,t){const n=new Set,r=[],a={};for(const e of t.names())n.add(e);const s=[],i=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(const t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:r,recipientMap:a}}function co(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class lo extends ui{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=qs(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],wa(this.inputs).length!==this.inputs.length)throw new ua(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);wa(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;ha(0===n,"input layer has >1 nodes"),ha(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof li))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},a={},s={},i=[],o=(e,t,n,r,a,u)=>{null!=r&&null!=a&&null!=u||(r=e.sourceLayer,a=e.nodeIndex,u=e.tensorIndex);const c=r.inboundNodes[a];if(-1!==n.indexOf(c))throw new oa(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(c))return;this.containerNodes.add(lo.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(c)&&n.push(c);const l=c.inboundLayers.length;for(let e=0;e<l;e++){const r=c.inputTensors[e],a=c.inboundLayers[e],s=c.nodeIndices[e],i=c.tensorIndices[e];o(r,t,n,a,s,i)}for(t.push(c);n.indexOf(c)>=0;)n.splice(n.indexOf(c),1);i.push(c)},u=[],c=[];for(const e of this.outputs)o(e,u,c);const l=i.slice().reverse();for(const e of l){n[e.id]=e,e.id in t||(t[e.id]=0);let s=t[e.id];const i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];s=Math.max(s,i),r[e.outboundLayer.id]=s,a[e.outboundLayer.id]=e.outboundLayer,t[e.id]=s;for(let r=0;r<e.inboundLayers.length;r++){const a=e.inboundLayers[r],i=e.nodeIndices[r],o=a.inboundNodes[i],u=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(s+1,u),n[o.id]=o}}const d={};for(const e in t){const r=t[e];r in d||(d[r]=[]),d[r].push(n[e])}const h={};for(const e in r){const t=r[e];t in h||(h[t]=[]),h[t].push(a[e])}let p=Object.keys(h).map((e=>parseInt(e,10))).sort(va);this.layers=[];for(const e of p){const t=h[e];t.sort(((e,t)=>{const n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof lo&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=h,p=Object.keys(d).map((e=>parseInt(e,10))).sort(va);const f=this.inputs.slice(),m=[];for(const e of p)for(const t of d[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new oa(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=d;const b=this.layers.map((e=>e.name));for(const e of b){const t=b.filter((t=>t===e)).length;if(1!==t)throw new oa(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(b))}this.outboundNodes=[],this.inboundNodes=[],new ii({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new ua("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new ua(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const a=[];for(const r in e){let s=r;if(null==n[r]){const e=r.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])a.push([n[s],e[r]]);else if(t)throw new ua(`Provided weight data has no target variable: ${r}`);delete n[s]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new ua(`${e.length} of ${r} weights are not set: ${e}`)}ni(a)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers 3.3.0",t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=no(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Object(x.tidy)((()=>{e=ma(e);const n=new ro;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return io(this.outputs,n,t)}))}computeMask(e,t){return Object(x.tidy)((()=>{let n;return e=ma(e),n=null==t?da(null,e.length):ma(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=Xs(e);if(t.length!==this.inputLayers.length)throw new ua(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],a=t[e];n[r.name+"_0_0"]=a}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(va);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const a=e.inboundLayers[t],s=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${a.name}_${s}_${i}`];r.push(o)}const a=Xs(t.computeOutputShape(fa(r))),s=t.inboundNodes.indexOf(e);for(let e=0;e<a.length;e++){n[`${t.name}_${s}_${e}`]=a[e]}}}const a=[],s=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],a=`${t.name}_${n}_${r}`;s.push(a)}for(let e=0;e<s.length;e++){const t=s[e];ha(t in n),a.push(n[t])}return fa(a)}runInternalGraph(e,t){null==t&&(t=da(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const a=this.inputs[r],s=e[r],i=t[r];n[a.id]=[s,i]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(va);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,s=new Array;for(const e of r)e.id in n&&s.push(n[e.id]);if(s.length===r.length){let r,i,o,u,c={};if(null!=e.callArgs&&(c=e.callArgs),1===s.length){const[e,n]=s[0];null==c.mask&&(c.mask=n),o=ma(t.call(e,c)),u=ma(t.computeMask(e,n)),r=[e],i=[n]}else r=s.map((e=>e[0])),i=s.map((e=>e[1])),null==c.mask&&(c.mask=i),o=ma(t.call(r,c)),u=ma(t.computeMask(r,i));if(t.activityRegularizer)throw new ca("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){const t=a[e],r=o[e],s=u[e];n[t.id]=[r,s]}}}}const a=[],s=[],i=[];for(const e of this.outputs){ha(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];i.push(t.shape),a.push(t),s.push(r)}return[a,s,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof lo?1:0;for(let r=0;r<e.inboundNodes.length;r++){const a=lo.nodeKey(e,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new ua(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new ua("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new ua(`No such layer: ${e}`)}calculateLosses(){return Object(x.tidy)((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=lo.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),a=e.getConfig(),s=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],a=lo.nodeKey(e,n);let i={};if(this.containerNodes.has(a)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const a=r.inboundLayers[n],s=r.nodeIndices[n],o=r.tensorIndices[n];let u=t[lo.nodeKey(a,s)];null==u&&(u=0),e.push([a.name,u,o,i])}s.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=a,i.inboundNodes=s,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],a=this.inputLayersNodeIndices[e],s=lo.nodeKey(n,a);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;const a=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],s=lo.nodeKey(n,r);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];a.push([n.name,i,o])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){const a={},s={};function i(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function o(e,t){const n=[];let r;for(const s of t){const o=s[0],u=s[1],c=s[2];if(r=null==s[3]?{}:s[3],!(o in a))return void i(e,t);const l=a[o];if(l.inboundNodes.length<=u)return void i(e,t);const d=l.inboundNodes[u];n.push(d.outputTensors[c])}n.length>0&&e.apply(fa(n),r)}function u(e){const n=e.name,s=wi(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(r),a[n]=s;e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new ua(`Corrupted configuration, expected array for nodeData: ${e}`);i(s,e)}))}const c=t.name,l=t.layers;for(const e of l)u(e);for(;!Ia(s);)for(const e of l){const t=a[e.name];if(t.name in s){const e=s[t.name];delete s[t.name];for(const n of e)o(t,n)}}const d=[],h=[],p=t.inputLayers;for(const e of p){const t=e[0],n=e[1],r=e[2];ha(t in a);const s=a[t].inboundNodes[n].outputTensors;d.push(s[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];ha(t in a);const s=a[t].inboundNodes[n].outputTensors;h.push(s[r])}return new e({inputs:d,outputs:h,name:c})}get stateful(){if(this._stateful)throw new ua("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Object(x.tidy)((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function ho(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function po(e,t){return ho(e,t,"classWeight")}async function fo(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Object(x.tidy)((()=>{if(1===e.shape.length)return e.clone();if(2===e.shape.length){if(e.shape[1]>1){const t=1;return e.argMax(t)}if(1===e.shape[1])return e.reshape([e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());Object(x.dispose)(t);const a=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),Object(x.tensor1d)(a,"float32")}return null}function mo(e,t){return Object(x.mul)(e,t)}function bo(e,t){let n,r;const a=t;n=a.xs,r=a.ys,x.util.assert(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const s=go("input",e.inputNames,n),i=go("output",e.outputNames,r),o=s[0].shape[0];x.util.assert(s.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),x.util.assert(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<s.length;t++)x.util.assert(s[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${s[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)x.util.assert(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:s,ys:i}}function go(e,t,n){if(n instanceof x.Tensor)return[n];if(Array.isArray(n))return x.util.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const a of t){if(null==n[a])throw new ua(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}async function yo(e,t,n){const r=null!=n.batchesPerEpoch;if(x.util.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),x.util.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),x.util.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),x.util.assert(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),x.util.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const a=null!=n.validationData;let s,i;if(a)if(xo(n.validationData))x.util.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new ca("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);s=e.xs,i=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let c;c=a?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const l=Oi(n.callbacks,n.yieldEvery),d=null==n.verbose?1:n.verbose,{callbackList:h,history:p}=vi(l,d,n.epochs,null,null,function(e,t){let n=null;null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size);return n}(t,n),null,a,c);h.setModel(e),e.history=p,await h.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const c={};await h.onEpochBegin(f);let l=0,d=0;for(r||(m=await t.iterator());!r||l<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${l} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:a}=bo(e,t.value),s={};s.batch=d,s.size=r[0].shape[0],await h.onBatchBegin(d,s);const i=[];if(null!=n.classWeight){const t=po(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await fo(a[e],null,t[e]))}const c=r.concat(a).concat(i),p=o(c);x.dispose(c);for(let e=0;e<u.length;++e){const t=u[e],n=p[e];s[t]=n,x.keep(n)}await h.onBatchEnd(d,s),pi(s),d++,l++}if(r?l>=n.batchesPerEpoch:t.done){if(a){let t;t=xo(n.validationData)?ma(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):ma(e.evaluate(s,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)c[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await h.onEpochEnd(f,c),f++,e.stopTraining_)break}return await h.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function xo(e){return"function"==typeof e.iterator}function Oo(e){x.util.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function ko(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>us(e,t,n-t))):us(e,t,n-t)}function vo(e,t){return x.tidy((()=>null==e?null:Array.isArray(e)?e.map((e=>vo(e,t))):bs(e,"int32"===t.dtype?t:t.toInt())))}function wo(e,t){const n=[];let r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}async function Io(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,s,i,o,u,c,l;e.isTraining=!0;try{const d=null==r.batchSize?32:r.batchSize;Oo(d);const h=!1,p=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,h,d);a=p[0],s=p[1],l=p[2];let f,m=!1;if(null!=r.validationData&&r.validationData.length>0){if(m=!0,2!==r.validationData.length)throw 3===r.validationData.length?new ca("validationData including sample weights is not supported yet."):new ua(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);i=r.validationData[0],o=r.validationData[1];const t=!0,n=await e.standardizeUserData(i,o,null,null,t,d);u=n[0],c=n[1],f=u.concat(c)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){m=!0;const e=Math.floor(a[0].shape[0]*(1-r.validationSplit)),t=a[0].shape[0];u=ko(a,e,t),a=ko(a,0,e),c=ko(s,e,t),s=ko(s,0,e),f=u.concat(c)}else null!=r.validationSteps&&(m=!0);const b=a.concat(s).concat(l);e.checkTrainableWeightsConsistency();const g=e.makeTrainFunction(),y=e.getDedupedMetricsNames();let O,k;m?(e.makeTestFunction(),O=e.testFunction,k=y.slice().concat(y.map((e=>"val_"+e)))):(O=null,f=[],k=y.slice());const v=Oi(r.callbacks,r.yieldEvery);return await async function(e,t,n,r,a,s,i,o,u,c,l,d,h,p,f){null==a&&(a=32),null==s&&(s=1),null==l&&(l=!0),null==h&&(h=0);let m=!1;if(null!=u&&null!=c&&(m=!0),null!=f&&(m=!0,null==p))throw new ua("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const b=e.checkNumSamples(n,a,p,"steps_per_epoch");let g;null!=b&&(g=ss(0,b)),null==i&&(i=1);const{callbackList:y,history:O}=vi(o,i,s,h,b,p,a,m,d);y.setModel(e),e.history=O,await y.onTrainBegin(),e.stopTraining_=!1;for(let i=h;i<s;++i){await y.onEpochBegin(i);const s={};if(null!=p)throw new ca("stepsPerEpoch mode is not implemented yet.");{if("batch"===l)throw new ca("batch shuffling is not implemneted yet");l&&x.util.shuffle(g);const i=Object(x.tensor1d)(g),o=wo(b,a);for(let l=0;l<o.length;++l){const d={};if(await y.onBatchBegin(l,d),x.tidy((()=>{const h=o[l][0],p=o[l][1],f=us(i,h,p-h);d.batch=l,d.size=p-h;const b=vo(n,f),g=t(b);for(let e=0;e<r.length;++e){const t=r[e],n=g[e];d[t]=n,x.keep(n)}if(l===o.length-1&&m){const t=e.testLoop(u,c,a);for(let e=0;e<r.length;++e){const n=r[e],a=t[e];x.keep(a),s["val_"+n]=a}}})),await y.onBatchEnd(l,d),pi(d),e.stopTraining_)break}i.dispose()}if(await y.onEpochEnd(i,s),e.stopTraining_)break}return await y.onTrainEnd(),await e.history.syncData(),e.history}(e,g,b,y,d,r.epochs,r.verbose,v,O,f,r.shuffle,k,r.initialEpoch,null,null)}finally{e.isTraining=!1,No(a,t),No(s,n),No(u,i),No(c,o),null!=l&&x.dispose(l)}}function jo(e){const t=[];e instanceof x.Tensor&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(os(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function No(e,t){if(null==e)return;const n=[];if(t instanceof x.Tensor)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof x.Tensor)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const a=e[t];-1===n.indexOf(a.id)&&r.push(a)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function So(e){return Array.isArray(e)}function To(e){return!function(e){return e instanceof x.Tensor}(e)&&!So(e)}function Co(e,t,n,r=!0,a=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(So(e)&&e.length>0)t=!0;else if(To(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new ua(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let s;if(To(e)){e=e,s=[];for(const n of t){if(null==e[n])throw new ua(`No data provided for "${n}". Need data for each key in: ${t}`);s.push(e[n])}}else if(So(e)){if((e=e).length!==t.length)throw new ua(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(e=e,t.length>1)throw new ua(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=jo(s),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=s[e];if(i.shape.length!==n[e].length)throw new ua(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;const o=i.shape[s],u=n[e][s];if(null!=u&&u>=0&&o!==u)throw new ua(`Error when checking ${a}: expected ${t[e]} to have shape [${n[e]}], but got array with shape [${i.shape}].`)}}return s}function $o(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new ua(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new ua(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=s[e];if(i.shape.length!==n[e].length)throw new ua(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;const o=i.shape[s],u=n[e][s];if(null!=u&&u!==o)throw new ua(`Error when checking ${a}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class Ao extends lo{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new ua("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");Yi(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>x.train.adagrad(.01),Adadelta:()=>x.train.adadelta(1,.95,sa()),Adam:()=>x.train.adam(.001,.9,.999,sa()),Adamax:()=>x.train.adamax(.002,.9,.999,sa(),0),RMSProp:()=>x.train.rmsprop(.001,.9,0,sa()),SGD:()=>x.train.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new ua(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof x.Optimizer))throw new ua("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new ua(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>_i(e)))}else{const n=_i(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new ua(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(_i(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ya("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Ya("metric",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;(t=>{let n,r,s;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let a;1===t[t.length-1]||this.lossFunctions[e]===Ai?-1!==["accuracy","acc"].indexOf(i)?r=Di:-1!==["crossentropy","ce"].indexOf(i)&&(r=Pi):this.lossFunctions[e]===$i?-1!==["accuracy","acc"].indexOf(i)?r=Bi:-1!==["crossentropy","ce"].indexOf(i)&&(r=Vi):-1!==["accuracy","acc"].indexOf(i)?r=Mi:-1!==["crossentropy","ce"].indexOf(i)&&(r=Wi),-1!==["accuracy","acc"].indexOf(i)?a="acc":-1!==["crossentropy","ce"].indexOf(i)&&(a="ce"),s=r,n=""+a}else{const e=Gi(i);s=e,n=""+Hi(i)}let t;Ya(n,(()=>{t=s})),a(e,n,t)}})(r[e])}})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;Oo(r);const a=this.standardizeUserDataXY(e,t,!0,r);try{const s=a[0].concat(a[1]);this.makeTestFunction();const i=this.testFunction;return fa(this.testLoop(i,s,r,n.verbose,n.steps))}finally{No(a[0],e),No(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,a=e.testFunction;let s=[];if(n.verbose>0)throw new ca("Verbose mode is not implemented yet.");x.util.assert(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,u=0;for(;!r||u<n.batches;){const t=await i.next();if(s=x.tidy((()=>{if(t.value){const{xs:n,ys:r}=bo(e,t.value),i=n.concat(r),c=x.tidy((()=>a(i)));if(x.dispose(i),0===u)for(let e=0;e<c.length;++e)s.push(Object(x.scalar)(0));const l=i[0].shape[0];for(let e=0;e<c.length;++e){const t=c[e],n=s[e];s[e]=x.tidy((()=>x.add(s[e],x.mul(l,t)))),u>0&&x.dispose(n)}x.dispose(c),o+=l,++u}return s})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<s.length;++e){const t=s[e];s[e]=x.div(s[e],o),x.dispose(t)}return fa(s)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new ua(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new ua(`Either the input data should have a defined shape, or ${r} shoud be specified.`);a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new ua("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new ro;if(e instanceof x.Tensor&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new ua(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new ua(`No value is provided for the model's input ${t.name}`);s.add(t,n)}const i=io(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){const t=da(null,e.length);let n=e.length;for(const r of this.layers){const a=Array.isArray(r.output)?r.output:[r.output],s=a.map((e=>e.name));for(let r=0;r<e.length;++r){const i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new ua(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return x.tidy((()=>{const r=this.checkNumSamples(e);if(n)throw new ca("Verbose predictLoop() is not implemented yet.");const a=wo(r,t),s=this.outputs.map((e=>[]));for(let t=0;t<a.length;++t){x.tidy((()=>{const n=a[t][0],r=a[t][1],s=ko(e,n,r),i=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)i.push({key:this.inputs[e],value:s[e]});else i.push({key:this.inputs[0],value:s});const o=new ro(i);return io(this.outputs,o)})).forEach(((e,t)=>s[t].push(e)))}return fa(s.map((e=>x.concat(e,0))))}))}predict(e,t={}){const n=jo(e);$o(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return Oo(r),this.predictLoop(n,r)}finally{No(n,e)}}predictOnBatch(e){$o(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new oa("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===$i?a.push(t.slice(0,t.length-1).concat([1])):a.push(t)}if(function(e,t,n){const r=wa(e.map((e=>e.shape[0])));r.sort();const a=wa(t.map((e=>e.shape[0])));if(a.sort(),r.length>1)throw new ua(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(a.length>1)throw new ua(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&a.length>0&&!x.util.arraysEqual(r,a))throw new ua(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${a[0]} target sample(s).`)}(e=Co(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Co(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const r=[ji,Ai,Ci];for(let a=0;a<e.length;++a){const s=e[a],i=t[a],o=n[a];if(null!=i){if(i===Ci&&1===s.shape[s.shape.length-1])throw new ua(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],a=t[n];if(null!=a&&r!==a)throw new ua(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new ua(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){const[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=po(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await fo(o[t],null,e[t]))}return[i,o,u]}testLoop(e,t,n,r=0,a){return x.tidy((()=>{const s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new ca("Verbose mode is not implemented yet.");if(null!=a)throw new ca("steps mode in testLoop() is not implemented yet");{const r=wo(s,n),a=Object(x.tensor1d)(ss(0,s));for(let n=0;n<r.length;++n){const s=r[n][0],o=r[n][1],u=us(a,s,o-s),c=vo(t,u),l=e(c);if(0===n)for(let e=0;e<l.length;++e)i.push(Object(x.scalar)(0));for(let e=0;e<l.length;++e){const t=l[e];i[e]=x.add(i[e],x.mul(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=x.div(i[e],s)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let a=r;if(pa(e,r)>1){a+=`_${pa(e.slice(0,n),r)}`}t.push(a)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new ro(e),o=io(this.outputs,i,{training:!0});let u;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=a[e]&&(n=mo(n,a[e]));const s=x.mean(n);t.push(s),u=0===e?n:x.add(u,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],a=this.metricsTensors[e][1];n=x.mean(t(r[a],o[a]))}x.keep(n),s.push(n)}return u=x.mean(u),this.calculateLosses().forEach((e=>{u=x.add(u,e)})),u}),!0,i)].concat(s)}}makeTestFunction(){this.testFunction=e=>x.tidy((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});const i=new ro(s),o=io(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],s=x.mean(r(a[e],o[e]));n=0===e?s:x.add(n,s),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],s=x.mean(n(a[r],o[r]));t.push(s)}return t}))}async fit(e,t,n={}){return Io(this,e,t,n)}async fitDataset(e,t){return yo(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(const e of s){const t=await e.data();i.push(t[0])}return x.dispose(s),fa(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:a[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=x.memory().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-x.memory().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=ba(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>ba(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=ba(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[ba(Hi(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>ba(Hi(e))));{const e={};for(const t in this.metrics)e[t]=ba(Hi(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=wi(to(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=ga(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>ga(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=ga(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>ga(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=ga(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=x.io.getSaveHandlers(e);if(0===t.length)throw new ua(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new ua(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new ua("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await x.io.encodeWeights(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v3.3.0",convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:a}=await x.io.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...a),n.data=x.io.concatenateArrayBuffers([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Ki(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){Ki(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Ao.className="Model",x.serialization.registerClass(Ao);class Eo extends Ao{}Eo.className="Functional",x.serialization.registerClass(Eo);class Ro extends Ao{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:qs("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new ua(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Ro||e instanceof Ao;let n;if(t){if(n=e,1!==n.outputs.length)throw new ua("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new ua("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new ua("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=di({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new ua(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new ua("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=ci(this.outputs[0])}this.inboundNodes=[],new ii({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:da(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Zs(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Ao({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new oa("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new oa("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new oa("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new oa("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let a,s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new ua("Legacy serialization format not supported yet.");a=t}else x.util.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),a=t.layers,delete t.layers,s=t;const i=new e(s);if(!(i instanceof Ro))throw new ca(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of a){const t=wi(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new ua("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new ua("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}Ro.className="Sequential",x.serialization.registerClass(Ro);class Fo extends x.serialization.Serializable{getConfig(){return{}}}class _o extends Fo{apply(e,t=1){return function(e,t=1){if(1!==t)throw new ca(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return x.elu(e)}(e,t)}}_o.className="elu",x.serialization.registerClass(_o);class Do extends Fo{apply(e){return x.selu(e)}}Do.className="selu",x.serialization.registerClass(Do);class Mo extends Fo{apply(e){return x.relu(e)}}Mo.className="relu",x.serialization.registerClass(Mo);class zo extends Fo{apply(e){return Object(x.tidy)((()=>x.minimum(6,x.relu(e))))}}zo.className="relu6",x.serialization.registerClass(zo);class Lo extends Fo{apply(e){return e}}Lo.className="linear",x.serialization.registerClass(Lo);class Po extends Fo{apply(e){return x.sigmoid(e)}}Po.className="sigmoid",x.serialization.registerClass(Po);class Bo extends Fo{apply(e){return function(e){return Object(x.tidy)((()=>{const t=x.add(.5,x.mul(.2,e));return x.clipByValue(t,0,1)}))}(e)}}Bo.className="hardSigmoid",x.serialization.registerClass(Bo);class Wo extends Fo{apply(e){return x.softplus(e)}}Wo.className="softplus",x.serialization.registerClass(Wo);class Vo extends Fo{apply(e){return function(e){return Object(x.tidy)((()=>x.div(e,x.abs(e).add(1))))}(e)}}Vo.className="softsign",x.serialization.registerClass(Vo);class Uo extends Fo{apply(e){return x.tanh(e)}}Uo.className="tanh",x.serialization.registerClass(Uo);class Go extends Fo{apply(e,t=-1){return x.softmax(e,t)}}Go.className="softmax",x.serialization.registerClass(Go);class Ho extends Fo{apply(e,t=-1){return x.logSoftmax(e,t)}}Ho.className="logSoftmax",x.serialization.registerClass(Ho);class qo extends Fo{apply(e,t=1){return Object(x.tidy)((()=>x.sigmoid(e.mul(t)).mul(e)))}}function Ko(e){return e.getClassName()}function Xo(e,t={}){return ka(e,x.serialization.SerializationMap.getMap().classNameMap,t,"activation")}function Yo(e){if(null==e){const e={className:"linear",config:{}};return Xo(e)}if("string"==typeof e){const t={};return t.className=e,t.config={},Xo(t)}return e instanceof Fo?e:Xo(e)}function Zo(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}qo.className="swish",x.serialization.registerClass(qo);class Jo extends x.serialization.Serializable{}class Qo extends Jo{constructor(e){super(),Zo(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Object(x.tidy)((()=>{let t=Object(x.zeros)([1]);return this.hasL1&&(t=Object(x.add)(t,Object(x.sum)(x.mul(this.l1,Object(x.abs)(e))))),this.hasL2&&(t=Object(x.add)(t,Object(x.sum)(x.mul(this.l2,gs(e))))),t.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Qo.className="L1L2",x.serialization.registerClass(Qo);const eu={l1l2:"L1L2"};function tu(e){return xa(e)}function nu(e,t={}){return ka(e,x.serialization.SerializationMap.getMap().classNameMap,t,"regularizer")}function ru(e){if(null==e)return null;if("string"==typeof e){return nu({className:e in eu?eu[e]:e,config:{}})}return e instanceof Jo?e:nu(e)}class au extends ui{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Ys(e);let n=Object(x.relu)(e);return null!=this.maxValue&&(n=Object(x.clipByValue)(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}au.className="ReLU",x.serialization.registerClass(au);class su extends ui{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Ys(e);return Object(x.leakyRelu)(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}su.className="LeakyReLU",x.serialization.registerClass(su);class iu extends ui{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Vs(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=ru(e.alphaRegularizer),this.alphaConstraint=La(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new ua(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Zs(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new ri({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Ys(e),Object(x.prelu)(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Ws(this.alphaInitializer),alphaRegularizer:tu(this.alphaRegularizer),alphaConstraint:Ma(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}iu.className="PReLU",x.serialization.registerClass(iu);class ou extends ui{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new ca(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Ys(e);return Object(x.elu)(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}ou.className="ELU",x.serialization.registerClass(ou);class uu extends ui{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Ys(e);return n.mul(is(n.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}uu.className="ThresholdedReLU",x.serialization.registerClass(uu);class cu extends ui{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Go).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=Ys(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function lu(e,t,n){if("number"==typeof e)return da(e,t);if(e.length!==t)throw new ua(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let a=0;a<t;++a){const s=e[a];if((r=s)!==parseInt(r.toString(),10))throw new ua(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${s}`)}return e;var r}function du(e,t,n,r,a=1){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*(a-1))+1,Math.floor((s+r-1)/r)}function hu(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+as([n-t,0]);else{if("same"!==r)throw new ua(`Unsupport padding mode: ${r}.`);e*=t}return e}function pu(e,t){return Object(x.tidy)((()=>(Ha(t),"channelsFirst"===t?x.transpose(e,[0,2,3,1]):e)))}function fu(e,t){return Object(x.tidy)((()=>(Ha(t),"channelsFirst"===t?x.transpose(e,[0,2,3,4,1]):e)))}function mu(e,t,n,r=1,a="valid",s,i=1){return Object(x.tidy)((()=>{if(null==s&&(s="channelsLast"),Ha(s),3!==e.shape.length)throw new ua(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new ua(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new ua(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===s&&(e=x.transpose(e,[0,2,1])),"causal"===a)throw new ca("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=x.conv1d(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=xs(o,n)),o}))}function bu(e,t,n,r=[1,1],a="valid",s,i,o=null){return Object(x.tidy)((()=>{if(null==s&&(s="channelsLast"),Ha(s),3!==e.rank&&4!==e.rank)throw new ua(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new ua(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=pu(e,s);if("causal"===a)throw new ca("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=x.fused.conv2d({x:u,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(u=x.transpose(u,[0,3,1,2])),u}))}function gu(e,t,n,r=[1,1,1],a="valid",s,i){return Object(x.tidy)((()=>{if(null==s&&(s="channelsLast"),Ha(s),4!==e.rank&&5!==e.rank)throw new ua(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new ua(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=fu(e,s);if("causal"===a)throw new ca("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=x.conv3d(o,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=xs(o,n)),"channelsFirst"===s&&(o=x.transpose(o,[0,4,1,2,3])),o}))}cu.className="Softmax",x.serialization.registerClass(cu);class yu extends ui{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",yu.verifyArgs(t),this.rank=e,Sa(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new ca(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=lu(t.kernelSize,e,"kernelSize"),this.strides=lu(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,qa(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Ha(this.dataFormat),this.activation=Yo(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Vs(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=La(t.biasConstraint),this.biasRegularizer=ru(t.biasRegularizer),this.activityRegularizer=ru(t.activityRegularizer),this.dilationRate=lu(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new ua(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new ua(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new ua(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(ha("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Na(e.kernelSize,"number",1,3))throw new ua(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Ko(this.activation),useBias:this.useBias,biasInitializer:Ws(this.biasInitializer),biasRegularizer:tu(this.biasRegularizer),activityRegularizer:tu(this.activityRegularizer),biasConstraint:Ma(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class xu extends yu{constructor(e,t){super(e,t),this.kernel=null,xu.verifyArgs(t),this.filters=t.filters,Sa(this.filters,"filters"),this.kernelInitializer=Vs(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=La(t.kernelConstraint),this.kernelRegularizer=ru(t.kernelRegularizer)}build(e){e=Zs(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ua(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Object(x.tidy)((()=>{let t;e=Ys(e);const n=null==this.bias?null:this.bias.read(),r=Ca(this.activation.getClassName());if(null!=r&&2===this.rank)t=bu(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=mu(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=bu(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new ca("convolutions greater than 3D are not implemented yet.");t=gu(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Zs(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=du(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Ws(this.kernelInitializer),kernelRegularizer:tu(this.kernelRegularizer),kernelConstraint:Ma(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new ua(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Ou extends xu{constructor(e){super(2,e),Ou.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Na(e.kernelSize,"number",1,2))throw new ua(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Ou.className="Conv2D",x.serialization.registerClass(Ou);class ku extends xu{constructor(e){super(3,e),ku.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new ua(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}ku.className="Conv3D",x.serialization.registerClass(ku);class vu extends Ou{constructor(e){if(super(e),this.inputSpec=[new ri({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new ua(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=Zs(e)).length)throw new ua("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ua("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new ri({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return x.tidy((()=>{let t=Ys(e);if(4!==t.shape.length)throw new ua(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,s;"channelsFirst"===this.dataFormat?(a=2,s=3):(a=1,s=2);const i=n[a],o=n[s],u=this.kernelSize[0],c=this.kernelSize[1],l=this.strides[0],d=this.strides[1],h=[r,hu(i,l,u,this.padding),hu(o,d,c,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=x.transpose(t,[0,2,3,1]));let p=x.conv2dTranspose(t,this.kernel.read(),h,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=x.transpose(p,[0,3,1,2])),null!=this.bias&&(p=xs(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=Zs(e)).slice();let n,r,a;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);const s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=hu(t[r],o,s,this.padding),t[a]=hu(t[a],u,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}vu.className="Conv2DTranspose",x.serialization.registerClass(vu);class wu extends xu{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new ua("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new ua("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new ua(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Vs(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=ru(t.depthwiseRegularizer),this.depthwiseConstraint=La(t.depthwiseConstraint),this.pointwiseInitializer=Vs(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=ru(t.pointwiseRegularizer),this.pointwiseConstraint=La(t.pointwiseConstraint)}build(e){if((e=Zs(e)).length<this.rank+2)throw new ua(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new ua(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let e=0;e<this.rank;++e)a.push(1);a.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new ri({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Object(x.tidy)((()=>{let t;if(e=Ys(e),1===this.rank)throw new ca("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=x.transpose(e,[0,2,3,1])),t=x.separableConv2d(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=xs(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=x.transpose(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Ws(this.depthwiseInitializer),e.pointwiseInitializer=Ws(this.pointwiseInitializer),e.depthwiseRegularizer=tu(this.depthwiseRegularizer),e.pointwiseRegularizer=tu(this.pointwiseRegularizer),e.depthwiseConstraint=Ma(this.depthwiseConstraint),e.pointwiseConstraint=Ma(this.pointwiseConstraint),e}}wu.className="SeparableConv";class Iu extends wu{constructor(e){super(2,e)}}Iu.className="SeparableConv2D",x.serialization.registerClass(Iu);class ju extends xu{constructor(e){super(1,e),ju.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Na(e.kernelSize,"number",1,1))throw new ua(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}ju.className="Conv1D",x.serialization.registerClass(ju);class Nu extends ui{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Object(x.tidy)((()=>{if(e=Ys(e),"channelsLast"===this.dataFormat){const t=ls(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return ls(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=ls(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return ls(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Nu.className="Cropping2D",x.serialization.registerClass(Nu);class Su extends ui{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ha(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,ja(Ba,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return x.tidy((()=>{let t=Ys(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=x.transpose(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r]);return x.transpose(a,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Su.className="UpSampling2D",x.serialization.registerClass(Su);class Tu extends yu{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Vs(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=La(e.depthwiseConstraint),this.depthwiseRegularizer=ru(e.depthwiseRegularizer)}build(e){if((e=Zs(e)).length<4)throw new ua(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new ua(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Object(x.tidy)((()=>{let t=function(e,t,n=[1,1],r="valid",a,s){return Object(x.tidy)((()=>{null==a&&(a="channelsLast"),Ha(a);let i=pu(e,a);if(4!==e.rank)throw new ua(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new ua(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=x.depthwiseConv2d(i,t,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=x.transpose(i,[0,3,1,2])),i}))}(e=Ys(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=xs(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Zs(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=du(t,this.kernelSize[0],this.padding,this.strides[0]),s=du(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Ws(this.depthwiseInitializer),e.depthwiseRegularizer=tu(this.depthwiseRegularizer),e.depthwiseConstraint=Ma(this.depthwiseRegularizer),e}}function Cu(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new ua("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function $u(e,t,n,r=!1,a,s,i=!1,o=!1){return x.tidy((()=>{const u=t.shape.length;if(u<3)throw new ua(`Input should be at least 3D, but is ${u}D.`);const c=[1,0].concat(ss(2,u));if(t=x.transpose(t,c),null!=s)throw new ca("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&((a=a.asType("bool").asType("float32")).rank===u-1&&(a=x.expandDims(a,-1)),a=x.transpose(a,c)),r&&(t=x.reverse(t,0),null!=a&&(a=x.reverse(a,0)));const l=[];let d,h=n;const p=t.shape[0],f=x.unstack(t);let m,b;null!=a&&(m=x.unstack(a));for(let t=0;t<p;++t){const n=f[t],r=x.tidy((()=>e(n,h)));if(null==a)d=r[0],h=r[1];else{const e=x.tidy((()=>{const e=m[t],n=x.onesLike(e).sub(e);return{output:r[0].mul(e).add(h[0].mul(n)),newStates:h.map(((t,a)=>r[1][a].mul(e).add(t.mul(n))))}}));d=e.output,h=e.newStates}o&&l.push(d)}if(o){const e=1;b=x.stack(l,e)}return[d,b,h]}))}Tu.className="DepthwiseConv2D",x.serialization.registerClass(Tu);class Au extends ui{constructor(e){let t;if(super(e),null==e.cell)throw new ua("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Lu({cells:e.cell}):e.cell,null==t.stateSize)throw new ua("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new ri({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(null==this.states_){return ss(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null))}return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Ks(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return x.tidy((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new ca("Constants support is not implemented in RNN yet.");Ks(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new ri({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let a;if(this.cell.build(r),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!x.util.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),a))throw new ua(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map((e=>new ri({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){Object(x.tidy)((()=>{if(!this.stateful)throw new ia("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new ua("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>x.zeros([n,e]))):this.states_=[x.zeros([n,this.cell.stateSize])];else if(null==e)x.dispose(this.states_),null!=this.keptStates&&(x.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>x.zeros([n,e]))):this.states_[0]=x.zeros([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ua(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):x.dispose(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,a];if(!x.util.arraysEqual(r.shape,s))throw new ua(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>x.keep(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=Cu(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new ri({shape:e.shape}));i=i.concat(this.stateSpec)}null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length);if(s[0]instanceof ai){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return Object(x.tidy)((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let a=null==t?null:t.initialState;e=Ys(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new ua(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=$u(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],c=o[1],l=o[2];this.stateful&&this.resetStates(l,r);const d=this.returnSequences?c:u;return this.returnState?[d].concat(l):d}))}getInitialState(e){return Object(x.tidy)((()=>{let t=x.zeros(e.shape);return t=x.sum(t,[1,2]),t=os(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?ps(t,[1,e]):t)):this.cell.stateSize>1?[ps(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Au.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=wi(t.cell,n);return new e(Object.assign(t,{cell:r}))}}Au.className="RNN",x.serialization.registerClass(Au);class Eu extends ui{}class Ru extends Eu{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Sa(this.units,"units"),this.activation=Yo(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Vs(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Vs(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Vs(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ru(e.kernelRegularizer),this.recurrentRegularizer=ru(e.recurrentRegularizer),this.biasRegularizer=ru(e.biasRegularizer),this.kernelConstraint=La(e.kernelConstraint),this.recurrentConstraint=La(e.recurrentConstraint),this.biasConstraint=La(e.biasConstraint),this.dropout=rs([1,as([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=rs([1,as([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Zs(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Object(x.tidy)((()=>{if(2!==(e=e).length)throw new ua(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Pu({ones:()=>x.onesLike(e),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Pu({ones:()=>x.onesLike(n),rate:this.recurrentDropout,training:r}));const s=this.dropoutMask,i=this.recurrentDropoutMask;a=ms(null!=s?x.mul(e,s):e,this.kernel.read()),null!=this.bias&&(a=xs(a,this.bias.read())),null!=i&&(n=x.mul(n,i));let o=x.add(a,ms(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Ko(this.activation),useBias:this.useBias,kernelInitializer:Ws(this.kernelInitializer),recurrentInitializer:Ws(this.recurrentInitializer),biasInitializer:Ws(this.biasInitializer),kernelRegularizer:tu(this.kernelRegularizer),recurrentRegularizer:tu(this.recurrentRegularizer),biasRegularizer:tu(this.biasRegularizer),activityRegularizer:tu(this.activityRegularizer),kernelConstraint:Ma(this.kernelConstraint),recurrentConstraint:Ma(this.recurrentConstraint),biasConstraint:Ma(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}Ru.className="SimpleRNNCell",x.serialization.registerClass(Ru);class Fu extends Au{constructor(e){e.cell=new Ru(e),super(e)}call(e,t){return Object(x.tidy)((()=>{null!=this.cell.dropoutMask&&(x.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(x.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return new e(t)}}Fu.className="SimpleRNN",x.serialization.registerClass(Fu);class _u extends Eu{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new ua("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Sa(this.units,"units"),this.activation=Yo(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Yo(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Vs(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Vs(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Vs(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ru(e.kernelRegularizer),this.recurrentRegularizer=ru(e.recurrentRegularizer),this.biasRegularizer=ru(e.biasRegularizer),this.kernelConstraint=La(e.kernelConstraint),this.recurrentConstraint=La(e.recurrentConstraint),this.biasConstraint=La(e.biasConstraint),this.dropout=rs([1,as([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=rs([1,as([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Zs(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Object(x.tidy)((()=>{if(2!==(e=e).length)throw new ua(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Pu({ones:()=>x.onesLike(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Pu({ones:()=>x.onesLike(r),rate:this.recurrentDropout,training:n,count:3}));const a=this.dropoutMask,s=this.recurrentDropoutMask;let i,o,u;0<this.dropout&&this.dropout<1&&(e=x.mul(e,a[0]));let c=ms(e,this.kernel.read());this.useBias&&(c=xs(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=x.mul(r,s[0]));const l=this.recurrentKernel.read(),[d,h]=x.split(l,[2*this.units,this.units],l.rank-1),p=ms(r,d),[f,m,b]=x.split(c,3,c.rank-1),[g,y]=x.split(p,2,p.rank-1);i=this.recurrentActivation.apply(x.add(f,g)),o=this.recurrentActivation.apply(x.add(m,y));const O=ms(x.mul(o,r),h);u=this.activation.apply(x.add(b,O));const k=x.add(x.mul(i,r),x.mul(x.add(1,x.neg(i)),u));return[k,k]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Ko(this.activation),recurrentActivation:Ko(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ws(this.kernelInitializer),recurrentInitializer:Ws(this.recurrentInitializer),biasInitializer:Ws(this.biasInitializer),kernelRegularizer:tu(this.kernelRegularizer),recurrentRegularizer:tu(this.recurrentRegularizer),biasRegularizer:tu(this.biasRegularizer),activityRegularizer:tu(this.activityRegularizer),kernelConstraint:Ma(this.kernelConstraint),recurrentConstraint:Ma(this.recurrentConstraint),biasConstraint:Ma(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}_u.className="GRUCell",x.serialization.registerClass(_u);class Du extends Au{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new _u(e),super(e)}call(e,t){return Object(x.tidy)((()=>{null!=this.cell.dropoutMask&&(x.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(x.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Du.className="GRU",x.serialization.registerClass(Du);class Mu extends Eu{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Sa(this.units,"units"),this.activation=Yo(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Yo(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Vs(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Vs(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Vs(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=ru(e.kernelRegularizer),this.recurrentRegularizer=ru(e.recurrentRegularizer),this.biasRegularizer=ru(e.biasRegularizer),this.kernelConstraint=La(e.kernelConstraint),this.recurrentConstraint=La(e.recurrentConstraint),this.biasConstraint=La(e.biasConstraint),this.dropout=rs([1,as([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=rs([1,as([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Zs(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends Is{apply(t,r){const a=e.apply([n]),s=(new Ns).apply([n]),i=e.apply([2*n]);return hs(hs(a,s),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Object(x.tidy)((()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new ua(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Pu({ones:()=>x.onesLike(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Pu({ones:()=>x.onesLike(r),rate:this.recurrentDropout,training:n,count:4}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,c,l;0<this.dropout&&this.dropout<1&&(e=x.mul(e,s[0]));let d=ms(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=x.mul(r,i[0])),d=x.add(d,ms(r,this.recurrentKernel.read())),this.useBias&&(d=xs(d,this.bias.read()));const[h,p,f,m]=x.split(d,4,d.rank-1);o=this.recurrentActivation.apply(h),u=this.recurrentActivation.apply(p),c=x.add(x.mul(u,a),x.mul(o,this.activation.apply(f))),l=this.recurrentActivation.apply(m);const b=x.mul(l,this.activation.apply(c));return[b,b,c]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Ko(this.activation),recurrentActivation:Ko(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Ws(this.kernelInitializer),recurrentInitializer:Ws(this.recurrentInitializer),biasInitializer:Ws(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:tu(this.kernelRegularizer),recurrentRegularizer:tu(this.recurrentRegularizer),biasRegularizer:tu(this.biasRegularizer),activityRegularizer:tu(this.activityRegularizer),kernelConstraint:Ma(this.kernelConstraint),recurrentConstraint:Ma(this.recurrentConstraint),biasConstraint:Ma(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}Mu.className="LSTMCell",x.serialization.registerClass(Mu);class zu extends Au{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Mu(e),super(e)}call(e,t){return Object(x.tidy)((()=>{null!=this.cell.dropoutMask&&(x.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(x.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}zu.className="LSTM",x.serialization.registerClass(zu);class Lu extends Eu{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Object(x.tidy)((()=>{let n=(e=e).slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const a=[];let s;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],s=0===i?[e[0]].concat(n):[s[0]].concat(n),s=o.call(s,t),a.push(s.slice(1))}n=[];for(const e of a.slice().reverse())n.push(...e);return[s[0]].concat(n)}))}build(e){let t;Ks(e)&&(e=e[0]),e=e,this.cells.forEach(((n,r)=>{Ya(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(wi(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return ti(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}ni(t)}}function Pu(e){const{ones:t,rate:n,training:r=!1,count:a=1}=e,s=()=>Os(t(),n),i=()=>ks(s,t,r);if(!a||a<=1)return x.keep(i().clone());return Array(a).fill(void 0).map(i).map((e=>x.keep(e.clone())))}Lu.className="StackedRNNCells",x.serialization.registerClass(Lu);var Bu=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n};class Wu extends Au{constructor(e){if(e.unroll)throw new ca("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new ca("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new ri({ndim:5})]}call(e,t){return x.tidy((()=>{if(null!=this.cell.dropoutMask&&(x.dispose(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(x.dispose(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new ua("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return x.tidy((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)],s=x.zeros(a);return Array.isArray(t)?Array(t.length).fill(s):[s]}))}resetStates(e,t=!1){x.tidy((()=>{if(!this.stateful)throw new ia("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new ua("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>x.zeros(a))):this.states_=[x.zeros(a)];else if(null==e)x.dispose(this.states_),null!=this.keptStates&&(x.dispose(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>x.zeros(a))):this.states_[0]=x.zeros(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ua(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):x.dispose(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=a;if(!x.util.arraysEqual(n.shape,r))throw new ua(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>x.keep(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,u=e[o?3:2],c=e[o?4:3],l=du(u,r[0],a,s[0],i[0]),d=du(c,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,l,d]:[l,d,n]]}}Wu.className="ConvRNN2D";class Vu extends Mu{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,Sa(this.filters,"filters"),this.kernelSize=lu(n,2,"kernelSize"),this.kernelSize.forEach((e=>Sa(e,"kernelSize"))),this.strides=lu(r||1,2,"strides"),this.strides.forEach((e=>Sa(e,"strides"))),this.padding=a||"valid",qa(this.padding),this.dataFormat=s||"channelsLast",Ha(this.dataFormat),this.dilationRate=lu(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>Sa(e,"dilationRate")))}build(e){var t;e=Zs(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new ua(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],a=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends Is{apply(e,t){return ds([n.apply([r]),x.ones([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return x.tidy((()=>{if(3!==e.length)throw new ua(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],a=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Pu({ones:()=>x.onesLike(r),rate:this.dropout,training:n,count:4}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?x.mul(t[n],e):e;let u=o(r,i,0),c=o(r,i,1),l=o(r,i,2),d=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Pu({ones:()=>x.onesLike(a),rate:this.recurrentDropout,training:n,count:4}));const h=this.recurrentDropoutMask;let p=o(a,h,0),f=o(a,h,1),m=o(a,h,2),b=o(a,h,3);const[g,y,O,k]=x.split(this.kernel.read(),4,3),[v,w,I,j]=this.useBias?x.split(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,g,v,this.padding),c=this.inputConv(c,y,w,this.padding),l=this.inputConv(l,O,I,this.padding),d=this.inputConv(d,k,j,this.padding);const[N,S,T,C]=x.split(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,N),f=this.recurrentConv(f,S),m=this.recurrentConv(m,T),b=this.recurrentConv(b,C);const $=this.recurrentActivation.apply(x.add(u,p)),A=this.recurrentActivation.apply(x.add(c,f)),E=x.add(x.mul(A,s),x.mul($,this.activation.apply(x.add(l,m)))),R=x.mul(this.recurrentActivation.apply(x.add(d,b)),this.activation.apply(E));return[R,R,E]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=Bu(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){const a=x.conv2d(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?xs(a,n,this.dataFormat):a}recurrentConv(e,t){return x.conv2d(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Vu.className="ConvLSTM2DCell",x.serialization.registerClass(Vu);class Uu extends Wu{constructor(e){const t=new Vu(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}Uu.className="ConvLSTM2D",x.serialization.registerClass(Uu);class Gu extends ui{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return Object(x.tidy)((()=>{this.invokeCallHook(e,t);const n=Ys(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return ks((()=>Os(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Gu.className="Dropout",x.serialization.registerClass(Gu);class Hu extends Gu{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}Hu.className="SpatialDropout1D",x.serialization.registerClass(Hu);class qu extends ui{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Sa(this.units,"units"),this.activation=Yo(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Vs(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Vs(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=La(e.kernelConstraint),this.biasConstraint=La(e.biasConstraint),this.kernelRegularizer=ru(e.kernelRegularizer),this.biasRegularizer=ru(e.biasRegularizer),this.activityRegularizer=ru(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Zs(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Zs(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Object(x.tidy)((()=>{this.invokeCallHook(e,t);const n=Ys(e),r=Ca(this.activation.getClassName());let a;return null!=r?a=ms(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=ms(n,this.kernel.read()),null!=this.bias&&(a=xs(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a}))}getConfig(){const e={units:this.units,activation:Ko(this.activation),useBias:this.useBias,kernelInitializer:Ws(this.kernelInitializer),biasInitializer:Ws(this.biasInitializer),kernelRegularizer:tu(this.kernelRegularizer),biasRegularizer:tu(this.biasRegularizer),activityRegularizer:tu(this.activityRegularizer),kernelConstraint:Ma(this.kernelConstraint),biasConstraint:Ma(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}qu.className="Dense",x.serialization.registerClass(qu);class Ku extends ui{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Zs(e);for(const t of e.slice(1))if(null==t)throw new ua(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],ts(e,1)]}call(e,t){return Object(x.tidy)((()=>{this.invokeCallHook(e,t);let n=Ys(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=n.transpose(e)}return function(e){if(e.rank<=1)throw new ua(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],ts(e.shape,1)];return e.reshape(t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Ku.className="Flatten",x.serialization.registerClass(Ku);class Xu extends ui{constructor(e){super(e),this.supportsMasking=!0,this.activation=Yo(e.activation)}call(e,t){return Object(x.tidy)((()=>{this.invokeCallHook(e,t);const n=Ys(e);return this.activation.apply(n)}))}getConfig(){const e={activation:Ko(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}Xu.className="Activation",x.serialization.registerClass(Xu);class Yu extends ui{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Object(x.tidy)((()=>{return e=Ys(e),t=e,n=this.n,Object(x.tidy)((()=>{if(2!==t.shape.length)throw new ua(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return ps(os(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}Yu.className="RepeatVector",x.serialization.registerClass(Yu);class Zu extends ui{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let a=1,s=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==s)throw new ua("Can only specifiy one unknown dimension.");s=e}else a*=t}const i=ts(e);if(null!==s){if(0===a||i%a!=0)throw new ua(n);r[s]=i/a}else if(i!==a)throw new ua(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Object(x.tidy)((()=>{this.invokeCallHook(e,t);const n=Ys(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(a)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Zu.className="Reshape",x.serialization.registerClass(Zu);class Ju extends ui{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=ss(1,e.dims.length+1);if(!x.util.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new ri({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Zs(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return Object(x.transpose)(Ys(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Ju.className="Permute",x.serialization.registerClass(Ju);class Qu extends ui{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Ys(e);return Object(x.any)(Object(x.notEqual)(n,this.maskValue),-1)}call(e,t){return Object(x.tidy)((()=>{this.invokeCallHook(e,t);const n=Ys(e),r=Object(x.any)(Object(x.notEqual)(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))}))}}Qu.className="Masking",x.serialization.registerClass(Qu);class ec extends ui{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(ma(e.inputLength))}this.inputDim=e.inputDim,Sa(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Sa(this.outputDim,"outputDim"),this.embeddingsInitializer=Vs(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=ru(e.embeddingsRegularizer),this.activityRegularizer=ru(e.activityRegularizer),this.embeddingsConstraint=La(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Object(x.tidy)((()=>this.maskZero?(e=Ys(e),Object(x.notEqual)(e,Object(x.zerosLike)(e))):null))}computeOutputShape(e){if(e=Zs(e),null==this.inputLength)return[...e,this.outputDim];const t=ma(this.inputLength);if(t.length!==e.length-1)throw new ua(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new ua(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Object(x.tidy)((()=>{this.invokeCallHook(e,t);let n=Ys(e);"int32"!==n.dtype&&(n=is(n,"int32"));return bs(this.embeddings.read(),n.as1D()).reshape(Zs(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Ws(this.embeddingsInitializer),embeddingsRegularizer:tu(this.embeddingsRegularizer),activityRegularizer:tu(this.activityRegularizer),embeddingsConstraint:Ma(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}ec.className="Embedding",x.serialization.registerClass(ec);class tc extends ui{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new ca}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new ua("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Zs(e)]),(e=e).length<2)throw new ua(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=wa(t),t.length>1)throw new ua(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===wa(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Object(x.tidy)((()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=as(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=os(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,a=e[0],s=e.slice(1).concat([a]);let i=r.reshape([a].concat(ts(e.slice(1))));i=x.transpose(i,[1,0]),i=i.reshape(s),t.push(i),n=!0}else if(e>1){const a=ss(1,e).concat([0]);t.push(x.transpose(r,a)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const a=r.rank;if(n)if(null==a){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=x.transpose(r.reshape([-1,t]),[1,0]).reshape(n)}else if(a>1){const e=[a-1].concat(ss(0,a-1));r=x.transpose(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=wa(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return x.tidy((()=>{if(null==t)return null;if(!Array.isArray(t))throw new ua("`mask` should be an Array");if(!Array.isArray(e))throw new ua("`inputs` should be an Array");if(t.length!==e.length)throw new ua(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:x.expandDims(e,0))))[0];for(let e=1;e<t.length-1;++e)n=x.logicalAnd(n,t[e]);return n}))}}class nc extends tc{constructor(e){super(e)}mergeFunction(e){return Object(x.tidy)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=x.add(t,e[n]);return t}))}}nc.className="Add",x.serialization.registerClass(nc);class rc extends tc{constructor(e){super(e)}mergeFunction(e){return Object(x.tidy)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=x.mul(t,e[n]);return t}))}}rc.className="Multiply",x.serialization.registerClass(rc);class ac extends tc{constructor(e){super(e)}mergeFunction(e){return Object(x.tidy)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=x.add(t,e[n]);return x.mul(1/e.length,t)}))}}ac.className="Average",x.serialization.registerClass(ac);class sc extends tc{constructor(e){super(e)}mergeFunction(e){return Object(x.tidy)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=x.maximum(t,e[n]);return t}))}}sc.className="Maximum",x.serialization.registerClass(sc);class ic extends tc{constructor(e){super(e)}mergeFunction(e){return Object(x.tidy)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=x.minimum(t,e[n]);return t}))}}ic.className="Minimum",x.serialization.registerClass(ic);class oc extends tc{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new ua("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let a=!1;for(const e of n)if(x.util.arraysEqual(e,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new ua("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Object(x.tidy)((()=>ds(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new ua("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new ua("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new ua("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new ua(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return x.tidy((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(x.onesLike(e[n]).asType("bool")):t[n].rank<e[n].rank?r.push(x.expandDims(t[n],-1)):r.push(t[n]);const a=x.concat(r,this.axis);return x.all(a,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function uc(e,t){for(;e<0;)e+=t;return e}oc.className="Concatenate",x.serialization.registerClass(oc);class cc extends tc{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){x.util.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new ca("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new ua(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new ua(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>uc(t,e[n].shape.length))):[uc(this.axes,n.shape.length),uc(this.axes,r.shape.length)],this.normalize&&(n=Ii(n,t[0]),r=Ii(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new ca("batchDot is not implemented for tensors of 4D or higher rank yet");if(x.util.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),x.util.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new ca("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);const s=n;return x.tidy((()=>{let n,i;if(r>a){n=r-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else if(a>r){n=a-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=s[0]===s[1]?e.mul(t).sum(s[0]):e.transpose([1,0]).mul(t).sum(s[1]);else{const n=s[0]!==e.shape.length-1,r=s[1]===t.shape.length-1;i=e.matMul(t,n,r)}if(n>0){let e;e=r>a?r+a-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=i.squeeze(t)}return 1===i.shape.length&&(i=i.expandDims(1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[uc(this.axes,e.length),uc(this.axes,t.length)],n}computeOutputShape(e){x.util.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new ca("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}cc.className="Dot",x.serialization.registerClass(cc);class lc extends ui{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Object(x.tidy)((()=>{this.invokeCallHook(e,t);const n=Ys(e);return ks((()=>fs(n.shape,0,this.stddev).add(n)),(()=>n),t.training||!1)}))}}lc.className="GaussianNoise",x.serialization.registerClass(lc);class dc extends ui{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Object(x.tidy)((()=>{this.invokeCallHook(e,t);const n=Ys(e);if(this.rate>0&&this.rate<1){return ks((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return n.mul(fs(n.shape,1,e))}),(()=>n),t.training||!1)}return n}))}}dc.className="GaussianDropout",x.serialization.registerClass(dc);class hc extends ui{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Ys(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Object(x.tidy)((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return ks((()=>{const t=Ys(e),r=-1.7580993408473766;let a=Object(x.greaterEqual)(Object(x.randomUniform)(n),this.rate);a=is(a,"float32");const s=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-s*r*this.rate;return t.mul(a).add(a.add(-1).mul(r)).mul(s).add(i)}),(()=>Ys(e)),t.training||!1)}return e}))}}function pc(e,t,n,r,a,s=.001){let i;if(2===e.rank)i=x.batchNorm2d(e,t,n,r,a,s);else if(3===e.rank)i=x.batchNorm3d(e,t,n,r,a,s);else{if(4!==e.rank)throw new ca(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=x.batchNorm4d(e,t,n,r,a,s)}return i}function fc(e,t,n,r,a=.001){return x.util.arraysEqual(r.slice().sort(),ss(0,e.rank-1))?function(e,t,n,r,a=.001){return Object(x.tidy)((()=>{const s=x.moments(e,r),i=s.mean,o=s.variance;return[pc(e,i,o,n,t,a),i,o]}))}(e,t,n,r,a):function(e,t,n,r,a=.001){return Object(x.tidy)((()=>{const s=x.moments(e,r),i=s.mean,o=s.variance,u=[];for(const t of ss(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const c=i.reshape(u),l=o.reshape(u),d=null==t?null:t.reshape(u),h=null==n?null:n.reshape(u);return[pc(e,c,l,h,d,a),i,o]}))}(e,t,n,r,a)}hc.className="AlphaDropout",x.serialization.registerClass(hc);class mc extends ui{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Vs(e.betaInitializer||"zeros"),this.gammaInitializer=Vs(e.gammaInitializer||"ones"),this.movingMeanInitializer=Vs(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Vs(e.movingVarianceInitializer||"ones"),this.betaConstraint=La(e.betaConstraint),this.gammaConstraint=La(e.gammaConstraint),this.betaRegularizer=ru(e.betaRegularizer),this.gammaRegularizer=ru(e.gammaRegularizer)}build(e){e=Zs(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new ua(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new ri({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Object(x.tidy)((()=>{const n=null!=t.training&&t.training,r=Ys(e),a=r.shape,s=a.length,i=ss(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);const u=da(1,s);u[o]=a[o];const c=i.slice();c.sort();const l=!x.util.arraysEqual(c,ss(0,s).slice(0,s-1));if(!n)return(()=>{if(l){const e=this.movingMean.read().reshape(u),t=this.movingVariance.read().reshape(u),n=this.center?this.beta.read().reshape(u):null,a=this.scale?this.gamma.read().reshape(u):null;return pc(r,e,t,n,a,this.epsilon)}return pc(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[d,h,p]=fc(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{x.tidy((()=>{const r=1-n,a=e.read(),s=a.sub(t).mul(r);e.write(a.sub(s))}))};return(()=>{f(this.movingMean,h,this.momentum),f(this.movingVariance,p,this.momentum)})(),d}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ws(this.betaInitializer),gammaInitializer:Ws(this.gammaInitializer),movingMeanInitializer:Ws(this.movingMeanInitializer),movingVarianceInitializer:Ws(this.movingVarianceInitializer),betaRegularizer:tu(this.betaRegularizer),gammaRegularizer:tu(this.gammaRegularizer),betaConstraint:Ma(this.betaConstraint),gammaConstraint:Ma(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}mc.className="BatchNormalization",x.serialization.registerClass(mc);class bc extends ui{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Vs(e.betaInitializer||"zeros"),this.gammaInitializer=Vs(e.gammaInitializer||"ones"),this.betaRegularizer=ru(e.betaRegularizer),this.gammaRegularizer=ru(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Zs(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==wa(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,true):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,true):this.beta=null,this.built=!0}call(e,t){const n=Ys(e),r=n.shape,a=r.length;return Object(x.tidy)((()=>{let{mean:e,variance:t}=Object(x.moments)(n,this.axis,!0);const s=da(1,a);for(const e of this.axis)s[e]=r[e];const i=e=>null!=e&&e.shape.length!==a&&this.axis!==[a-1]?e.reshape(s):e;let o=i(this.gamma.read()),u=i(this.beta.read());const c=[],l=[];for(let e=0;e<a;++e)-1!==this.axis.indexOf(e)?(c.push(r[e]),l.push(1)):(c.push(1),l.push(r[e]));return e=e.tile(c),t=t.tile(c),o=o.tile(l),u=u.tile(l),pc(n,e,t,u,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Ws(this.betaInitializer),gammaInitializer:Ws(this.gammaInitializer),betaRegularizer:tu(this.betaRegularizer),gammaRegularizer:tu(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}bc.className="LayerNormalization",x.serialization.registerClass(bc);class gc extends ui{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new ua(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new ua(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new ua(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new ri({ndim:4})]}computeOutputShape(e){let t,n;return e=Zs(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Object(x.tidy)((()=>{return t=Ys(e),n=this.padding,r=this.dataFormat,Object(x.tidy)((()=>{if(4!==t.rank)throw new ua(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new ua("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new ua(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],x.pad(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function yc(e,t,n,r,a,s){return Object(x.tidy)((()=>{let i;Ha(a),Ka(s),qa(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=pu(e,a);const o="same"===r?"same":"valid";return i="max"===s?x.maxPool(e,t,n,o):x.avgPool(e,t,n,o),"channelsFirst"===a&&(i=x.transpose(i,[0,3,1,2])),i}))}function xc(e,t,n,r,a,s){return Object(x.tidy)((()=>{let i;Ha(a),Ka(s),qa(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=fu(e,a);const o="same"===r?"same":"valid";return i="max"===s?x.maxPool3d(e,t,n,o):x.avgPool3d(e,t,n,o),"channelsFirst"===a&&(i=x.transpose(i,[0,4,1,2,3])),i}))}gc.className="ZeroPadding2D",x.serialization.registerClass(gc);class Oc extends ui{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new ua(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Sa(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new ua(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Sa(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,qa(this.padding),this.inputSpec=[new ri({ndim:3})]}computeOutputShape(e){const t=du((e=Zs(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Object(x.tidy)((()=>{this.invokeCallHook(e,t),e=os(Ys(e),2);const n=this.poolingFunction(Ys(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return x.squeeze(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class kc extends Oc{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Ha(a),qa(r),yc(e,t,n,r,a,"max")}}kc.className="MaxPooling1D",x.serialization.registerClass(kc);class vc extends Oc{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Ha(a),qa(r),yc(e,t,n,r,a,"avg")}}vc.className="AveragePooling1D",x.serialization.registerClass(vc);class wc extends ui{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new ua(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Sa(this.poolSize,"poolSize"),Sa(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ha(this.dataFormat),qa(this.padding),this.inputSpec=[new ri({ndim:4})]}computeOutputShape(e){e=Zs(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=du(t,this.poolSize[0],this.padding,this.strides[0]),n=du(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Object(x.tidy)((()=>(this.invokeCallHook(e,t),this.poolingFunction(Ys(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Ic extends wc{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Ha(a),qa(r),yc(e,t,n,r,a,"max")}}Ic.className="MaxPooling2D",x.serialization.registerClass(Ic);class jc extends wc{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Ha(a),qa(r),yc(e,t,n,r,a,"avg")}}jc.className="AveragePooling2D",x.serialization.registerClass(jc);class Nc extends ui{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new ua(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Sa(this.poolSize,"poolSize"),Sa(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ha(this.dataFormat),qa(this.padding),this.inputSpec=[new ri({ndim:5})]}computeOutputShape(e){e=Zs(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=du(t,this.poolSize[0],this.padding,this.strides[0]),n=du(n,this.poolSize[1],this.padding,this.strides[1]),r=du(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return Object(x.tidy)((()=>(this.invokeCallHook(e,t),this.poolingFunction(Ys(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Sc extends Nc{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Ha(a),qa(r),xc(e,t,n,r,a,"max")}}Sc.className="MaxPooling3D",x.serialization.registerClass(Sc);class Tc extends Nc{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return Ha(a),qa(r),xc(e,t,n,r,a,"avg")}}Tc.className="AveragePooling3D",x.serialization.registerClass(Tc);class Cc extends ui{constructor(e){super(e),this.inputSpec=[new ri({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new ca}}class $c extends Cc{constructor(e){super(e||{})}call(e,t){return Object(x.tidy)((()=>{const t=Ys(e);return x.mean(t,1)}))}}$c.className="GlobalAveragePooling1D",x.serialization.registerClass($c);class Ac extends Cc{constructor(e){super(e||{})}call(e,t){return Object(x.tidy)((()=>{const t=Ys(e);return x.max(t,1)}))}}Ac.className="GlobalMaxPooling1D",x.serialization.registerClass(Ac);class Ec extends ui{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Ha(this.dataFormat),this.inputSpec=[new ri({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new ca}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Rc extends Ec{call(e,t){return Object(x.tidy)((()=>{const t=Ys(e);return"channelsLast"===this.dataFormat?x.mean(t,[1,2]):x.mean(t,[2,3])}))}}Rc.className="GlobalAveragePooling2D",x.serialization.registerClass(Rc);class Fc extends Ec{call(e,t){return Object(x.tidy)((()=>{const t=Ys(e);return"channelsLast"===this.dataFormat?x.max(t,[1,2]):x.max(t,[2,3])}))}}Fc.className="GlobalMaxPooling2D",x.serialization.registerClass(Fc);class _c extends ui{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=wi(t.layer,n);delete t.layer;const a={layer:r};return Object.assign(a,t),new e(a)}}class Dc extends _c{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Zs(e)).length<3)throw new ua(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Zs(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return Object(x.tidy)((()=>$u(((e,n)=>[Ys(this.layer.call(e,t)),[]]),e=Ys(e),[],!1,null,null,!1,!0)[1]))}}Dc.className="TimeDistributed",x.serialization.registerClass(Dc);class Mc extends _c{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=wi(n),t.goBackwards=!0!==t.goBackwards;const r={};var a;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=wi(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,a=this.mergeMode,ja(Ua,"BidirectionalMergeMode",a),e.weights)throw new ca("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),a=a,this.returnState?(r=a.slice(1),t=a[0]):t=a[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):fa(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=Cu(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const s=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new ua("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const r=n.map((e=>new ri({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new ca("Support for constants in Bidirectional layers is not implemented yet.");const o=s[0]instanceof ai;for(const e of s)if(e instanceof ai!==o)throw new ua("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return Object(x.tidy)((()=>{const n=t.initialState;let r,a,s,i;if(null==n)r=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{const s=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:s})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=x.reverse(a,1)),"concat"===this.mergeMode?i=ds([r,a]):"sum"===this.mergeMode?i=x.add(r,a):"ave"===this.mergeMode?i=x.mul(.5,x.add(r,a)):"mul"===this.mergeMode?i=x.mul(r,a):null==this.mergeMode&&(i=[r,a]),this.returnState?null==this.mergeMode?i.concat(s):[i].concat(s):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Ya(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Ya(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=wi(t.layer);if(delete t.layer,null!=t.numConstants)throw new ca("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}Mc.className="Bidirectional",x.serialization.registerClass(Mc);var zc=n(47),Lc=n(1);class Pc{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return Object(Lc.e)(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return Object(Lc.e)(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Object(zc.f)(this.node.rawAttrs,e,t);if(null!=n.s)return Object(zc.i)(this.node.rawAttrs,e,t);if(null!=n.b)return Object(zc.c)(this.node.rawAttrs,e,t);if(null!=n.shape)return Object(zc.k)(this.node.rawAttrs,e,t);if(null!=n.type)return Object(zc.e)(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Object(zc.g)(this.node.rawAttrs,e,t);if(null!=n.list.s)return Object(zc.h)(this.node.rawAttrs,e,t);if(null!=n.list.shape)return Object(zc.j)(this.node.rawAttrs,e,t);if(null!=n.list.b)return Object(zc.b)(this.node.rawAttrs,e,t);if(null!=n.list.type)return Object(zc.d)(this.node.rawAttrs,e,t)}return t}}var Bc=n(86),Wc=n(172);var Vc=n(48),Uc=n(104),Gc=n(90);function Hc(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){x.util.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const a=e[r],s=t[r];x.util.assert(a<0||s<0||a===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function qc(e){return"number"!=typeof e&&!e.some((e=>e<0))}function Kc(e,t,n){let r=Xc(e,n);const a=!qc(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach((e=>{r=Xc(e.shape,r)})),!qc(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function Xc(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}class Yc{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Object(x.scalar)(0),Object(x.keep)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),Hc(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Object(x.keep)(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Object(x.tensor)([],[0].concat(this.elementShape));const n=this.readMany(e);return Hc(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Object(x.stack)(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Object(x.tensor)([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return Hc(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),Object(x.concat)(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,Object(x.unstack)(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:t.size/n,s=[];Object(x.tidy)((()=>{t=Object(x.reshape)(t,[1,n,a]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,e[n],a];s[n]=Object(x.reshape)(Object(x.slice)(t,i,o),this.elementShape)}return s}));const i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,s)}}class Zc{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);Hc(t,e.shape,"TensorList shape mismatch: "),Object(x.keep)(e)})),this.idTensor=Object(x.scalar)(0),this.maxNumElements=r,Object(x.keep)(this.idTensor)}get id(){return this.idTensor.id}copy(){return new Zc([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Hc(e,this.elementShape,"TensorList shape mismatch: ");const r=Kc(this.elementShape,this.tensors,e);return Object(x.tidy)((()=>{const e=this.tensors.map((e=>Object(x.reshape)(e,r)));return Object(x.stack)(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=Kc(this.elementShape,this.tensors,e),r=this.tensors.pop();return Hc(r.shape,e,"TensorList shape mismatch: "),Object(x.reshape)(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Hc(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Object(x.keep)(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);Hc(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=Kc(this.elementShape,this.tensors,t);return Object(x.reshape)(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Hc(this.elementShape,t.shape,"TensorList shape mismatch: "),Object(x.keep)(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Hc(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=Kc(this.elementShape,this.tensors,n);return 0===e.length?Object(x.tensor)([],[0].concat(r)):Object(x.tidy)((()=>{const t=e.map((e=>Object(x.reshape)(this.tensors[e],r)));return Object(x.stack)(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Hc(this.elementShape,t,"TensorList shape mismatch: ");const n=Kc(this.elementShape,this.tensors,t);return 0===this.size()?Object(x.tensor)([],[0].concat(n)):Object(x.tidy)((()=>{const e=this.tensors.map((e=>Object(x.reshape)(e,n)));return Object(x.concat)(e,0)}))}}const Jc=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=Object(Lc.d)("thenBranch",e,t,n),a=Object(Lc.d)("elseBranch",e,t,n),s=Object(Lc.d)("cond",e,t,n),i=Object(Lc.d)("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=Object(Lc.d)("body",e,t,n),a=Object(Lc.d)("cond",e,t,n),s=Object(Lc.d)("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map((e=>e.id));let u=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let c=s;for(;u[0];){const e=c;c=await n.functionMap[r].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);const t=c.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const s=await n.functionMap[a].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);u=await s[0].data(),s.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return c}case"LoopCond":{const r=Object(Lc.d)("pred",e,t,n);return[Object(Lc.a)(r)]}case"Switch":{const r=Object(Lc.d)("pred",e,t,n);let a=Object(Lc.d)("data",e,t,n);return a.kept||(a=Object(Lc.a)(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==Object(Lc.e)(e,t,n)));if(r){const e=Object(Lc.e)(r,t,n);return[Object(Lc.a)(e)]}return}case"Enter":{const r=Object(Lc.d)("frameName",e,t,n),a=Object(Lc.d)("tensor",e,t,n);return n.enterFrame(r),[Object(Lc.a)(a)]}case"Exit":{const r=Object(Lc.d)("tensor",e,t,n);return n.exitFrame(),[Object(Lc.a)(r)]}case"NextIteration":{const r=Object(Lc.d)("tensor",e,t,n);return n.nextIteration(),[Object(Lc.a)(r)]}case"TensorArrayV3":{const r=Object(Lc.d)("size",e,t,n),a=Object(Lc.d)("dtype",e,t,n),s=Object(Lc.d)("elementShape",e,t,n),i=Object(Lc.d)("dynamicSize",e,t,n),o=Object(Lc.d)("clearAfterRead",e,t,n),u=Object(Lc.d)("identicalElementShapes",e,t,n),c=Object(Lc.d)("name",e,t,n),l=new Yc(c,a,r,s,u,i,o);return n.addTensorArray(l),[l.idTensor,Object(x.scalar)(1)]}case"TensorArrayWriteV3":{const r=Object(Lc.d)("tensorArrayId",e,t,n),a=Object(Lc.d)("index",e,t,n),s=Object(Lc.d)("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{const r=Object(Lc.d)("tensorArrayId",e,t,n),a=Object(Lc.d)("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=Object(Lc.d)("tensorArrayId",e,t,n),a=Object(Lc.d)("indices",e,t,n),s=Object(Lc.d)("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{const r=Object(Lc.d)("tensorArrayId",e,t,n),a=Object(Lc.d)("indices",e,t,n),s=Object(Lc.d)("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{const r=Object(Lc.d)("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=Object(Lc.d)("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{const r=Object(Lc.d)("tensorArrayId",e,t,n),a=Object(Lc.d)("tensor",e,t,n),s=Object(Lc.d)("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{const r=Object(Lc.d)("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return[Object(x.scalar)(a.size(),"int32")]}case"TensorArrayCloseV3":{const r=Object(Lc.d)("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=Object(Lc.d)("tensorListId",e,t,n),a=Object(Lc.d)("index",e,t,n),s=Object(Lc.d)("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{const r=Object(Lc.d)("tensorListId",e,t,n),a=Object(Lc.d)("index",e,t,n),s=Object(Lc.d)("elementShape",e,t,n),i=Object(Lc.d)("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=Object(Lc.d)("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const s=new Zc([],n,e.dtype,r),i=Object(x.unstack)(e,0);return t.forEach(((e,t)=>{s.setItem(e,i[t])})),s}(Object(Lc.d)("tensor",e,t,n),r,Object(Lc.d)("elementShape",e,t,n),Object(Lc.d)("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=Object(Lc.d)("elementShape",e,t,n),a=Object(Lc.d)("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=function(e,t,n){return new Zc([],e,t,n)}(r,a,Object(Lc.d)(s,e,t,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const r=Object(Lc.d)("tensorListId",e,t,n),a=Object(Lc.d)("indices",e,t,n),s=Object(Lc.d)("elementShape",e,t,n),i=Object(Lc.d)("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{const r=Object(Lc.d)("tensorListId",e,t,n),a=Object(Lc.d)("elementShape",e,t,n),s=Object(Lc.d)("elementDType",e,t,n),i=Object(Lc.d)("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);Hc(e.shape.slice(1),t,"TensorList shape mismatch: ");const a=Object(x.unstack)(e);return new Zc(a,t,r)}(Object(Lc.d)("tensor",e,t,n),Object(Lc.d)("elementShape",e,t,n),Object(Lc.d)("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=Object(Lc.d)("tensorListId",e,t,n),a=n.getTensorList(r.id),s=Object(Lc.d)("dtype",e,t,n),i=Object(Lc.d)("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{const r=Object(Lc.d)("tensorListId",e,t,n),a=Object(Lc.d)("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{const r=Object(Lc.d)("tensorListId",e,t,n),a=Object(Lc.d)("elementShape",e,t,n),s=Object(Lc.d)("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{const r=Object(Lc.d)("tensor",e,t,n),a=Object(Lc.d)("elementShape",e,t,n),s=function(e,t,n){let r=0;const a=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const s=Xc(e.shape.slice(1),n),i=0===r?0:e.size/r,o=Object(x.tidy)((()=>{const n=[];e=Object(x.reshape)(e,[1,r,i]);for(let r=0;r<t.length;++r){const o=[0,0===r?0:a[r-1],0],u=[1,t[r],i];n[r]=Object(x.reshape)(Object(x.slice)(e,o,u),s)}return e.dispose(),n})),u=new Zc([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)u.setItem(e,o[e]);return u}(r,Object(Lc.d)("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};var Qc=n(19),el=n(181),tl=n(192),nl=n(177),rl=n(191);function al(e,t,n){const[r,a]=Object(Lc.d)("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===a,o="fusedbatchnorm"===r,u=Object(Lc.d)("numArgs",e,t,n);if(s){if(i&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(o)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");const c=Object(Lc.d)("strides",e,t,n),l=Object(Lc.c)(e,t,n),d=Object(Lc.d)("dataFormat",e,t,n).toUpperCase(),h=Object(Lc.d)("dilations",e,t,n),[p,f]=Object(Lc.d)("args",e,t,n);return{stride:c,pad:l,dataFormat:d,dilations:h,biasArg:p,preluArg:f,activationFunc:a,leakyreluAlpha:Object(Lc.d)("leakyreluAlpha",e,t,n)}}var sl=n(98),il=n(188),ol=n(193),ul=n(152),cl=n(125),ll=n(202);var dl=n(162),hl=n(197);function pl(e,t,n){return{boxes:Object(Lc.d)("boxes",e,t,n),scores:Object(Lc.d)("scores",e,t,n),maxOutputSize:Object(Lc.d)("maxOutputSize",e,t,n),iouThreshold:Object(Lc.d)("iouThreshold",e,t,n),scoreThreshold:Object(Lc.d)("scoreThreshold",e,t,n),softNmsSigma:Object(Lc.d)("softNmsSigma",e,t,n)}}var fl=n(62);class ml{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Object(x.scalar)(0),this.tensorMap=new Map,Object(x.keep)(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return S.a(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),Object(x.tidy)((()=>{const e=Object(x.unstack)(t),r=n.length,a=e.length;x.util.assert(r===a,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`));for(let t=0;t<r;t++){const r=n[t],a=e[t];Object(x.keep)(a),this.tensorMap.set(r,a)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return Object(x.tidy)((()=>{const e=[];for(let r=0;r<n.length;r++){const a=n[r],s=this.findWithDefault(a,t);e.push(s)}return Object(x.stack)(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}var bl=n(206);var gl=n(178),yl=n(182);var xl=n(203),Ol=n(204);function kl(e,t,n,r){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return x.tidy((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[W.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];case"AddN":return[Wc.a(Object(Lc.d)("tensors",e,t,n))];case"FloorMod":case"Mod":return[Ar.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];case"Mul":return[v.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];case"RealDiv":case"Div":return[j.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];case"DivNoNan":return[sr.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];case"FloorDiv":return[dr.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];case"Sub":return[$.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];case"Minimum":return[Cr.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];case"Maximum":return[An.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];case"Pow":return[Dt.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];case"SquaredDifference":return[Zr.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return x.tidy((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Dn.a(Object(Lc.d)("x",e,t,n))];case"Acos":return[zn.a(Object(Lc.d)("x",e,t,n))];case"Acosh":return[Ln.a(Object(Lc.d)("x",e,t,n))];case"Asin":return[Un.a(Object(Lc.d)("x",e,t,n))];case"Asinh":return[Gn.a(Object(Lc.d)("x",e,t,n))];case"Atan":return[Hn.a(Object(Lc.d)("x",e,t,n))];case"Atan2":return[qn.a(Object(Lc.d)("x",e,t,n),Object(Lc.d)("y",e,t,n))];case"Atanh":return[Kn.a(Object(Lc.d)("x",e,t,n))];case"Ceil":return[Jn.a(Object(Lc.d)("x",e,t,n))];case"Complex":return[Vc.a(Object(Lc.d)("real",e,t,n),Object(Lc.d)("imag",e,t,n))];case"Cos":return[nn.a(Object(Lc.d)("x",e,t,n))];case"Cosh":return[an.a(Object(Lc.d)("x",e,t,n))];case"Elu":return[or.a(Object(Lc.d)("x",e,t,n))];case"Erf":return[ur.a(Object(Lc.d)("x",e,t,n))];case"Exp":return[ze.a(Object(Lc.d)("x",e,t,n))];case"Expm1":return[cr.a(Object(Lc.d)("x",e,t,n))];case"Floor":return[jt.a(Object(Lc.d)("x",e,t,n))];case"Log":return[_t.a(Object(Lc.d)("x",e,t,n))];case"Log1p":return[vr.a(Object(Lc.d)("x",e,t,n))];case"Imag":return[Uc.a(Object(Lc.d)("x",e,t,n))];case"Neg":return[N.a(Object(Lc.d)("x",e,t,n))];case"Reciprocal":return[Lr.a(Object(Lc.d)("x",e,t,n))];case"Real":return[Gc.a(Object(Lc.d)("x",e,t,n))];case"Relu":return[Pr.a(Object(Lc.d)("x",e,t,n))];case"Round":return[Gr.a(Object(Lc.d)("x",e,t,n))];case"Selu":return[Hr.a(Object(Lc.d)("x",e,t,n))];case"Sigmoid":return[dn.a(Object(Lc.d)("x",e,t,n))];case"Sin":return[je.a(Object(Lc.d)("x",e,t,n))];case"Sign":return[Kr.a(Object(Lc.d)("x",e,t,n))];case"Sinh":return[Se.a(Object(Lc.d)("x",e,t,n))];case"Softplus":return[Yr.a(Object(Lc.d)("x",e,t,n))];case"Sqrt":return[T.a(Object(Lc.d)("x",e,t,n))];case"Square":return[C.a(Object(Lc.d)("x",e,t,n))];case"Tanh":return[ta.a(Object(Lc.d)("x",e,t,n))];case"Tan":return[ea.a(Object(Lc.d)("x",e,t,n))];case"ClipByValue":return[Qn.a(Object(Lc.d)("x",e,t,n),Object(Lc.d)("clipValueMin",e,t,n),Object(Lc.d)("clipValueMax",e,t,n))];case"Relu6":return[Br.a(Object(Lc.d)("x",e,t,n))];case"Rsqrt":return[Ge.a(Object(Lc.e)(e.inputNames[0],t,n))];case"Prod":return[zr.a(Object(Lc.d)("x",e,t,n),Object(Lc.d)("axes",e,t,n))];case"LeakyRelu":return[gr.a(Object(Lc.d)("x",e,t,n),Object(Lc.d)("alpha",e,t,n))];case"Prelu":return[Mr.a(Object(Lc.d)("x",e,t,n),Object(Lc.d)("alpha",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return Jc(e,t,n);case"convolution":return x.tidy((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=Object(Lc.d)("stride",e,t,n),a=Object(Lc.d)("pad",e,t,n),s=Object(Lc.d)("dataFormat",e,t,n).toUpperCase(),i=Object(Lc.d)("dilation",e,t,n);return[er.a(Object(Lc.d)("x",e,t,n),Object(Lc.d)("filter",e,t,n),r,a,s,i)]}case"Conv2D":{const r=Object(Lc.d)("strides",e,t,n),a=Object(Lc.c)(e,t,n),s=Object(Lc.d)("dataFormat",e,t,n).toUpperCase(),i=Object(Lc.d)("dilations",e,t,n);return[Oe.a(Object(Lc.d)("x",e,t,n),Object(Lc.d)("filter",e,t,n),[r[1],r[2]],a,s,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:c,leakyreluAlpha:l}=al(e,t,n);return[Qc.pb.conv2d({x:Object(Lc.d)("x",e,t,n),filter:Object(Lc.d)("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:c,preluActivationWeights:u,leakyreluAlpha:l})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:c,leakyreluAlpha:l}=al(e,t,n);return[Qc.pb.depthwiseConv2d({x:Object(Lc.d)("x",e,t,n),filter:Object(Lc.d)("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:c,preluActivationWeights:u,leakyreluAlpha:l})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=Object(Lc.d)("outputShape",e,t,n),a=Object(Lc.d)("strides",e,t,n),s=Object(Lc.c)(e,t,n);return[tr.a(Object(Lc.d)("x",e,t,n),Object(Lc.d)("filter",e,t,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=Object(Lc.d)("strides",e,t,n),a=Object(Lc.c)(e,t,n),s=Object(Lc.d)("dilations",e,t,n),i=Object(Lc.d)("dataFormat",e,t,n).toUpperCase();return[rr.a(Object(Lc.d)("input",e,t,n),Object(Lc.d)("filter",e,t,n),[r[1],r[2]],a,i,[s[1],s[2]])]}case"Conv3D":{const r=Object(Lc.d)("strides",e,t,n),a=Object(Lc.d)("pad",e,t,n),s=Object(Lc.d)("dataFormat",e,t,n).toUpperCase(),i=Object(Lc.d)("dilations",e,t,n);return[el.a(Object(Lc.d)("x",e,t,n),Object(Lc.d)("filter",e,t,n),[r[1],r[2],r[3]],a,s,[i[1],i[2],i[3]])]}case"AvgPool":{const r=Object(Lc.d)("strides",e,t,n),a=Object(Lc.d)("pad",e,t,n),s=Object(Lc.d)("kernelSize",e,t,n);return[Xn.a(Object(Lc.d)("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=Object(Lc.d)("strides",e,t,n),a=Object(Lc.d)("pad",e,t,n),s=Object(Lc.d)("kernelSize",e,t,n);return[jr.a(Object(Lc.d)("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=Object(Lc.d)("strides",e,t,n),a=Object(Lc.d)("pad",e,t,n),s=Object(Lc.d)("kernelSize",e,t,n),i=Object(Lc.d)("includeBatchInIndex",e,t,n),{result:o,indexes:u}=tl.a(Object(Lc.d)("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a,i);return[o,u]}case"AvgPool3D":{const r=Object(Lc.d)("strides",e,t,n),a=Object(Lc.d)("pad",e,t,n),s=Object(Lc.d)("kernelSize",e,t,n);return[nl.a(Object(Lc.d)("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=Object(Lc.d)("strides",e,t,n),a=Object(Lc.d)("pad",e,t,n),s=Object(Lc.d)("kernelSize",e,t,n);return[rl.a(Object(Lc.d)("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=Object(Lc.d)("strides",e,t,n),a=Object(Lc.d)("pad",e,t,n),s=Object(Lc.d)("dilations",e,t,n),i=r[1],o=r[2],u=s[1],c=s[2];return[ar.a(Object(Lc.d)("x",e,t,n),Object(Lc.d)("filter",e,t,n),[i,o],a,[u,c],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return x.tidy((()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=Object(Lc.d)("shape",e,t,n),a=Object(Lc.d)("dtype",e,t,n),s=Object(Lc.d)("value",e,t,n);return[sl.a(r,s,a)]}case"LinSpace":{const r=Object(Lc.d)("start",e,t,n),a=Object(Lc.d)("stop",e,t,n),s=Object(Lc.d)("num",e,t,n);return[il.a(r,a,s)]}case"Multinomial":{const r=Object(Lc.d)("logits",e,t,n),a=Object(Lc.d)("numSamples",e,t,n),s=Object(Lc.d)("seed",e,t,n);return[ol.a(r,a,s)]}case"OneHot":{const r=Object(Lc.d)("indices",e,t,n),a=Object(Lc.d)("depth",e,t,n),s=Object(Lc.d)("onValue",e,t,n),i=Object(Lc.d)("offValue",e,t,n);return[Fr.a(r,a,s,i)]}case"Ones":return[xt.a(Object(Lc.d)("shape",e,t,n),Object(Lc.d)("dtype",e,t,n))];case"OnesLike":return[_r.a(Object(Lc.d)("x",e,t,n))];case"RandomUniform":return[ul.a(Object(Lc.d)("shape",e,t,n),Object(Lc.d)("minval",e,t,n),Object(Lc.d)("maxval",e,t,n),Object(Lc.d)("dtype",e,t,n))];case"Range":{const r=Object(Lc.d)("start",e,t,n),a=Object(Lc.d)("stop",e,t,n),s=Object(Lc.d)("step",e,t,n);return[cl.a(r,a,s,Object(Lc.d)("dtype",e,t,n))]}case"TruncatedNormal":{const r=Object(Lc.d)("shape",e,t,n),a=Object(Lc.d)("mean",e,t,n),s=Object(Lc.d)("stdDev",e,t,n),i=Object(Lc.d)("seed",e,t,n);return[ll.a(r,a,s,Object(Lc.d)("dtype",e,t,n),i)]}case"Zeros":return[Ct.a(Object(Lc.d)("shape",e,t,n),Object(Lc.d)("dtype",e,t,n))];case"ZerosLike":return[z.a(Object(Lc.d)("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=pl(e,t,n),c=await Qc.wb.nonMaxSuppressionWithScoreAsync(r,a,s,i,o,u);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=pl(e,t,n),u=Object(Lc.d)("padToMaxOutputSize",e,t,n),c=await Qc.wb.nonMaxSuppressionPaddedAsync(r,a,s,i,o,u);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=pl(e,t,n);return[await Qc.wb.nonMaxSuppressionAsync(r,a,s,i,o)]}case"Where":{const r=k.a(Object(Lc.d)("condition",e,t,n),"bool"),a=[await dl.a(r)];return r.dispose(),a}case"ListDiff":return hl.a(Object(Lc.d)("x",e,t,n),Object(Lc.d)("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return x.tidy((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const r=Object(Lc.d)("x",e,t,n),a=Object(Lc.d)("k",e,t,n),s=Object(Lc.d)("sorted",e,t,n),i=na.a(r,a,s);return[i.values,i.indices]}case"Unique":{const r=Object(Lc.d)("x",e,t,n),a=ra.a(r);return[a.values,a.indices]}case"UniqueV2":{const r=Object(Lc.d)("x",e,t,n),a=Object(Lc.d)("axis",e,t,n),s=ra.a(r,a);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return x.tidy((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=Object(Lc.d)("images",e,t,n),a=Object(Lc.d)("size",e,t,n),s=Object(Lc.d)("alignCorners",e,t,n),i=Object(Lc.d)("halfPixelCenters",e,t,n);return[Qc.wb.resizeBilinear(r,[a[0],a[1]],s,i)]}case"ResizeNearestNeighbor":{const r=Object(Lc.d)("images",e,t,n),a=Object(Lc.d)("size",e,t,n),s=Object(Lc.d)("alignCorners",e,t,n),i=Object(Lc.d)("halfPixelCenters",e,t,n);return[Qc.wb.resizeNearestNeighbor(r,[a[0],a[1]],s,i)]}case"CropAndResize":{const r=Object(Lc.d)("image",e,t,n),a=Object(Lc.d)("boxes",e,t,n),s=Object(Lc.d)("boxInd",e,t,n),i=Object(Lc.d)("cropSize",e,t,n),o=Object(Lc.d)("method",e,t,n),u=Object(Lc.d)("extrapolationValue",e,t,n);return[Qc.wb.cropAndResize(r,a,s,i,o,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return x.tidy((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=Object(Lc.d)("default",e,t,n);return[Object(Lc.e)(e.name,t,n)||r];case"Placeholder":return[Object(Lc.e)(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":{const r=Object(Lc.d)("x",e,t,n);return[Object(Lc.a)(r)]}case"IdentityN":return Object(Lc.d)("x",e,t,n).map((e=>Object(Lc.a)(e)));case"Snapshot":const a=Object(Lc.d)("x",e,t,n);return[Object(Lc.a)(a)];case"Shape":return[fl.a(Object(Lc.d)("x",e,t,n).shape,"int32")];case"ShapeN":return Object(Lc.d)("x",e,t,n).map((e=>fl.a(e.shape)));case"Size":return[S.a(Object(Lc.d)("x",e,t,n).size,"int32")];case"Rank":return[S.a(Object(Lc.d)("x",e,t,n).rank,"int32")];case"NoOp":return[S.a(1)];case"Print":const s=Object(Lc.d)("x",e,t,n),i=Object(Lc.d)("data",e,t,n),o=Object(Lc.d)("message",e,t,n),u=Object(Lc.d)("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<i.length;e++)console.log(Array.prototype.slice.call(i[e].dataSync()).slice(0,u));return[s];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return x.tidy((()=>((e,t,n)=>{switch(e.op){case"Equal":return[lt.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];case"NotEqual":return[Rr.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];case"Greater":return[rt.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];case"GreaterEqual":return[ue.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];case"Less":return[pt.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];case"LessEqual":return[ce.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];case"LogicalAnd":return[le.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];case"LogicalNot":return[Yt.a(Object(Lc.d)("a",e,t,n))];case"LogicalOr":return[wr.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];case"Select":case"SelectV2":return[de.a(Object(Lc.d)("condition",e,t,n),Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return x.tidy((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[te.a(Object(Lc.d)("a",e,t,n),Object(Lc.d)("b",e,t,n),Object(Lc.d)("transposeA",e,t,n),Object(Lc.d)("transposeB",e,t,n))];case"Transpose":return[Ae.a(Object(Lc.d)("x",e,t,n),Object(Lc.d)("perm",e,t,n))];case"_FusedMatMul":const[r,a]=Object(Lc.d)("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===a,o=Object(Lc.d)("numArgs",e,t,n),u=Object(Lc.d)("leakyreluAlpha",e,t,n);if(s){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[c,l]=Object(Lc.d)("args",e,t,n);return[Qc.pb.matMul({a:Object(Lc.d)("a",e,t,n),b:Object(Lc.d)("b",e,t,n),transposeA:Object(Lc.d)("transposeA",e,t,n),transposeB:Object(Lc.d)("transposeB",e,t,n),bias:c,activation:a,preluActivationWeights:l,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return x.tidy((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[Yn.a(Object(Lc.d)("x",e,t,n),Object(Lc.d)("mean",e,t,n),Object(Lc.d)("variance",e,t,n),Object(Lc.d)("offset",e,t,n),Object(Lc.d)("scale",e,t,n),Object(Lc.d)("epsilon",e,t,n))];case"LRN":return[yr.a(Object(Lc.d)("x",e,t,n),Object(Lc.d)("radius",e,t,n),Object(Lc.d)("bias",e,t,n),Object(Lc.d)("alpha",e,t,n),Object(Lc.d)("beta",e,t,n))];case"Softmax":return[Xr.a(Object(Lc.d)("x",e,t,n))];case"LogSoftmax":return[Or.a(Object(Lc.d)("x",e,t,n))];case"SparseToDense":return[bl.a(Object(Lc.d)("sparseIndices",e,t,n),Object(Lc.d)("outputShape",e,t,n),Object(Lc.d)("sparseValues",e,t,n),Object(Lc.d)("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return x.tidy((()=>((e,t,n)=>{switch(e.op){case"Max":{const r=Object(Lc.d)("axis",e,t,n),a=Object(Lc.d)("keepDims",e,t,n);return[Nr.a(Object(Lc.d)("x",e,t,n),r,a)]}case"Mean":{const r=Object(Lc.d)("axis",e,t,n),a=Object(Lc.d)("keepDims",e,t,n);return[Sr.a(Object(Lc.d)("x",e,t,n),r,a)]}case"Min":{const r=Object(Lc.d)("axis",e,t,n),a=Object(Lc.d)("keepDims",e,t,n);return[Tr.a(Object(Lc.d)("x",e,t,n),r,a)]}case"Sum":{const r=Object(Lc.d)("axis",e,t,n),a=Object(Lc.d)("keepDims",e,t,n);return[_.a(Object(Lc.d)("x",e,t,n),r,a)]}case"All":{const r=Object(Lc.d)("axis",e,t,n),a=Object(Lc.d)("keepDims",e,t,n);return[Pn.a(Object(Lc.d)("x",e,t,n),r,a)]}case"Any":{const r=Object(Lc.d)("axis",e,t,n),a=Object(Lc.d)("keepDims",e,t,n);return[Bn.a(Object(Lc.d)("x",e,t,n),r,a)]}case"ArgMax":{const r=Object(Lc.d)("axis",e,t,n);return[Wn.a(Object(Lc.d)("x",e,t,n),r)]}case"ArgMin":{const r=Object(Lc.d)("axis",e,t,n);return[Vn.a(Object(Lc.d)("x",e,t,n),r)]}case"Prod":{const r=Object(Lc.d)("axis",e,t,n),a=Object(Lc.d)("keepDims",e,t,n);return[zr.a(Object(Lc.d)("x",e,t,n),r,a)]}case"Cumsum":{const r=Object(Lc.d)("axis",e,t,n),a=Object(Lc.d)("exclusive",e,t,n),s=Object(Lc.d)("reverse",e,t,n);return[$e.a(Object(Lc.d)("x",e,t,n),r,a,s)]}case"Bincount":const r=Object(Lc.d)("x",e,t,n),a=Object(Lc.d)("weights",e,t,n),s=Object(Lc.d)("size",e,t,n);return[gl.a(r,a,s)];case"DenseBincount":{const r=Object(Lc.d)("x",e,t,n),a=Object(Lc.d)("weights",e,t,n),s=Object(Lc.d)("size",e,t,n),i=Object(Lc.d)("binaryOutput",e,t,n);return[yl.a(r,a,s,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return x.tidy((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=Object(Lc.d)("n",e,t,n),a=Object(Lc.d)("axis",e,t,n);let s=Object(Lc.d)("tensors",e,t,n);return s=s.slice(0,r),[mn.a(s,a)]}case"Gather":{const r=Object(Lc.d)("x",e,t,n),a=Object(Lc.d)("indices",e,t,n);return[$n.a(r,k.a(a,"int32"),0)]}case"GatherV2":{const r=Object(Lc.d)("axis",e,t,n),a=Object(Lc.d)("batchDims",e,t,n),s=Object(Lc.d)("x",e,t,n),i=Object(Lc.d)("indices",e,t,n);return[$n.a(s,k.a(i,"int32"),r,a)]}case"Reverse":{const r=Object(Lc.d)("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);const s=Object(Lc.d)("x",e,t,n);return[Ht.a(s,a)]}case"ReverseV2":{const r=Object(Lc.d)("axis",e,t,n),a=Object(Lc.d)("x",e,t,n);return[Ht.a(a,r)]}case"Slice":{const r=Object(Lc.d)("begin",e,t,n),a=Object(Lc.d)("size",e,t,n);return[wt.a(Object(Lc.d)("x",e,t,n),r,a)]}case"StridedSlice":{const r=Object(Lc.d)("begin",e,t,n),a=Object(Lc.d)("end",e,t,n),s=Object(Lc.d)("strides",e,t,n),i=Object(Lc.d)("beginMask",e,t,n),o=Object(Lc.d)("endMask",e,t,n),u=Object(Lc.d)("ellipsisMask",e,t,n),c=Object(Lc.d)("newAxisMask",e,t,n),l=Object(Lc.d)("shrinkAxisMask",e,t,n),d=Object(Lc.d)("x",e,t,n);return[Qr.a(d,r,a,s,i,o,u,c,l)]}case"Pack":return Object(x.tidy)((()=>{const r=Object(Lc.d)("axis",e,t,n),a=Object(Lc.d)("tensors",e,t,n),s=a[0].shape,i=Jr.a(a[0]).shape,o=a.map((e=>{const t=x.util.arraysEqual(e.shape,s);if(!t&&!x.util.arraysEqual(Jr.a(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:F.a(e,s)}));return[Sn.a(o,r)]}));case"Unpack":{const r=Object(Lc.d)("axis",e,t,n),a=Object(Lc.d)("tensor",e,t,n);return Et.a(a,r)}case"Tile":{const r=Object(Lc.d)("reps",e,t,n);return[He.a(Object(Lc.d)("x",e,t,n),r)]}case"Split":case"SplitV":{const r=Object(Lc.d)("axis",e,t,n),a=Object(Lc.d)("numOrSizeSplits",e,t,n),s=Object(Lc.d)("x",e,t,n);return fe.a(s,a,r)}case"ScatterNd":{const r=Object(Lc.d)("indices",e,t,n),a=Object(Lc.d)("values",e,t,n),s=Object(Lc.d)("shape",e,t,n);return[xl.a(r,a,s)]}case"GatherNd":{const r=Object(Lc.d)("x",e,t,n),a=Object(Lc.d)("indices",e,t,n);return[Ol.a(r,a)]}case"SparseToDense":{const r=Object(Lc.d)("sparseIndices",e,t,n),a=Object(Lc.d)("outputShape",e,t,n),s=Object(Lc.d)("sparseValues",e,t,n),i=Object(Lc.d)("defaultValue",e,t,n);return[bl.a(r,s,a,s.dtype===i.dtype?i:k.a(i,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return x.tidy((()=>((e,t,n)=>{switch(e.op){case"FFT":return[lr.a(Object(Lc.d)("x",e,t,n))];case"IFFT":return[hr.a(Object(Lc.d)("x",e,t,n))];case"RFFT":return[Ur.a(Object(Lc.d)("x",e,t,n))];case"IRFFT":return[pr.a(Object(Lc.d)("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return x.tidy((()=>((e,t,n)=>{switch(e.op){case"Cast":return[k.a(Object(Lc.d)("x",e,t,n),Object(Lc.d)("dtype",e,t,n))];case"ExpandDims":{const r=Object(Lc.d)("axis",e,t,n);return[Cn.a(Object(Lc.d)("x",e,t,n),r)]}case"Squeeze":{const r=Object(Lc.d)("axis",e,t,n);return[Jr.a(Object(Lc.d)("x",e,t,n),r)]}case"Reshape":return[F.a(Object(Lc.d)("x",e,t,n),Object(Lc.d)("shape",e,t,n))];case"MirrorPad":return[$r.a(Object(Lc.d)("x",e,t,n),Object(Lc.d)("padding",e,t,n),Object(Lc.d)("mode",e,t,n))];case"PadV2":case"Pad":return[on.a(Object(Lc.d)("x",e,t,n),Object(Lc.d)("padding",e,t,n),Object(Lc.d)("constantValue",e,t,n))];case"SpaceToBatchND":{const r=Object(Lc.d)("blockShape",e,t,n),a=Object(Lc.d)("paddings",e,t,n);return[re.a(Object(Lc.d)("x",e,t,n),r,a)]}case"BatchToSpaceND":{const r=Object(Lc.d)("blockShape",e,t,n),a=Object(Lc.d)("crops",e,t,n);return[pn.a(Object(Lc.d)("x",e,t,n),r,a)]}case"DepthToSpace":{const r=Object(Lc.d)("blockSize",e,t,n),a=Object(Lc.d)("dataFormat",e,t,n).toUpperCase();return[nr.a(Object(Lc.d)("x",e,t,n),r,a)]}case"BroadcastTo":return[Zn.a(Object(Lc.d)("x",e,t,n),Object(Lc.d)("shape",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=Object(Lc.d)("keyDType",e,t,n),s=Object(Lc.d)("valueDType",e,t,n),i=new ml(a,s);return r.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=Object(Lc.d)("tableHandle",e,t,n,r),s=Object(Lc.d)("keys",e,t,n),i=Object(Lc.d)("values",e,t,n),o=r.getHashTableById(a.id);return[await o.import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{const a=Object(Lc.d)("tableHandle",e,t,n,r),s=Object(Lc.d)("keys",e,t,n),i=Object(Lc.d)("defaultValue",e,t,n),o=r.getHashTableById(a.id);return[await o.find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=Object(Lc.d)("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const a=Object(Bc.a)(e.op);if(a&&a.customExecutor)return a.customExecutor(new Pc(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return x.util.isPromise(a)?a.then((e=>[].concat(e))):[].concat(a)}class vl{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function wl(e,t,n,r){const a=new Set,s=[];let i=null,o=null;const u=new Set,c=Object.keys(e).map((e=>Object(Lc.g)(e)[0]));let l=[];null!=r&&(l=r.map((e=>Object(Lc.g)(e.name)[0])));const d=[...t];for(;d.length>0;){const e=d.pop();(Sl(e)||Tl(e)||Cl(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>a.has(e)))),a.add(e.name),null==n[e.name]&&(-1===c.indexOf(e.name)&&-1===l.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),d.push(e))})):s.push(e.name)))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}const Il=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],jl=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],Nl=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function Sl(e){return Il.indexOf(e.op)>=0}function Tl(e){return jl.indexOf(e.op)>=0}function Cl(e){return Nl.indexOf(e.op)>=0}class $l{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new $l(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=wl(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){const n=t.map((e=>e.name)),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:a}=n,s=[],i=Object.keys(a).map((e=>Object(Lc.g)(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{r.has(e.name)&&s.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&s.push(e)})),null!=o&&o.forEach((e=>{r.has(e.name)&&s.push(e)}));const u=new Set,c=[];for(;s.length>0;){const e=s.pop();u.add(e.name),t[e.name]||c.push(e),e.children.forEach((e=>{!u.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>u.has(e.name)))&&s.push(e)}))}return c}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[Object(Lc.g)(e)[0]])),a=t.map((e=>Object(Lc.g)(e)[0]));let s=a.map((e=>this.graph.nodes[e]));0===s.length&&(s=this._outputs);const i=this.getCompilationKey(r,s);let o=this.compiledMap.get(i);null==o&&(o=this.compile(e,s),this.compiledMap.set(i,o));const u={},c={};return Object(x.tidy)((()=>{const n=new vl(this.weightMap,u,c,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,a]=Object(Lc.g)(t),s=[];s[a]=e[t],r[n]=s}));const s=this.getFrozenTensorIds(r),i={};for(let e=0;e<o.length;e++){const t=o[e];if(!r[t.name]){const e=kl(t,r,n,this._resourceManager);if(x.util.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,s,a,i)}}return null==this.parent&&n.dispose(s),t.map((e=>Object(Lc.e)(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){"control"!==t.category&&-1===s.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const t=Object(Lc.f)(e.name,n,r);null!=t&&t.forEach((e=>{if(e&&!a.has(e.id)){const t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));const s=new vl(this.weightMap,r,a,this.functionExecutorMap),i=await this.executeWithControlFlow(e,s,t,n),o=t.map((e=>Object(Lc.e)(e,i,s))),u=o.map((e=>e.id)),c=Object.keys(e).map((t=>e[t].id)),l=new Set([...u,...c,...this.weightIds]);return Object.keys(i).forEach((e=>{i[e].forEach((e=>{!e||e.isDisposed||l.has(e.id)||e.dispose()}))})),null==this.parent&&s.dispose(l),o}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),s=a.map((e=>this.graph.nodes[Object(Lc.g)(e)[0]])),i=n.map((e=>Object(Lc.g)(e)[0]));let o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const{usedNodes:u,missingInputs:c,dynamicNode:l,syncInputs:d}=wl(e,o,this.weightMap,this._initNodes),h=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),p=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=Object(Lc.g)(t),a=[];a[r]=e[t],p[n]=a}));const f={},m=this.getFrozenTensorIds(p),b={};for(;h.length>0;){const e=this.processStack(s,h,t,p,b,m,i,f,u);await Promise.all(e)}null!=l||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const g=o.filter((e=>!Sl(e)&&!Object(Lc.e)(e.name,p,t))).map((e=>e.name));if(g.length>0){let e="";throw null!=l&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${g}] from the provided inputs [${a}]. Consider providing the following inputs: [${c}]. ${e}`)}return p}processStack(e,t,n,r,a,s,i,o,u){const c=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let l="";if("Enter"===e.node.op&&Object(Lc.d)("isConstant",e.node,r,n)&&([l]=Object(Lc.b)(e.node.name,n)),null==r[e.node.name]){const d=kl(e.node,r,n,this._resourceManager);l||([l]=Object(Lc.b)(e.node.name,n));const h=n.currentContext;x.util.isPromise(d)?c.push(d.then((c=>(r[l]=c,n.currentContext=h,this.checkTensorForDisposal(l,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,u),c)))):(r[l]=d,this.checkTensorForDisposal(l,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,u))}else this.processChildNodes(e.node,t,n,r,a,u)}return c}processChildNodes(e,t,n,r,a,s){e.children.forEach((e=>{const[i]=Object(Lc.b)(e.name,n);!a[i]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!Object(Lc.e)(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!Object(Lc.e)(e,r,n)))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=Object(Lc.g)(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const e=a.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));x.util.assert(t,(()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}a.attrParams.dtype&&a.attrParams.dtype.value&&x.util.assert(n.dtype===a.attrParams.dtype.value,(()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)if(null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]){t[this._signature.inputs[n].name]=e[n]}else t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=Object(Lc.g)(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{if(null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]){return this._signature.outputs[e].name}return e}),{})}checkOutputs(e){e.forEach((e=>{const[t]=Object(Lc.g)(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class Al{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class El{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new Al}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=x.io.browserHTTPRequest(e,this.loadOptions);else{const t=x.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(x.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=x.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new $l(zc.a.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=zc.a.Instance.transformGraph(e.modelInitializer);this.initializer=new $l(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=x.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof x.Tensor||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function Rl(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}model.json?tfjs-format=file`);const n=new El(e,t);return await n.load(),n}var Fl=n(72),_l=n(38),Dl=n(59);class Ml{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return x.util.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),zl((async()=>(await n.iterator()).columnMajorBatch(e,t,Ll)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,zl((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,zl((async()=>(await t.iterator()).filter((t=>x.tidy((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return zl((async()=>(await t.iterator()).map((t=>x.tidy((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return zl((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return zl((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,zl((async()=>{const n=Object(_l.e)((async()=>({value:await t.iterator(),done:!1})));return Object(_l.d)(n.take(e))}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,zl((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,a=Fl.alea(t||x.util.now().toString());return zl((async()=>{let t=a.int32();return n&&(t+=a.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,zl((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function zl(e,t=null){return new class extends Ml{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function Ll(e){if(null===e)return null;const t=e[0];if(Object(Dl.a)(t)){return{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof x.Tensor?x.stack(e):x.tensor(e)}(e),recurse:!1}}return{value:null,recurse:!0}}Ml.MAX_BUFFER_SIZE=1e4;Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");_l.a;_l.a;var Pl=n(224);Pl.a;function Bl(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&x.util.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}const Wl=x.kernel_impls.whereImpl;class Vl extends x.KernelBackend{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new x.DataStorage(this,Object(x.engine)())}nextDataId(){return Vl.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Object(x.env)().get("IS_NODE")&&x.backend_util.warn("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&x.util.isString(n[0])){const a=n.map((e=>x.util.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){if(this.data.has(e)){return this.data.get(e).refCount}return 0}incRef(e){this.data.get(e).refCount++}decRef(e){if(this.data.has(e)){this.data.get(e).refCount--}}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){const e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return x.backend_util.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>x.util.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(x.buffer)(e.shape,e.dtype,n)}makeOutput(e,t,n){const r=this.write(e,t,n);return Object(x.engine)().makeTensorFromDataId(r,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=x.util.now();e();return{kernelMs:x.util.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){Bl([e],"where");const t=this.readSync(e.dataId);return Wl(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Vl.nextDataId=0;function Ul(e,t,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(Bl(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,u=o.data.get(i.dataId).values,c=x.util.sizeFromShape(i.shape),l=n||i.dtype,d=x.util.getArrayFromDType(l,c);for(let e=0;e<c;++e)d[e]=t(u[e],a);return o.makeTensorInfo(i.shape,l,d)}}function Gl(e,t,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(Bl(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,u=o.data.get(i.dataId).values,c=n||i.dtype,l=t(u,c,a);return o.makeTensorInfo(i.shape,c,l)}}Object(x.registerBackend)("cpu",(()=>new Vl),1);const Hl=Ul(x.Elu,(e=>e>=0?e:Math.exp(e)-1)),ql={kernelName:x.Elu,backendName:"cpu",kernelFunc:Hl};function Kl(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Xl={kernelName:x.Identity,backendName:"cpu",kernelFunc:Kl};function Yl(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;Bl([a],"leakyRelu");const i=x.util.sizeFromShape(a.shape),o=n.data.get(a.dataId).values,u=x.util.getTypedArrayFromDType("float32",i);for(let e=0;e<o.length;e++)u[e]=o[e]<0?s*o[e]:o[e];return n.makeTensorInfo(a.shape,"float32",u)}const Zl={kernelName:x.LeakyRelu,backendName:"cpu",kernelFunc:Yl};function Jl(e){return(t,n,r,a,s)=>{const i=x.backend_util.assertAndGetBroadcastShape(t,n),o=i.length,u=x.util.computeStrides(i),c=x.util.sizeFromShape(i),l=x.util.getTypedArrayFromDType(s,c),d=t.length,h=n.length,p=x.util.computeStrides(t),f=x.util.computeStrides(n),m=x.backend_util.getBroadcastDims(t,i),b=x.backend_util.getBroadcastDims(n,i);if(m.length+b.length===0)for(let t=0;t<l.length;++t)l[t]=e(r[t%r.length],a[t%a.length]);else for(let t=0;t<l.length;++t){const n=x.util.indexToLoc(t,o,u),s=n.slice(-d);m.forEach((e=>s[e]=0));const i=x.util.locToIndex(s,d,p),c=n.slice(-h);b.forEach((e=>c[e]=0));const g=x.util.locToIndex(c,h,f);l[t]=e(r[i],a[g])}return[l,i]}}const Ql=Jl(((e,t)=>e<0?t*e:e));function ed(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t;Bl([r,a],"prelu");const s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,u]=Ql(r.shape,a.shape,s,i,r.dtype);return n.makeTensorInfo(u,r.dtype,o)}const td={kernelName:x.Prelu,backendName:"cpu",kernelFunc:ed},nd=Ul(x.Relu,(e=>Math.max(0,e))),rd={kernelName:x.Relu,backendName:"cpu",kernelFunc:nd},ad=Ul(x.Relu6,(e=>Math.min(Math.max(0,e),6))),sd={kernelName:x.Relu6,backendName:"cpu",kernelFunc:ad};function id(e,t,n,r,a){if("linear"===n)return Kl({inputs:{x:t},backend:e});if("relu"===n)return nd({inputs:{x:t},backend:e});if("elu"===n)return Hl({inputs:{x:t},backend:e});if("relu6"===n)return ad({inputs:{x:t},backend:e});if("prelu"===n)return ed({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return Yl({inputs:{x:t},backend:e,attrs:{alpha:a}});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function od(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}const ud={kernelName:x.Complex,backendName:"cpu",kernelFunc:od};function cd(e,t,n="float32"){if("complex64"===n){return od({inputs:{real:cd(e,t,"float32"),imag:cd(e,t,"float32")},backend:e})}const r=x.util.makeZerosTypedArray(x.util.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function ld(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const dd={kernelName:x.Real,backendName:"cpu",kernelFunc:ld};function hd(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return Kl({inputs:{x:a},backend:n});const e=cd(n,a.shape,a.dtype),t=hd({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=od({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){const e=ld({inputs:{input:a},backend:n}),t=hd({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!x.util.hasEncodingLoss(a.dtype,s)){const e=Kl({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}if("int32"===s){const e=n.data.get(a.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(a.shape,"int32",t)}if("bool"===s){const e=n.data.get(a.dataId).values,t=x.util.toTypedArray([0],a.dtype),[r,s]=Jl(((e,t)=>e!==t?1:0))(a.shape,[],e,t,"bool");return n.makeTensorInfo(s,"bool",r)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}const pd={kernelName:x.Cast,backendName:"cpu",kernelFunc:hd};function fd(e,t,n,r){return null==n?({inputs:n,backend:a})=>{const{a:s,b:i}=n,o=a;Bl([s,i],e);const u=o.data.get(s.dataId).values,c=o.data.get(i.dataId).values,l=r||s.dtype,[d,h]=t(s.shape,i.shape,u,c,l);return o.makeTensorInfo(h,l,d)}:({inputs:e,backend:a})=>{const{a:s,b:i}=e,o=a;if("complex64"===s.dtype||"complex64"===i.dtype){const e=hd({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,u=o.data.get(r.dataId).values,c=o.data.get(a.dataId).values,l=hd({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),d=o.data.get(l.dataId),h=d.complexTensorInfos.real,p=d.complexTensorInfos.imag,f=o.data.get(h.dataId).values,m=o.data.get(p.dataId).values,[b,g,y]=n(s.shape,i.shape,u,c,f,m),x=o.makeTensorInfo(y,"float32",b),O=o.makeTensorInfo(y,"float32",g),k=od({inputs:{real:x,imag:O},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(l),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(O),k}{const e=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,a=r||s.dtype,[u,c]=t(s.shape,i.shape,e,n,a);return o.makeTensorInfo(c,a,u)}}}function md(e){return(t,n,r,a,s,i)=>{const o=x.backend_util.assertAndGetBroadcastShape(t,n),u=x.util.sizeFromShape(o),c=o.length,l=x.util.computeStrides(o),d=x.util.getTypedArrayFromDType("float32",u),h=x.util.getTypedArrayFromDType("float32",u),p=x.backend_util.getBroadcastDims(t,o),f=x.backend_util.getBroadcastDims(n,o),m=x.backend_util.mergeRealAndImagArrays(r,a),b=x.backend_util.mergeRealAndImagArrays(s,i),g=t.length,y=x.util.computeStrides(t),O=n.length,k=x.util.computeStrides(n);if(p.length+f.length===0)for(let t=0;t<d.length;t++){const n=t%m.length,r=t%b.length,a=e(m[2*n],m[2*n+1],b[2*r],b[2*r+1]);d[t]=a.real,h[t]=a.imag}else for(let t=0;t<d.length;t++){const n=x.util.indexToLoc(t,c,l),r=n.slice(-g);p.forEach((e=>r[e]=0));const a=x.util.locToIndex(r,g,y),s=n.slice(-O);f.forEach((e=>s[e]=0));const i=x.util.locToIndex(s,O,k),o=e(m[2*a],m[2*a+1],b[2*i],b[2*i+1]);d[t]=o.real,h[t]=o.imag}return[d,h,o]}}const bd=Jl(((e,t)=>e+t)),gd=md(((e,t,n,r)=>({real:e+n,imag:t+r}))),yd=fd(x.Add,bd,gd),xd={kernelName:x.Add,backendName:"cpu",kernelFunc:yd};function Od(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=x.util.sizeFromShape(a.shape),o=x.util.inferFromImplicitShape(s,i),u=x.util.sizeFromShape(o);x.util.assert(i===u,(()=>`The new shape (${o}) has ${u} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(a.dataId);const c=n.data.get(a.dataId);if(null!=c.complexTensorInfos){const e=c.complexTensorInfos.real,t=c.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}const kd={kernelName:x.Reshape,backendName:"cpu",kernelFunc:Od};function vd(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;Bl([a,s],"matMul");const u=a.shape.length,c=s.shape.length,l=i?a.shape[u-2]:a.shape[u-1],d=o?s.shape[c-1]:s.shape[c-2],h=i?a.shape[u-1]:a.shape[u-2],p=o?s.shape[c-2]:s.shape[c-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),b=x.util.sizeFromShape(f),g=x.util.sizeFromShape(m),y=b===g||1===b||1===g;x.util.assert(u>=2&&c>=2&&y,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`));const O=(b>g?a.shape.slice(0,-2):s.shape.slice(0,-2)).concat([h,p]);x.util.assert(l===d,(()=>`Error in matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));const k=o?[g,p,d]:[g,d,p],v=Od({inputs:{x:a},backend:n,attrs:{shape:i?[b,l,h]:[b,h,l]}}),w=Od({inputs:{x:s},backend:n,attrs:{shape:k}}),I=i?v.shape[1]:v.shape[2],j=i?v.shape[2]:v.shape[1],N=o?w.shape[1]:w.shape[2],S=Math.max(b,g),T=n.data.get(v.dataId).values,C=n.data.get(w.dataId).values,$=x.util.computeStrides(v.shape),A=x.util.computeStrides(w.shape),[E,R,F]=i?[$[0],1,$[1]]:[$[0],$[1],1],[_,D,M]=o?[1,A[1],A[0]]:[A[1],1,A[0]],z=j*N,L=Object(x.buffer)([S,j,N],v.dtype),P=L.values,B=n.blockSize;for(let e=0;e<S;e++)for(let t=0;t<j;t+=B)for(let n=0;n<N;n+=B)for(let r=0;r<I;r+=B){const a=Math.min(t+B,j),s=Math.min(n+B,N),i=Math.min(r+B,I);for(let o=t;o<a;o++)for(let t=n;t<s;t++){let n=0;for(let a=r;a<i;a++){const r=Math.min(e,b-1)*E,s=Math.min(e,g-1)*M;n+=T[r+o*R+a*F]*C[a*_+t*D+s]}P[e*z+(o*N+t)]+=n}}return n.disposeIntermediateTensorInfo(v),n.disposeIntermediateTensorInfo(w),n.makeTensorInfo(O,L.dtype,L.values)}const wd={kernelName:x.BatchMatMul,backendName:"cpu",kernelFunc:vd};const Id={kernelName:x._FusedMatMul,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=r;let h,p,f;const m=[];h=vd({inputs:{a:a,b:s},attrs:{transposeA:u,transposeB:c},backend:n}),i&&(p=yd({inputs:{a:h,b:i},backend:n}),m.push(h),h=p),l&&(f=id(n,h,l,o,d),m.push(h),h=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return h}};function jd(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const Nd={kernelName:x.Abs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;Bl(t,"abs");let r=new Float32Array(x.util.sizeFromShape(t.shape));return r=jd(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,"float32")}},Sd=Ul(x.Acos,(e=>Math.acos(e))),Td={kernelName:x.Acos,backendName:"cpu",kernelFunc:Sd},Cd=Ul(x.Acosh,(e=>Math.acosh(e))),$d={kernelName:x.Acosh,backendName:"cpu",kernelFunc:Cd};const Ad={kernelName:x.AddN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;Bl(t,"addN");const a=r.map((e=>n.data.get(e.dataId).values)),s=Object(x.buffer)(r[0].shape,r[0].dtype),i=s.values;for(let e=0;e<r.length;e++){const t=a[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};function Ed(e,t,n,r,a){const s=t.length,i=x.util.sizeFromShape(t),o=x.util.computeStrides(t),u=x.util.computeStrides(a),c=x.util.getTypedArrayFromDType(n,x.util.sizeFromShape(a));for(let t=0;t<i;++t){const n=x.util.indexToLoc(t,s,o),a=new Array(n.length);for(let e=0;e<a.length;e++)a[e]=n[r[e]];c[x.util.locToIndex(a,s,u)]=e[t]}return c}function Rd(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;Bl(a,"transpose");const i=a.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=a.shape[s[e]];const u=Ed(r.data.get(a.dataId).values,a.shape,a.dtype,s,o);return{dataId:r.write(u,o,a.dtype),shape:o,dtype:a.dtype}}const Fd={kernelName:x.Transpose,backendName:"cpu",kernelFunc:Rd};const _d={kernelName:x.All,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;Bl(a,"all");const o=x.util.parseAxisParam(s,a.shape);let u=o;const c=x.backend_util.getAxesPermutation(u,a.shape.length);let l=a;null!=c&&(l=Rd({inputs:{x:a},backend:n,attrs:{perm:c}}),u=x.backend_util.getInnerMostAxes(u.length,a.shape.length)),x.backend_util.assertAxesAreInnerMostDims("all",u,l.shape.length);const[d,h]=x.backend_util.computeOutAndReduceShapes(l.shape,u),p=x.util.sizeFromShape(h),f=x.util.makeZerosTypedArray(x.util.sizeFromShape(d),l.dtype),m=n.data.get(l.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n&&r}f[e]=n}null!=c&&n.disposeIntermediateTensorInfo(l);const b=n.makeTensorInfo(d,l.dtype,f);if(i){const e=Od({inputs:{x:b},backend:n,attrs:{shape:x.backend_util.expandShapeToKeepDim(d,o)}});return n.disposeIntermediateTensorInfo(b),e}return b}};const Dd={kernelName:x.Any,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;Bl(a,"any");const o=x.util.parseAxisParam(s,a.shape);let u=o;const c=x.backend_util.getAxesPermutation(u,a.shape.length);let l=a;null!=c&&(l=Rd({inputs:{x:a},backend:n,attrs:{perm:c}}),u=x.backend_util.getInnerMostAxes(u.length,a.shape.length)),x.backend_util.assertAxesAreInnerMostDims("any",u,l.shape.length);const[d,h]=x.backend_util.computeOutAndReduceShapes(l.shape,u),p=x.util.sizeFromShape(h),f=x.util.makeZerosTypedArray(x.util.sizeFromShape(d),l.dtype),m=n.data.get(l.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n||r}f[e]=n}null!=c&&n.disposeIntermediateTensorInfo(l);const b=n.makeTensorInfo(d,l.dtype,f);if(i){const e=Od({inputs:{x:b},backend:n,attrs:{shape:x.backend_util.expandShapeToKeepDim(d,o)}});return n.disposeIntermediateTensorInfo(b),e}return b}};const Md={kernelName:x.ArgMax,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;Bl(a,"argMax");let i=x.util.parseAxisParam(s,a.shape);const o=x.backend_util.getAxesPermutation(i,a.shape.length);let u=a;const c=[];null!=o&&(u=Rd({inputs:{x:a},backend:n,attrs:{perm:o}}),c.push(u),i=x.backend_util.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],x.backend_util.assertAxesAreInnerMostDims("argMax",i,u.shape.length);const[l,d]=x.backend_util.computeOutAndReduceShapes(u.shape,i),h=x.util.sizeFromShape(l),p=x.util.makeZerosTypedArray(h,"int32"),f=x.util.sizeFromShape(d),m=n.data.get(u.dataId).values;for(let e=0;e<p.length;++e){const t=e*f;let n=m[t],r=0;for(let e=0;e<f;++e){const a=m[t+e];a>n&&(n=a,r=e)}p[e]=r}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l,"int32",p)}};const zd={kernelName:x.ArgMin,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;Bl(a,"argMin");let i=x.util.parseAxisParam(s,a.shape);const o=x.backend_util.getAxesPermutation(i,a.shape.length);let u=a;const c=[];null!=o&&(u=Rd({inputs:{x:a},backend:n,attrs:{perm:o}}),c.push(u),i=x.backend_util.getInnerMostAxes(i.length,u.shape.length)),i=[i[0]],x.backend_util.assertAxesAreInnerMostDims("argMin",i,u.shape.length);const[l,d]=x.backend_util.computeOutAndReduceShapes(u.shape,i),h=x.util.sizeFromShape(l),p=x.util.makeZerosTypedArray(h,"int32"),f=x.util.sizeFromShape(d),m=n.data.get(u.dataId).values;for(let e=0;e<p.length;++e){const t=e*f;let n=m[t],r=0;for(let e=0;e<f;++e){const a=m[t+e];a<n&&(n=a,r=e)}p[e]=r}return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l,"int32",p)}},Ld=Ul(x.Asin,(e=>Math.asin(e))),Pd={kernelName:x.Asin,backendName:"cpu",kernelFunc:Ld},Bd=Ul(x.Asinh,(e=>Math.asinh(e))),Wd={kernelName:x.Asinh,backendName:"cpu",kernelFunc:Bd},Vd=Ul(x.Atan,(e=>Math.atan(e))),Ud={kernelName:x.Atan,backendName:"cpu",kernelFunc:Vd},Gd=Jl(((e,t)=>Math.atan2(e,t))),Hd=fd(x.Atan2,Gd),qd={kernelName:x.Atan2,backendName:"cpu",kernelFunc:Hd},Kd=Ul(x.Atanh,(e=>Math.atanh(e))),Xd={kernelName:x.Atanh,backendName:"cpu",kernelFunc:Kd};function Yd(e,t,n,r,a,s){const i=a.strideHeight,o=a.strideWidth,u=a.dilationHeight,c=a.dilationWidth,l=a.effectiveFilterHeight,d=a.effectiveFilterWidth,h=a.padInfo.top,p=a.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Object(x.buffer)(a.outShape,n),b=m.values,g=a.outShape[1]*a.outShape[2]*a.outShape[3],y=a.outShape[2]*a.outShape[3],O=a.outShape[3];for(let t=0;t<a.batchSize;++t){const n=t*g,m=t*r[0];for(let t=0;t<a.inChannels;++t)for(let g=0;g<a.outHeight;++g){const x=g*i-h,k=Math.max(0,x),v=Math.min(a.inHeight,l+x),w=n+g*y;for(let n=0;n<a.outWidth;++n){const i=n*o-p,l=Math.max(0,i),h=Math.min(a.inWidth,d+i);let g=f,y=0,x=0;for(let n=k;n<v;n+=u){const a=m+n*r[1];for(let n=l;n<h;n+=c){const i=e[a+n*r[2]+t];"max"===s&&i>g?g=i:"avg"===s&&(y+=i,x++)}if(isNaN(g))break}b[w+n*O+t]="avg"===s?y/x:g}}}return m}function Zd(e,t,n,r,a=!1,s=!1){const i=Object(x.buffer)(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,c=r.dilationHeight,l=r.dilationWidth,d=r.effectiveFilterHeight,h=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=Object(x.buffer)(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const b=n*o-p;let g=b;for(;g<0;)g+=c;const y=Math.min(r.inHeight,d+b);for(let o=0;o<r.outWidth;++o){const d=o*u-f;let p=d;for(;p<0;)p+=l;const x=Math.min(r.inWidth,h+d);let O=Number.NEGATIVE_INFINITY,k=-1;for(let n=g;n<y;n+=c){const i=n-b;for(let o=p;o<x;o+=l){const u=o-d,c=m.get(e,n,o,t);c>O&&(O=c,k=a?s?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*h+u)}}i.set(k,e,n,o,t)}}return i}function Jd(e,t,n,r,a,s){const i=a.strideDepth,o=a.strideHeight,u=a.strideWidth,c=a.dilationDepth,l=a.dilationHeight,d=a.dilationWidth,h=a.effectiveFilterDepth,p=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,b=a.padInfo.top,g=a.padInfo.left,y="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,O=Object(x.buffer)(a.outShape,n),k=O.values,v=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],w=a.outShape[2]*a.outShape[3]*a.outShape[4],I=a.outShape[3]*a.outShape[4],j=a.outShape[4];for(let t=0;t<a.batchSize;++t){const n=t*v,x=t*r[0];for(let t=0;t<a.inChannels;++t)for(let O=0;O<a.outDepth;++O){const v=O*i-m;let N=v;for(;N<0;)N+=c;const S=Math.min(a.inDepth,h+v),T=n+O*w;for(let n=0;n<a.outHeight;++n){const i=n*o-b;let h=i;for(;h<0;)h+=l;const m=Math.min(a.inHeight,p+i),O=T+n*I;for(let n=0;n<a.outWidth;++n){const i=n*u-g;let o=i;for(;o<0;)o+=d;const p=Math.min(a.inWidth,f+i),b=O+n*j;let v=y,w=0,I=0;for(let n=N;n<S;n+=c){const a=x+n*r[1];for(let n=h;n<m;n+=l){const i=a+n*r[2];for(let n=o;n<p;n+=d){const a=e[i+n*r[3]+t];if("max"===s&&a>v?v=a:"avg"===s&&(w+=a,I++),isNaN(v))break}if(isNaN(v))break}if(isNaN(v))break}k[b+t]="avg"===s?w/I:v}}}}return O}const Qd={kernelName:x.AvgPool,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;Bl(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;x.util.assert(x.backend_util.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const c=x.backend_util.computePool2DInfo(a.shape,s,i,1,o,u);let l;if(1===c.filterWidth&&1===c.filterHeight&&x.util.arraysEqual(c.inShape,c.outShape))l=Kl({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=x.util.computeStrides(a.shape),r=Yd(e,a.shape,a.dtype,t,c,"avg");l=n.makeTensorInfo(c.outShape,a.dtype,r.values)}return l}};const eh={kernelName:x.AvgPool3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:c}=r;Bl(a,"avgPool3d");const l=x.backend_util.computePool3DInfo(a.shape,s,i,1,o,u,c),d=Jd(n.data.get(a.dataId).values,a.shape,a.dtype,x.util.computeStrides(a.shape),l,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}};const th={kernelName:x.AvgPool3DGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:c}=r;Bl([a,s],"avgPool3DGrad");const l=x.backend_util.computePool3DInfo(s.shape,i,o,1,u,c),d=l.strideDepth,h=l.strideHeight,p=l.strideWidth,f=l.filterDepth,m=l.filterHeight,b=l.filterWidth,g=l.dilationDepth,y=l.dilationHeight,O=l.dilationWidth,k=l.effectiveFilterDepth,v=l.effectiveFilterHeight,w=l.effectiveFilterWidth,I=k-1-l.padInfo.front,j=w-1-l.padInfo.left,N=v-1-l.padInfo.top,S=Object(x.buffer)(s.shape,"float32"),T=1/(f*m*b),C=n.bufferSync(a);for(let e=0;e<l.batchSize;++e)for(let t=0;t<l.inChannels;++t)for(let n=0;n<l.inDepth;++n)for(let r=0;r<l.inHeight;++r)for(let a=0;a<l.inWidth;++a){const s=n-I,i=r-N,o=a-j;let u=0;for(let n=0;n<k;n+=g){const r=(s+n)/d;if(!(r<0||r>=l.outDepth||Math.floor(r)!==r))for(let n=0;n<v;n+=y){const a=(i+n)/h;if(!(a<0||a>=l.outHeight||Math.floor(a)!==a))for(let n=0;n<w;n+=O){const s=(o+n)/p;if(s<0||s>=l.outWidth||Math.floor(s)!==s)continue;u+=C.get(e,r,a,s,t)}}}S.set(u*T,e,n,r,a,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}};const nh={kernelName:x.AvgPoolGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;Bl([a,s],"avgPoolGrad");const{filterSize:o,strides:u,pad:c}=r,l=x.backend_util.computePool2DInfo(i.shape,o,u,1,c),d=l.strideHeight,h=l.strideWidth,p=l.filterHeight,f=l.filterWidth,m=l.dilationHeight,b=l.dilationWidth,g=l.effectiveFilterHeight,y=l.effectiveFilterWidth,O=y-1-l.padInfo.left,k=g-1-l.padInfo.top,v=Object(x.buffer)(i.shape,"float32"),w=1/(p*f),I=n.data.get(a.dataId).values,j=Object(x.buffer)(a.shape,"float32",I);for(let e=0;e<l.batchSize;++e)for(let t=0;t<l.inChannels;++t)for(let n=0;n<l.inHeight;++n)for(let r=0;r<l.inWidth;++r){const a=n-k,s=r-O;let i=0;for(let n=0;n<g;n+=m){const r=(a+n)/d;if(!(r<0||r>=l.outHeight||Math.floor(r)!==r))for(let n=0;n<y;n+=b){const a=(s+n)/h;if(a<0||a>=l.outWidth||Math.floor(a)!==a)continue;i+=j.get(e,r,a,t)}}v.set(i*w,e,n,r,t)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}};const rh={kernelName:x.FusedBatchNorm,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:u}=t;x.util.assert(o.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),x.util.assert(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),x.util.assert(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),Bl([a,o,u,s,i],"batchNorm");let{varianceEpsilon:c}=r;null==c&&(c=.001);const l=n.data.get(a.dataId).values,d=n.data.get(o.dataId).values,h=n.data.get(u.dataId).values,p=s?n.data.get(s.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(l.length),b=f.length,g=p.length,y=h.length,O=d.length;let k=0,v=0,w=0,I=0;for(let e=0;e<l.length;++e)m[e]=f[k++]+(l[e]-d[v++])*p[w++]/Math.sqrt(h[I++]+c),k>=b&&(k=0),v>=O&&(v=0),w>=g&&(w=0),I>=y&&(I=0);return n.makeTensorInfo(a.shape,a.dtype,m)}};function ah(e,t,n,r,a){const s=x.slice_util.isSliceContinous(r,t,n),i=x.util.sizeFromShape(n),o=x.util.computeStrides(r);if(s){const n=x.slice_util.computeFlatOffset(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}const u="string"===a?x.backend_util.fromUint8ToStringArray(e):e,c=Object(x.buffer)(r,a,u),l=Object(x.buffer)(n,a);for(let e=0;e<l.size;++e){const n=l.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));l.set(c.get(...r),...n)}return"string"===a?x.backend_util.fromStringArrayToUint8(l.values):l.values}function sh(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;Bl(a,"slice");const[o,u]=x.slice_util.parseSliceParams(a,s,i);x.slice_util.assertParamsValid(a,o,u);const c=ah(n.data.get(a.dataId).values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,c)}const ih={kernelName:x.Slice,backendName:"cpu",kernelFunc:sh};const oh={kernelName:x.BatchToSpaceND,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;Bl([a],"batchToSpaceND");const o=s.reduce(((e,t)=>e*t)),u=x.backend_util.getReshaped(a.shape,s,o),c=x.backend_util.getPermuted(u.length,s.length),l=x.backend_util.getReshapedPermuted(a.shape,s,o),d=x.backend_util.getSliceBeginCoords(i,s.length),h=x.backend_util.getSliceSize(l,i,s.length),p=Od({inputs:{x:a},backend:n,attrs:{shape:u}}),f=Rd({inputs:{x:p},backend:n,attrs:{perm:c}}),m=Od({inputs:{x:f},backend:n,attrs:{shape:l}}),b=sh({inputs:{x:m},backend:n,attrs:{begin:d,size:h}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),b}};function uh(e,t,n,r,a){const s=x.util.sizeFromShape(r),i=x.util.makeZerosTypedArray(a,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=a||(i[r]+=s>0?t[n]:1)}return i}function ch(e,t,n,r=!1){const a=e.shape[0],s=e.shape[1],i=Object(x.buffer)([a,n],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<s;a++){const s=e.get(o,a);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?i.set(1,o,s):t.size>0?i.set(i.get(o,s)+t.get(o,a),o,s):i.set(i.get(o,s)+1,o,s))}return i}const lh={kernelName:x.Bincount,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=uh(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}};function dh(e){return(t,n,r)=>{const a=x.util.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)a[n]=e(t[n],r);return a}}const hh=dh((e=>Math.ceil(e))),ph=Gl(x.Ceil,hh),fh={kernelName:x.Ceil,backendName:"cpu",kernelFunc:ph},mh=Ul(x.ClipByValue,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),bh={kernelName:x.ClipByValue,backendName:"cpu",kernelFunc:mh},gh={kernelName:x.ComplexAbs,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(x.util.sizeFromShape(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=u[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function yh(e,t,n,r){const a=x.util.getArrayFromDType(n,x.util.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=x.util.sizeFromShape(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const s="string"===n?x.backend_util.fromUint8ToStringArray(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]}))}return a}function xh(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const Oh={kernelName:x.Imag,backendName:"cpu",kernelFunc:xh};function kh(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=x.util.parseAxisParam(a,t[0].shape)[0];let i=x.backend_util.computeOutShape(t.map((e=>e.shape)),s);if(0===x.util.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>x.util.sizeFromShape(e.shape)>0));if(1===o.length)return Kl({inputs:{x:o[0]},backend:n});const u=o.map((e=>e.shape));if(x.backend_util.assertParamsConsistent(u,s),"complex64"===o[0].dtype){const e=o.map((e=>ld({inputs:{input:e},backend:n}))),t=o.map((e=>xh({inputs:{input:e},backend:n}))),r=kh({inputs:e,backend:n,attrs:{axis:s}}),a=kh({inputs:t,backend:n,attrs:{axis:s}}),i=od({inputs:{real:r,imag:a},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}const c=o.map((e=>{const t=x.util.sizeFromShape(e.shape.slice(s));return Od({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),l=c.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=x.backend_util.computeOutShape(c.map((e=>e.shape)),1);const d=1===c[0].shape[0],h=yh(l,i,t[0].dtype,d),p=x.backend_util.computeOutShape(o.map((e=>e.shape)),s),f=n.makeTensorInfo(p,t[0].dtype,h);return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}const vh={kernelName:x.Concat,backendName:"cpu",kernelFunc:kh};function wh(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:c,dimRoundingMode:l}=r;Bl([a,s],"conv2d");const d=x.backend_util.convertConv2DDataFormat(u),h=x.backend_util.computeConv2DInfo(a.shape,s.shape,i,c,o,l,!1,d),p=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,b=h.dilationWidth,g=h.padInfo.left,y=h.padInfo.top,O="channelsLast"===h.dataFormat,k=new x.TensorBuffer(h.outShape,a.dtype),v=x.util.computeStrides(a.shape),w=x.util.computeStrides(s.shape),I=v[0],j=O?v[1]:v[2],N=O?v[2]:1,S=O?1:v[1],T=k.strides[0],C=O?k.strides[1]:k.strides[2],$=O?k.strides[2]:1,A=O?1:k.strides[1],E=n.data.get(a.dataId).values,R=n.data.get(s.dataId).values,F=k.values;for(let e=0;e<h.batchSize;++e){const t=e*I,n=e*T;for(let e=0;e<h.outHeight;++e){const r=n+e*C,a=e*h.strideHeight-y;for(let e=0;e<p;++e){const n=a+e*m;if(n<0||n>=h.inHeight)continue;const s=e*w[0],i=t+n*j;for(let e=0;e<h.outWidth;++e){const t=r+e*$,n=e*h.strideWidth-g;for(let e=0;e<f;++e){const r=n+e*b;if(r<0||r>=h.inWidth)continue;const a=i+r*N;let o=s+e*w[1];for(let e=0;e<h.inChannels;++e){const n=E[a+e*S];for(let e=0;e<h.outChannels;++e)F[t+e*A]+=n*R[o+e];o+=h.outChannels}}}}}}return n.makeTensorInfo(k.shape,k.dtype,F)}const Ih={kernelName:x.Conv2D,backendName:"cpu",kernelFunc:wh};const jh={kernelName:x.Conv2DBackpropFilter,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:c,filterShape:l}=r;Bl([a,s],"conv2dBackpropFilter");const d=x.backend_util.convertConv2DDataFormat(u),h=x.backend_util.computeConv2DInfo(a.shape,l,i,1,o,c,!1,d),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:b}=h,g="channelsLast"===h.dataFormat,y=new x.TensorBuffer(h.filterShape,"float32"),O=h.padInfo.left,k=h.padInfo.top,v=n.data.get(a.dataId).values,w=n.data.get(s.dataId).values,I=new x.TensorBuffer(a.shape,a.dtype,v),j=new x.TensorBuffer(s.shape,s.dtype,w);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((k-e)/p)),n=Math.min(h.outHeight,(h.inHeight+k-e)/p);for(let r=0;r<b;++r){const a=Math.max(0,Math.ceil((O-r)/f)),s=Math.min(h.outWidth,(h.inWidth+O-r)/f);for(let i=0;i<h.inChannels;++i)for(let o=0;o<h.outChannels;++o){let u=0;for(let c=0;c<h.batchSize;++c)for(let l=t;l<n;++l){const t=e+l*p-k;for(let e=a;e<s;++e){const n=r+e*f-O;u+=g?I.get(c,t,n,i)*j.get(c,l,e,o):I.get(c,i,t,n)*j.get(c,o,l,e)}}y.set(u,e,r,i,o)}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const Nh={kernelName:x.Conv2DBackpropInput,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:c,dimRoundingMode:l}=r;Bl([a,s],"conv2dBackpropInput");const d=x.util.computeStrides(s.shape),h=x.util.computeStrides(a.shape);let p=x.backend_util.convertConv2DDataFormat(c);const f=x.backend_util.computeConv2DInfo(i,s.shape,o,1,u,l,!1,p),m=new x.TensorBuffer(f.inShape,"float32"),b=m.values,g=n.data.get(a.dataId).values,y=n.data.get(s.dataId).values,[O,k,v]=d,{batchSize:w,filterHeight:I,filterWidth:j,inChannels:N,inHeight:S,inWidth:T,outChannels:C,outHeight:$,outWidth:A,strideHeight:E,strideWidth:R}=f;p=f.dataFormat;const F=I-1-f.padInfo.top,_=j-1-f.padInfo.left,D="channelsLast"===p,M=m.strides[0],z=D?m.strides[1]:m.strides[2],L=D?m.strides[2]:1,P=D?1:m.strides[1],B=h[0],W=D?h[1]:h[2],V=D?h[2]:1,U=D?1:h[1];for(let e=0;e<w;++e)for(let t=0;t<N;++t)for(let n=0;n<S;++n){const r=n-F,a=Math.max(0,Math.ceil(r/E)),s=Math.min($,(I+r)/E);for(let i=0;i<T;++i){const o=i-_,u=Math.max(0,Math.ceil(o/R)),c=Math.min(A,(j+o)/R);let l=0;for(let n=a;n<s;++n){const a=n*E-r;for(let r=u;r<c;++r){const s=B*e+W*n+V*r,i=O*(I-1-a)+k*(j-1-(r*R-o))+v*t;for(let e=0;e<C;++e){l+=g[s+U*e]*y[i+e]}}}b[M*e+z*n+L*i+P*t]=l}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}};const Sh={kernelName:x.Conv3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r;Bl([a,s],"conv3d");const c=x.backend_util.computeConv3DInfo(a.shape,s.shape,i,u,o),{filterDepth:l,filterHeight:d,filterWidth:h,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:b}=c,g=b.front,y=b.left,O=b.top,k=new x.TensorBuffer(c.outShape,a.dtype),v=n.data.get(a.dataId).values,w=n.data.get(s.dataId).values,I=k.values,j=x.util.computeStrides(a.shape),N=x.util.computeStrides(s.shape);for(let e=0;e<c.batchSize;++e){const t=e*j[0],n=e*k.strides[0];for(let e=0;e<c.outDepth;++e){const r=n+e*k.strides[1],a=e*c.strideDepth-g;for(let e=0;e<l;++e){const n=a+e*p;if(n<0||n>=c.inDepth)continue;const s=e*N[0],i=t+n*j[1];for(let e=0;e<c.outHeight;++e){const t=r+e*k.strides[2],n=e*c.strideHeight-O;for(let e=0;e<d;++e){const r=n+e*f;if(r<0||r>=c.inHeight)continue;const a=s+e*N[1],o=i+r*j[2];for(let e=0;e<c.outWidth;++e){const n=t+e*c.outChannels,r=e*c.strideWidth-y;for(let e=0;e<h;++e){const t=r+e*m;if(t<0||t>=c.inWidth)continue;const s=a+e*N[2],i=o+t*c.inChannels;let u=s;for(let e=0;e<c.inChannels;++e){const t=v[i+e];for(let e=0;e<c.outChannels;++e)I[n+e]+=t*w[u+e];u+=c.outChannels}}}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}};const Th={kernelName:x.Conv3DBackpropFilterV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:u}=r;Bl([a,s],"conv3dBackpropFilterV2");const c=x.util.computeStrides(a.shape),l=x.util.computeStrides(s.shape),d=x.backend_util.computeConv3DInfo(a.shape,u,i,1,o),h=d.strideDepth,p=d.strideHeight,f=d.strideWidth,m=d.filterDepth,b=d.filterHeight,g=d.filterWidth,y=new x.TensorBuffer(d.filterShape,"float32"),O=y.values,[k,v,w,I]=y.strides,j=n.data.get(s.dataId).values,[N,S,T,C]=l,$=n.data.get(a.dataId).values,[A,E,R,F]=c,_=d.padInfo.front,D=d.padInfo.left,M=d.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((_-e)/h)),n=Math.min(d.outDepth,(d.inDepth+_-e)/h),r=e*k;for(let a=0;a<b;++a){const s=Math.max(0,Math.ceil((M-a)/p)),i=Math.min(d.outHeight,(d.inHeight+M-a)/p),o=a*v+r;for(let r=0;r<g;++r){const u=Math.max(0,Math.ceil((D-r)/f)),c=Math.min(d.outWidth,(d.inWidth+D-r)/f),l=r*w+o;for(let o=0;o<d.inChannels;++o){const m=o*I+l;for(let l=0;l<d.outChannels;++l){let b=0;for(let m=0;m<d.batchSize;++m){const d=m*A,g=m*N;for(let m=t;m<n;++m){const t=(e+m*h-_)*E+d,n=m*S+g;for(let e=s;e<i;++e){const s=(a+e*p-M)*R+t,i=e*T+n;for(let e=u;e<c;++e){const t=e*C+i;b+=$[(r+e*f-D)*F+s+o]*j[t+l]}}}}O[m+l]=b}}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}};const Ch={kernelName:x.Conv3DBackpropInputV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:u}=r;Bl([a],"conv3dBackpropInputV2");const c=x.util.computeStrides(a.shape),l=x.util.computeStrides(s.shape),d=x.backend_util.computeConv3DInfo(u,s.shape,o,1,i),h=new x.TensorBuffer(d.inShape,"float32"),p=h.values,[f,m,b,g]=h.strides,y=n.data.get(a.dataId).values,[O,k,v,w]=c,I=n.data.get(s.dataId).values,[j,N,S,T]=l,{batchSize:C,filterDepth:$,filterHeight:A,filterWidth:E,inChannels:R,inDepth:F,inHeight:_,inWidth:D,outChannels:M,outDepth:z,outHeight:L,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:V}=d,U=$-1-d.padInfo.front,G=A-1-d.padInfo.top,H=E-1-d.padInfo.left;for(let e=0;e<C;++e)for(let t=0;t<R;++t)for(let n=0;n<F;++n){const r=n-U,a=Math.max(0,Math.ceil(r/B)),s=Math.min(z,($+r)/B);for(let i=0;i<_;++i){const o=i-G,u=Math.max(0,Math.ceil(o/W)),c=Math.min(L,(A+o)/W);for(let l=0;l<D;++l){const d=l-H,h=Math.max(0,Math.ceil(d/V)),x=Math.min(P,(E+d)/V);let C=0;for(let n=a;n<s;++n){const a=n*B-r;for(let r=u;r<c;++r){const s=r*W-o;for(let i=h;i<x;++i){const o=O*e+k*n+v*r+w*i,u=j*($-1-a)+N*(A-1-s)+S*(E-1-(i*V-d))+T*t;for(let e=0;e<M;++e){C+=y[o+e]*I[u+e]}}}}p[f*e+m*n+b*i+g*l+t]=C}}}return n.makeTensorInfo(h.shape,h.dtype,h.values)}},$h=Ul(x.Cos,(e=>Math.cos(e))),Ah={kernelName:x.Cos,backendName:"cpu",kernelFunc:$h},Eh=Ul(x.Cosh,(e=>Math.cosh(e))),Rh={kernelName:x.Cosh,backendName:"cpu",kernelFunc:Eh};const Fh={kernelName:x.CropAndResize,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:c}=r,[l,d,h,p]=a.shape,f=s.shape[0],[m,b]=o,g=Object(x.buffer)([f,m,b,p],"float32"),y=n.data.get(s.dataId).values,O=n.data.get(i.dataId).values,k=n.data.get(a.dataId).values,v=x.util.computeStrides(a.shape),w=x.util.computeStrides(g.shape);for(let e=0;e<f;e++){const t=4*e,n=y[t],r=y[t+1],a=y[t+2],s=y[t+3],i=O[e];if(i>=l)continue;const o=m>1?(a-n)*(d-1)/(m-1):0,f=b>1?(s-r)*(h-1)/(b-1):0;for(let t=0;t<m;t++){const l=m>1?n*(d-1)+t*o:.5*(n+a)*(d-1);if(l<0||l>d-1)for(let n=0;n<b;n++)for(let r=0;r<p;r++){const a=r+n*w[2]+t*w[1]+e*w[0];g.values[a]=c}else if("bilinear"===u){const n=Math.floor(l),a=Math.ceil(l),o=l-n;for(let u=0;u<b;u++){const l=b>1?r*(h-1)+u*f:.5*(r+s)*(h-1);if(l<0||l>h-1){for(let n=0;n<p;n++){const r=n+u*w[2]+t*w[1]+e*w[0];g.values[r]=c}continue}const d=Math.floor(l),m=Math.ceil(l),y=l-d;for(let r=0;r<p;r++){let s=r+d*v[2]+n*v[1]+i*v[0];const c=k[s];s=r+m*v[2]+n*v[1]+i*v[0];const l=k[s];s=r+d*v[2]+a*v[1]+i*v[0];const h=k[s];s=r+m*v[2]+a*v[1]+i*v[0];const p=c+(l-c)*y,f=h+(k[s]-h)*y;s=r+u*w[2]+t*w[1]+e*w[0],g.values[s]=p+(f-p)*o}}}else for(let n=0;n<b;++n){const a=b>1?r*(h-1)+n*f:.5*(r+s)*(h-1);if(a<0||a>h-1){for(let r=0;r<p;r++){const a=r+n*w[2]+t*w[1]+e*w[0];g.values[a]=c}continue}const o=Math.round(a),u=Math.round(l);for(let r=0;r<p;r++){const a=r+o*v[2]+u*v[1]+i*v[0],s=r+n*w[2]+t*w[1]+e*w[0];g.values[s]=k[a]}}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}};const _h={kernelName:x.Cumsum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;Bl(a,"cumsum");const u=x.backend_util.getAxesPermutation([s],a.shape.length);let c=a;null!=u&&(c=Rd({inputs:{x:a},backend:n,attrs:{perm:u}}));const l=x.backend_util.getInnerMostAxes(1,a.shape.length)[0];if(l!==c.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${c.shape.length-1} but got axis=${l}`);const d=Object(x.upcastType)(c.dtype,"int32"),h=x.util.makeZerosTypedArray(x.util.sizeFromShape(c.shape),d),p=n.data.get(c.dataId).values,f=c.shape[c.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)h[n]=i?0:p[n];else{const r=m(e,t-1);h[n]=i?p[r]+h[r]:p[n]+h[r]}}const b=n.makeTensorInfo(c.shape,d,h);if(null!=u){const e=Rd({inputs:{x:b},backend:n,attrs:{perm:x.backend_util.getUndoAxesPermutation(u)}});return n.disposeIntermediateTensorInfo(b),n.disposeIntermediateTensorInfo(c),e}return b}};const Dh={kernelName:x.DenseBincount,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=uh(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===a.shape.length){const e=ch(n.bufferSync(a),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};const Mh={kernelName:x.DepthToSpace,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;x.util.assert("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`)),x.util.assert(s>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`));const o=a.shape[0],u=a.shape[1],c=a.shape[2],l=a.shape[3],d=u*s,h=c*s,p=l/(s*s),f=n.data.get(a.dataId).values,m=new Float32Array(o*d*h*p);let b=0;for(let e=0;e<o;++e)for(let t=0;t<d;++t){const n=Math.floor(t/s),r=t%s;for(let t=0;t<h;++t){const a=Math.floor(t/s),i=(r*s+t%s)*p;for(let t=0;t<p;++t){const r=t+i+l*(a+c*(n+u*e));m[b++]=f[r]}}}return n.makeTensorInfo([o,d,h,p],a.dtype,m)}};function zh(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:c}=r;Bl([a,s],"depthwiseConv2DNative");const l=x.util.computeStrides(a.shape),d=x.util.computeStrides(s.shape);let h=u;null==h&&(h=[1,1]),x.util.assert(x.backend_util.eitherStridesOrDilationsAreOne(i,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`));const p=x.backend_util.computeConv2DInfo(a.shape,s.shape,i,h,o,c,!0),{filterHeight:f,filterWidth:m,dilationHeight:b,dilationWidth:g,padInfo:y}=p,O=y.left,k=y.top,v=p.outChannels/p.inChannels,w=new x.TensorBuffer(p.outShape,a.dtype),I=n.data.get(a.dataId).values,j=n.data.get(s.dataId).values,N=w.values;for(let e=0;e<p.batchSize;++e){const t=e*l[0],n=e*w.strides[0];for(let e=0;e<p.outHeight;++e){const r=n+e*w.strides[1],a=e*p.strideHeight-O;for(let e=0;e<f;++e){const n=a+e*b;if(n<0||n>=p.inHeight)continue;const s=e*d[0],i=t+n*l[1];for(let e=0;e<p.outWidth;++e){const t=r+e*w.strides[2],n=e*p.strideWidth-k;for(let e=0;e<m;++e){const r=n+e*g;if(r<0||r>=p.inWidth)continue;const a=s+e*d[1],o=i+r*p.inChannels;let u=t,c=a;for(let e=0;e<p.inChannels;++e){const t=I[o+e];for(let e=0;e<v;++e)N[u+e]+=t*j[c+e];u+=v,c+=v}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}const Lh={kernelName:x.DepthwiseConv2dNative,backendName:"cpu",kernelFunc:zh};const Ph={kernelName:x.DepthwiseConv2dNativeBackpropFilter,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:c,filterShape:l}=r;Bl([a,s],"depthwiseConv2dNativeBackpropFilter");const d=x.backend_util.computeConv2DInfo(a.shape,l,i,o,u,c,!0),{strideHeight:h,strideWidth:p,filterHeight:f,filterWidth:m}=d,b=new x.TensorBuffer(d.filterShape,"float32"),g=d.padInfo.left,y=d.padInfo.top,O=d.outChannels/d.inChannels,k=n.data.get(a.dataId).values,v=new x.TensorBuffer(a.shape,a.dtype,k),w=n.data.get(s.dataId).values,I=new x.TensorBuffer(s.shape,s.dtype,w);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((y-e)/h)),n=Math.min(d.outHeight,(d.inHeight+y-e)/h);for(let r=0;r<m;++r){const a=Math.max(0,Math.ceil((g-r)/p)),s=Math.min(d.outWidth,(d.inWidth+g-r)/p);for(let i=0;i<d.outChannels;++i){const o=Math.trunc(i/O),u=i%O;let c=0;for(let u=0;u<d.batchSize;++u)for(let l=t;l<n;++l){const t=e+l*h-y;for(let e=a;e<s;++e){const n=r+e*p-g;c+=v.get(u,t,n,o)*I.get(u,l,e,i)}}b.set(c,e,r,o,u)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}};const Bh={kernelName:x.DepthwiseConv2dNativeBackpropInput,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:c,inputShape:l}=r;Bl([a,s],"depthwiseConv2DNativeBackpropInput");const d=x.util.computeStrides(a.shape),h=x.util.computeStrides(s.shape),p=x.backend_util.computeConv2DInfo(l,s.shape,i,o,u,c,!0),f=new x.TensorBuffer(p.inShape,"float32"),m=f.values,[b,g,y]=f.strides,O=n.data.get(a.dataId).values,[k,v,w]=d,I=n.data.get(s.dataId).values,[j,N,S]=h,{batchSize:T,filterHeight:C,filterWidth:$,inChannels:A,inHeight:E,inWidth:R,outChannels:F,outHeight:_,outWidth:D,strideHeight:M,strideWidth:z}=p,L=C-1-p.padInfo.top,P=$-1-p.padInfo.left,B=F/A;for(let e=0;e<T;++e)for(let t=0;t<A;++t)for(let n=0;n<E;++n){const r=n-L,a=Math.max(0,Math.ceil(r/M)),s=Math.min(_,(C+r)/M);for(let i=0;i<R;++i){const o=i-P,u=Math.max(0,Math.ceil(o/z)),c=Math.min(D,($+o)/z);let l=0;for(let n=a;n<s;++n){const a=n*M-r;for(let r=u;r<c;++r){const s=k*e+v*n+w*r,i=j*(C-1-a)+N*($-1-(r*z-o))+S*t;for(let e=0;e<B;++e){l+=O[s+(t*B+e)]*I[i+e]}}}m[b*e+g*n+y*i+t]=l}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}};const Wh={kernelName:x.Diag,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=x.util.sizeFromShape(r.shape),s=n.data.get(r.dataId).values,i=Object(x.buffer)([a,a],r.dtype),o=i.values;for(let e=0;e<s.length;e++)o[e*a+e]=s[e];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,i.dtype,i.values)}},Vh={kernelName:x.Dilation2D,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a}=e,{strides:s,pad:i,dilations:o}=n,u=t,c=u.data.get(r.dataId).values,l=r.shape.length,d=u.data.get(a.dataId).values,h=a.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:b,outHeight:g,outWidth:y,padInfo:O,strideHeight:k,strideWidth:v,filterHeight:w,filterWidth:I,dilationHeight:j,dilationWidth:N,outShape:S}=x.backend_util.computeDilation2DInfo(r.shape,a.shape,s,i,"NHWC",o),T=x.util.sizeFromShape(S),C=S.length,$=x.util.getArrayFromDType(r.dtype,T);for(let e=0;e<p;++e)for(let t=0;t<g;++t){const n=t*k-O.top;for(let s=0;s<y;++s){const i=s*v-O.left;for(let o=0;o<b;++o){let u=Number.MIN_SAFE_INTEGER;for(let t=0;t<w;++t){const s=n+t*j;if(s>=0&&s<f)for(let n=0;n<I;++n){const p=i+n*N;if(p>=0&&p<m){const i=x.util.locToIndex([e,s,p,o],l,x.util.computeStrides(r.shape)),f=x.util.locToIndex([t,n,o],h,x.util.computeStrides(a.shape)),m=c[i]+d[f];m>u&&(u=m)}}}$[x.util.locToIndex([e,t,s,o],C,x.util.computeStrides(S))]=u}}}return{dataId:u.write(x.util.toTypedArray($,r.dtype),S,r.dtype),shape:S,dtype:r.dtype}}},Uh={kernelName:x.Dilation2DBackpropFilter,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:u}=n,c=t,l=x.util.toNestedArray(r.shape,c.data.get(r.dataId).values),d=x.util.toNestedArray(a.shape,c.data.get(a.dataId).values),{batchSize:h,inHeight:p,inWidth:f,inChannels:m,outHeight:b,outWidth:g,padInfo:y,strideHeight:O,strideWidth:k,filterHeight:v,filterWidth:w,dilationHeight:I,dilationWidth:j,outShape:N}=x.backend_util.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",u);x.util.assert(s.rank===N.length,(()=>`Error in ${x.Dilation2DBackpropFilter}, dy must have the same rank as output ${N.length}, but got ${s.rank}`));const S=x.util.toNestedArray(N,c.data.get(s.dataId).values),T=x.util.makeZerosNestedTypedArray(a.shape,a.dtype);for(let e=0;e<h;++e)for(let t=0;t<b;++t){const n=t*O-y.top;for(let r=0;r<g;++r){const a=r*k-y.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let t=0;t<v;++t){const r=n+t*I;if(r>=0&&r<p)for(let n=0;n<w;++n){const c=a+n*j;if(c>=0&&c<f){const a=l[e][r][c][s]+d[t][n][s];a>i&&(i=a,o=t,u=n)}}}T[o][u][s]+=S[e][t][r][s]}}}return{dataId:c.write(x.util.toTypedArray(T,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},Gh={kernelName:x.Dilation2DBackpropInput,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:u}=n,c=t,l=x.util.toNestedArray(r.shape,c.data.get(r.dataId).values),d=x.util.toNestedArray(a.shape,c.data.get(a.dataId).values),{batchSize:h,inHeight:p,inWidth:f,inChannels:m,outHeight:b,outWidth:g,padInfo:y,strideHeight:O,strideWidth:k,filterHeight:v,filterWidth:w,dilationHeight:I,dilationWidth:j,outShape:N}=x.backend_util.computeDilation2DInfo(r.shape,a.shape,i,o,"NHWC",u);x.util.assert(s.rank===N.length,(()=>`Error in ${x.Dilation2DBackpropInput}, dy must have the same rank as output ${N.length}, but got ${s.rank}`));const S=x.util.toNestedArray(N,c.data.get(s.dataId).values),T=x.util.makeZerosNestedTypedArray(r.shape,r.dtype);for(let e=0;e<h;++e)for(let t=0;t<b;++t){const n=t*O-y.top;for(let r=0;r<g;++r){const a=r*k-y.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=a<0?0:a;for(let t=0;t<v;++t){const r=n+t*I;if(r>=0&&r<p)for(let n=0;n<w;++n){const c=a+n*j;if(c>=0&&c<f){const a=l[e][r][c][s]+d[t][n][s];a>i&&(i=a,o=r,u=c)}}}T[e][o][u][s]+=S[e][t][r][s]}}}return{dataId:c.write(x.util.toTypedArray(T,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};const Hh={kernelName:x.EluGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:a}=t;Bl([r,a],"eluGrad");const s=new Float32Array(x.util.sizeFromShape(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];s[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(a.shape,"float32",s)}},qh=Jl(((e,t)=>e===t?1:0)),Kh=fd(x.Equal,qh,null,"bool"),Xh={kernelName:x.Equal,backendName:"cpu",kernelFunc:Kh},Yh=x.backend_util.ERF_P,Zh=x.backend_util.ERF_A1,Jh=x.backend_util.ERF_A2,Qh=x.backend_util.ERF_A3,ep=x.backend_util.ERF_A4,tp=x.backend_util.ERF_A5,np=Ul(x.Erf,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+Yh*n);return t*(1-((((tp*r+ep)*r+Qh)*r+Jh)*r+Zh)*r*Math.exp(-n*n))})),rp={kernelName:x.Erf,backendName:"cpu",kernelFunc:np},ap=dh((e=>Math.exp(e))),sp=Gl(x.Exp,ap),ip={kernelName:x.Exp,backendName:"cpu",kernelFunc:sp};function op(e){const{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice();let u=s;return s<0&&(x.util.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+s+1),o.splice(u,0,1),Od({inputs:{x:a},backend:n,attrs:{shape:o}})}const up={kernelName:x.ExpandDims,backendName:"cpu",kernelFunc:op},cp=dh((e=>Math.expm1(e))),lp=Gl(x.Expm1,cp),dp={kernelName:x.Expm1,backendName:"cpu",kernelFunc:lp},hp=Jl(((e,t)=>e*t)),pp=md(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),fp=fd(x.Multiply,hp,pp),mp={kernelName:x.Multiply,backendName:"cpu",kernelFunc:fp},bp=Jl(((e,t)=>e/t)),gp=fd(x.RealDiv,bp),yp={kernelName:x.RealDiv,backendName:"cpu",kernelFunc:gp},xp=Jl(((e,t)=>e-t)),Op=md(((e,t,n,r)=>({real:e-n,imag:t-r}))),kp=fd(x.Sub,xp,Op),vp={kernelName:x.Sub,backendName:"cpu",kernelFunc:kp};function wp(e,t,n){const r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,c=[a,s],l=x.util.sizeFromShape(c),d=x.util.getTypedArrayFromDType("float32",l),h=x.util.getTypedArrayFromDType("float32",l);for(let e=0;e<a;e++){const r=sh({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,s]}}),a=sh({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,s]}}),i=od({inputs:{real:r,imag:a},backend:n}),{real:c,imag:l}=Ip(i,t,n),p=x.backend_util.mergeRealAndImagArrays(c,l);for(let t=0;t<s;t++){const n=x.backend_util.getComplexWithIndex(p,t);d[e*s+t]=n.real,h[e*s+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i)}const p=n.makeTensorInfo(c,"float32",d),f=n.makeTensorInfo(c,"float32",h),m=od({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function Ip(e,t,n){const r=x.util.sizeFromShape(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if(0==((o=r)&o-1)){const a=jp(s,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",a.real),t=n.makeTensorInfo(o,"float32",a.imag),s=n.makeTensorInfo([],"float32",x.util.createScalarValue(r,"float32")),i=Kl({inputs:{x:s},backend:n}),u=yp.kernelFunc({inputs:{a:e,b:s},backend:n}),c=yp.kernelFunc({inputs:{a:t,b:i},backend:n}),l=n.data.get(u.dataId).values,d=n.data.get(c.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),{real:l,imag:d}}return a}{const e=function(e,t,n){const r=new Float32Array(2*t);for(let a=0;a<t;a++){let s=0,i=0;for(let r=0;r<t;r++){const o=x.backend_util.exponent(a*r,t,n),u=x.backend_util.getComplexWithIndex(e,r);s+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(s/=t,i/=t),x.backend_util.assignToTypedArray(r,s,i,a)}return r}(x.backend_util.mergeRealAndImagArrays(s,i),r,t);return x.backend_util.splitRealAndImagArrays(e)}var o}function jp(e,t,n,r,a){if(1===n)return{real:e,imag:t};const s=x.backend_util.mergeRealAndImagArrays(e,t),i=n/2,o=x.backend_util.complexWithEvenIndex(s),u=o.real,c=o.imag,l=[u.length],d=a.makeTensorInfo(l,"float32",u),h=a.makeTensorInfo(l,"float32",c),p=od({inputs:{real:d,imag:h},backend:a}),f=x.backend_util.complexWithOddIndex(s),m=f.real,b=f.imag,g=[m.length],y=a.makeTensorInfo(g,"float32",m),O=a.makeTensorInfo(g,"float32",b),k=od({inputs:{real:y,imag:O},backend:a}),v=jp(u,c,i,r,a),w=v.real,I=v.imag,j=[w.length],N=a.makeTensorInfo(j,"float32",w),S=a.makeTensorInfo(j,"float32",I),T=od({inputs:{real:N,imag:S},backend:a}),C=jp(m,b,i,r,a),$=C.real,A=C.imag,E=[$.length],R=a.makeTensorInfo(E,"float32",$),F=a.makeTensorInfo(E,"float32",A),_=od({inputs:{real:R,imag:F},backend:a}),D=x.backend_util.exponents(n,r),M=[D.real.length],z=a.makeTensorInfo(M,"float32",D.real),L=a.makeTensorInfo(M,"float32",D.imag),P=od({inputs:{real:z,imag:L},backend:a}),B=fp({inputs:{a:P,b:_},backend:a}),W=yd({inputs:{a:T,b:B},backend:a}),V=kp({inputs:{a:T,b:B},backend:a}),U=ld({inputs:{input:W},backend:a}),G=ld({inputs:{input:V},backend:a}),H=xh({inputs:{input:W},backend:a}),q=xh({inputs:{input:V},backend:a}),K=kh({inputs:[U,G],backend:a,attrs:{axis:0}}),X=kh({inputs:[H,q],backend:a,attrs:{axis:0}}),Y=a.data.get(K.dataId).values,Z=a.data.get(X.dataId).values;return a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(y),a.disposeIntermediateTensorInfo(O),a.disposeIntermediateTensorInfo(k),a.disposeIntermediateTensorInfo(N),a.disposeIntermediateTensorInfo(S),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(R),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(_),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(K),a.disposeIntermediateTensorInfo(X),{real:Y,imag:Z}}const Np={kernelName:x.FFT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=x.util.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=Od({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=wp(i,!1,n),u=Od({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}};function Sp(e){const{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||x.util.inferDtype(a),o=x.util.getArrayFromDType(i,x.util.sizeFromShape(r));return function(e,t,n){e.fill(t)}(o,a),t.makeTensorInfo(r,i,o)}const Tp={kernelName:x.Fill,backendName:"cpu",kernelFunc:Sp};const Cp={kernelName:x.FlipLeftRight,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,a=n,s=x.util.getTypedArrayFromDType(r.dtype,x.util.sizeFromShape(r.shape)),[i,o,u,c]=r.shape,l=a.data.get(r.dataId).values;for(let e=0;e<i;e++){const t=e*u*o*c;for(let e=0;e<o;e++){const n=e*(u*c);for(let r=0;r<u;r++){const a=r*c;for(let o=0;o<c;o++){const d=[i,e,r,o][2],h=Math.round(u-d),p=t+n+a+o;let f=l[p];if(h>=0&&h<u){f=l[t+n+h*c+o]}s[p]=f}}}}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},$p=dh((e=>Math.floor(e))),Ap=Gl(x.Floor,$p),Ep={kernelName:x.Floor,backendName:"cpu",kernelFunc:Ap},Rp=Jl(((e,t)=>Math.floor(e/t))),Fp=fd(x.FloorDiv,Rp,null,"int32"),_p={kernelName:x.FloorDiv,backendName:"cpu",kernelFunc:Fp};const Dp={kernelName:x.FusedConv2D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r;let m=wh({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h}});if(i){const e=m;m=yd({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=id(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}};const Mp={kernelName:x.FusedDepthwiseConv2D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r;let m=zh({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h}});if(i){const e=m;m=yd({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=id(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}};const zp={kernelName:x.GatherNd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=x.util.sizeFromShape(r.shape),i=a.shape,o=i[i.length-1],[u,c,l,d]=x.backend_util.prepareAndValidate(r,a);if(0===c)return n.makeTensorInfo(u,r.dtype,[]);const h=Object(x.buffer)([c,l],r.dtype),p=n.data.get(a.dataId).values,f=n.data.get(r.dataId).values;for(let e=0;e<c;e++){const t=[];let n=0;for(let r=0;r<o;r++){const a=p[e*o+r];n+=a*d[r],t.push(a)}if(n<0||n>=s/l)throw new Error(`Invalid indices: ${t} does not index into ${r.shape}`);for(let t=0;t<l;t++)h.values[e*l+t]=f[n*l+t]}return n.makeTensorInfo(u,h.dtype,h.values)}};function Lp(e,t,n){const r=Object(x.buffer)(n,e.dtype);for(let n=0;n<r.size;++n){const a=r.indexToLoc(n).slice(),s=a[0],i=a[2],o=t.locToIndex([s,i]);a[2]=t.values[o];const u=e.locToIndex(a);r.values[n]=e.values[u]}return r}const Pp={kernelName:x.GatherV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;Bl([a,s],"gatherV2");let u=o;null==o&&(u=0);const c=x.util.sizeFromShape(s.shape),l=x.util.parseAxisParam(i,a.shape)[0],d=x.backend_util.segment_util.collectGatherOpShapeInfo(a,s,l,u),h=Od({inputs:{x:a},backend:n,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),p=Od({inputs:{x:s},backend:n,attrs:{shape:[d.batchSize,c/d.batchSize]}}),f=[d.batchSize,d.outerSize,c/d.batchSize,d.sliceSize],m=n.bufferSync(p),b=Lp(n.bufferSync(h),m,f);return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.makeTensorInfo(d.outputShape,b.dtype,b.values)}},Bp=Jl(((e,t)=>e>t?1:0)),Wp=fd(x.Greater,Bp,null,"bool"),Vp={kernelName:x.Greater,backendName:"cpu",kernelFunc:Wp},Up=Jl(((e,t)=>e>=t?1:0)),Gp=fd(x.GreaterEqual,Up,null,"bool"),Hp={kernelName:x.GreaterEqual,backendName:"cpu",kernelFunc:Gp};const qp={kernelName:x.IFFT,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=x.util.sizeFromShape(r.shape),s=r.shape[r.shape.length-1],i=Od({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=wp(i,!0,n),u=Od({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},Kp=Ul(x.IsFinite,(e=>Number.isFinite(e)?1:0),"bool"),Xp={kernelName:x.IsFinite,backendName:"cpu",kernelFunc:Kp},Yp=Ul(x.IsInf,(e=>Math.abs(e)===1/0?1:0),"bool"),Zp={kernelName:x.IsInf,backendName:"cpu",kernelFunc:Yp},Jp=Ul(x.IsNan,(e=>Number.isNaN(e)?1:0),"bool"),Qp={kernelName:x.IsNan,backendName:"cpu",kernelFunc:Jp},ef=Jl(((e,t)=>e<t?1:0)),tf=fd(x.Less,ef,null,"bool"),nf={kernelName:x.Less,backendName:"cpu",kernelFunc:tf},rf=Jl(((e,t)=>e<=t?1:0)),af=fd(x.LessEqual,rf,null,"bool"),sf={kernelName:x.LessEqual,backendName:"cpu",kernelFunc:af};function of(e,t,n){const r=(t-e)/(n-1),a=x.util.makeZerosTypedArray(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return a}const uf={kernelName:x.LinSpace,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=of(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},cf=dh((e=>Math.log(e))),lf=Gl(x.Log,cf),df={kernelName:x.Log,backendName:"cpu",kernelFunc:lf},hf=Ul(x.Log1p,(e=>Math.log1p(e))),pf={kernelName:x.Log1p,backendName:"cpu",kernelFunc:hf},ff=Jl(((e,t)=>e&&t)),mf=fd(x.LogicalAnd,ff,null,"bool"),bf={kernelName:x.LogicalAnd,backendName:"cpu",kernelFunc:mf},gf=Ul(x.LogicalNot,(e=>e?0:1),"bool"),yf={kernelName:x.LogicalNot,backendName:"cpu",kernelFunc:gf},xf=Jl(((e,t)=>e||t)),Of=fd(x.LogicalOr,xf,null,"bool"),kf={kernelName:x.LogicalOr,backendName:"cpu",kernelFunc:Of};const vf={kernelName:x.LRN,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=r;Bl(a,"LRN");const c=a.shape[3],l=c-1,d=n.data.get(a.dataId).values,h=x.util.sizeFromShape(a.shape),p=new Float32Array(h);function f(e){const t=e%c;let n=e-t+Math.max(0,t-s);const r=e-t+Math.min(t+s,l);let a=0;for(;n<=r;n++){const e=d[n];a+=e*e}return a}for(let e=0;e<h;e++){const t=f(e),n=d[e]*Math.pow(i+o*t,-u);p[e]=n}return n.makeTensorInfo(a.shape,a.dtype,p)}};const wf={kernelName:x.LRNGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:c,beta:l}=r;Bl(i,"LRNGrad");const d=x.util.sizeFromShape(i.shape),h=i.shape[3],p=n.data.get(i.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(s.dataId).values,b=new Float32Array(d),g=d;for(let e=0;e<g;e++){const t=e%h,n=e-t+Math.max(0,t-o),r=e-t+Math.min(h,t+o+1);let a=0;for(let e=n;e<r;e++)a+=Math.pow(f[e],2);a=c*a+u;for(let t=n;t<r;t++){let n=-2*c*l*f[t]*m[e]/a;e===t&&(n+=Math.pow(a,-l)),n*=p[e],b[t]+=n}}return n.makeTensorInfo(i.shape,a.dtype,b)}};function If(e,t,n,r){const a=x.util.getTypedArrayFromDType(r,x.util.sizeFromShape(n));for(let n=0;n<a.length;++n){const r=n*t;let s=e[r];for(let n=0;n<t;++n){const t=e[r+n];t>s&&(s=t)}a[n]=s}return a}function jf(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n;let u=a.shape;const c=u.length,l=x.util.parseAxisParam(s,u);let d=l;const h=x.backend_util.getAxesPermutation(d,c);let p=o.data.get(a.dataId).values;if(null!=h){const e=new Array(c);for(let t=0;t<e.length;t++)e[t]=u[h[t]];p=Ed(p,u,a.dtype,h,e),d=x.backend_util.getInnerMostAxes(d.length,c),u=e}Bl(a,"max"),x.backend_util.assertAxesAreInnerMostDims("max",d,c);const[f,m]=x.backend_util.computeOutAndReduceShapes(u,d),b=If(p,x.util.sizeFromShape(m),f,a.dtype),g=o.write(b,f,a.dtype);let y=f;if(i){y=x.backend_util.expandShapeToKeepDim(f,l)}return{dataId:g,shape:y,dtype:a.dtype}}const Nf={kernelName:x.Max,backendName:"cpu",kernelFunc:jf},Sf=Jl(((e,t)=>Math.max(e,t))),Tf=fd(x.Maximum,Sf),Cf={kernelName:x.Maximum,backendName:"cpu",kernelFunc:Tf};const $f={kernelName:x.MaxPool,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;Bl(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;x.util.assert(x.backend_util.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const c=x.backend_util.computePool2DInfo(a.shape,s,i,1,o,u);let l;if(1===c.filterWidth&&1===c.filterHeight&&x.util.arraysEqual(c.inShape,c.outShape))l=Kl({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=x.util.computeStrides(a.shape),r=Yd(e,a.shape,a.dtype,t,c,"max");l=n.makeTensorInfo(c.outShape,a.dtype,r.values)}return l}};const Af={kernelName:x.MaxPool3D,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:c}=r;Bl(a,"maxPool3d");const l=x.backend_util.computePool3DInfo(a.shape,s,i,1,o,u,c),d=Jd(n.data.get(a.dataId).values,a.shape,a.dtype,x.util.computeStrides(a.shape),l,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}};const Ef={kernelName:x.MaxPool3DGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:c}=r;Bl([a,s],"maxPool3DGrad");const l=x.backend_util.computePool3DInfo(s.shape,i,o,1,u,c),d=function(e,t){const n=Object(x.buffer)(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,c=t.effectiveFilterDepth,l=t.effectiveFilterHeight,d=t.effectiveFilterWidth,h=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let b=0;b<t.inChannels;++b)for(let g=0;g<t.outDepth;++g){const y=g*r-h;let x=y;for(;x<0;)x+=i;const O=Math.min(t.inDepth,c+y);for(let r=0;r<t.outHeight;++r){const c=r*a-p;let h=c;for(;h<0;)h+=o;const k=Math.min(t.inHeight,l+c);for(let a=0;a<t.outWidth;++a){const p=a*s-f;let v=p;for(;v<0;)v+=u;const w=Math.min(t.inWidth,d+p);let I=Number.NEGATIVE_INFINITY,j=-1;for(let t=x;t<O;t+=i){const n=t-y;for(let r=h;r<k;r+=o){const a=r-c;for(let s=v;s<w;s+=u){const i=s-p,o=e.get(m,t,r,s,b);o>=I&&(I=o,j=n*l*d+a*l+i)}}}n.set(j,m,g,r,a,b)}}}return n}(n.bufferSync(s),l),h=l.strideDepth,p=l.strideHeight,f=l.strideWidth,m=l.dilationDepth,b=l.dilationHeight,g=l.dilationWidth,y=l.effectiveFilterDepth,O=l.effectiveFilterHeight,k=l.effectiveFilterWidth,v=y-1-l.padInfo.front,w=k-1-l.padInfo.left,I=O-1-l.padInfo.top,j=Object(x.buffer)(s.shape,"float32"),N=n.bufferSync(a);for(let e=0;e<l.batchSize;++e)for(let t=0;t<l.inChannels;++t)for(let n=0;n<l.inDepth;++n)for(let r=0;r<l.inHeight;++r)for(let a=0;a<l.inWidth;++a){const s=n-v,i=r-I,o=a-w;let u=0;for(let n=0;n<y;n+=m){const r=(s+n)/h;if(!(r<0||r>=l.outDepth||Math.floor(r)!==r))for(let a=0;a<O;a+=b){const s=(i+a)/p;if(!(s<0||s>=l.outHeight||Math.floor(s)!==s))for(let i=0;i<k;i+=g){const c=(o+i)/f;if(c<0||c>=l.outWidth||Math.floor(c)!==c)continue;const h=y*O*k-1-d.get(e,r,s,c,t)===n*O*k+a*k+i?1:0;if(0===h)continue;u+=N.get(e,r,s,c,t)*h}}}j.set(u,e,n,r,a,t)}return n.makeTensorInfo(j.shape,j.dtype,j.values)}};const Rf={kernelName:x.MaxPoolGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;Bl([s,i],"maxPoolGrad");const{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=r,h=x.backend_util.computePool2DInfo(o.shape,u,c,1,l,d),p=n.data.get(o.dataId).values,f=Object(x.buffer)(h.outShape,o.dtype,Zd(p,o.shape,o.dtype,h).values),m=h.strideHeight,b=h.strideWidth,g=h.dilationHeight,y=h.dilationWidth,O=h.effectiveFilterHeight,k=h.effectiveFilterWidth,v=k-1-h.padInfo.left,w=O-1-h.padInfo.top,I=Object(x.buffer)(o.shape,"float32"),j=n.data.get(a.dataId).values,N=Object(x.buffer)(a.shape,"float32",j);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inHeight;++n)for(let r=0;r<h.inWidth;++r){const a=n-w,s=r-v;let i=0;for(let n=0;n<O;n+=g){const r=(a+n)/m;if(!(r<0||r>=h.outHeight||Math.floor(r)!==r))for(let a=0;a<k;a+=y){const o=(s+a)/b;if(o<0||o>=h.outWidth||Math.floor(o)!==o)continue;const u=O*k-1-f.get(e,r,o,t)===n*k+a?1:0;if(0===u)continue;i+=N.get(e,r,o,t)*u}}I.set(i,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}};const Ff={kernelName:x.MaxPoolWithArgmax,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,u=n;Bl(r,"MaxPoolWithArgmax");const c=u.data.get(r.dataId).values,l=x.backend_util.computePool2DInfo(r.shape,a,s,[1,1],i),[d,h]=function(e,t,n,r,a){const s=Yd(e,0,n,x.util.computeStrides(t),a,"max"),i=Zd(e,t,n,a,!0,r);return[s.values,i.values]}(c,r.shape,r.dtype,o,l),p=u.write(d,l.outShape,r.dtype),f=u.write(h,l.outShape,r.dtype);return[{dataId:p,shape:l.outShape,dtype:r.dtype},{dataId:f,shape:l.outShape,dtype:"int32"}]}};function _f(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;let o;Bl(a,"sum"),o="bool"===a.dtype?hd({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):Kl({inputs:{x:a},backend:n});const u=o.shape.length,c=x.util.parseAxisParam(s,o.shape),l=x.backend_util.getAxesPermutation(c,u);let d=c,h=o;null!=l&&(h=Rd({inputs:{x:o},backend:n,attrs:{perm:l}}),d=x.backend_util.getInnerMostAxes(d.length,u)),x.backend_util.assertAxesAreInnerMostDims("sum",d,h.shape.length);const[p,f]=x.backend_util.computeOutAndReduceShapes(h.shape,d);let m=cd(n,p,x.backend_util.upcastType(h.dtype,"int32"));const b=x.util.sizeFromShape(f),g=n.data.get(m.dataId).values,y=n.data.get(h.dataId).values;for(let e=0;e<g.length;++e){const t=e*b;let n=0;for(let e=0;e<b;++e)n+=y[t+e];g[e]=n}if(i){const e=m;m=Od({inputs:{x:m},backend:n,attrs:{shape:x.backend_util.expandShapeToKeepDim(m.shape,c)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=l&&n.disposeIntermediateTensorInfo(h),m}const Df={kernelName:x.Sum,backendName:"cpu",kernelFunc:_f};const Mf={kernelName:x.Mean,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=x.util.parseAxisParam(s,a.shape),u=x.backend_util.computeOutAndReduceShapes(a.shape,o)[1],c=x.util.sizeFromShape(u),l=[],d=n.makeTensorInfo([],"float32",new Float32Array([c]));l.push(d);const h=hd({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});l.push(h);const p=gp({inputs:{a:h,b:d},backend:n});l.push(p);const f=_f({inputs:{x:p},backend:n,attrs:{axis:s,keepDims:i}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};const zf={kernelName:x.Min,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;Bl(a,"min");const o=x.util.parseAxisParam(s,a.shape);let u=o;const c=x.backend_util.getAxesPermutation(u,a.shape.length);let l=a;null!=c&&(l=Rd({inputs:{x:a},backend:n,attrs:{perm:c}}),u=x.backend_util.getInnerMostAxes(u.length,a.shape.length)),x.backend_util.assertAxesAreInnerMostDims("min",u,l.shape.length);const[d,h]=x.backend_util.computeOutAndReduceShapes(l.shape,u),p=x.util.sizeFromShape(h),f=x.util.makeZerosTypedArray(x.util.sizeFromShape(d),l.dtype),m=n.data.get(l.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];r<n&&(n=r)}f[e]=n}null!=c&&n.disposeIntermediateTensorInfo(l);const b=n.makeTensorInfo(d,l.dtype,f);if(i){const e=Od({inputs:{x:b},backend:n,attrs:{shape:x.backend_util.expandShapeToKeepDim(d,o)}});return n.disposeIntermediateTensorInfo(b),e}return b}},Lf=Jl(((e,t)=>Math.min(e,t))),Pf=fd(x.Minimum,Lf),Bf={kernelName:x.Minimum,backendName:"cpu",kernelFunc:Pf};const Wf={kernelName:x.MirrorPad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;Bl(a,"mirrorPad");const o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),u=s.map((e=>e[0])),c=s.map(((e,t)=>e[0]+a.shape[t])),l="reflect"===i?0:1,d=n.data.get(a.dataId).values,h=a.shape.length,p=x.util.computeStrides(a.shape),f=x.util.sizeFromShape(o),m=o.length,b=x.util.computeStrides(o),g=x.util.getTypedArrayFromDType(a.dtype,f);for(let e=0;e<f;e++){let t=x.util.indexToLoc(e,m,b);for(let e=0;e<m;e++)t[e]<u[e]?t[e]=2*u[e]-t[e]-l:t[e]>=c[e]&&(t[e]=2*(c[e]-1)-t[e]+l);t=t.map(((e,t)=>e-u[t]));const n=x.util.locToIndex(t,h,p);g[e]=d[n]}return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}},Vf=Jl(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),Uf=fd(x.Mod,Vf),Gf={kernelName:x.Mod,backendName:"cpu",kernelFunc:Uf};function Hf(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length;let o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const u=x.util.parseAxisParam([o],a.shape),c=jf({inputs:{x:a},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),l=x.backend_util.expandShapeToKeepDim(c.shape,u),d=Od({inputs:{x:c},backend:n,attrs:{shape:l}}),h=kp({inputs:{a:a,b:d},backend:n}),p=sp({inputs:{x:h},backend:n}),f=_f({inputs:{x:p},backend:n,attrs:{axis:u,keepDims:!1}}),m=Od({inputs:{x:f},backend:n,attrs:{shape:l}}),b=gp({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),b}const qf={kernelName:x.Softmax,backendName:"cpu",kernelFunc:Hf};const Kf={kernelName:x.Multinomial,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;Bl(a,"multinomial");const u=o?a:Hf({inputs:{logits:a},backend:n,attrs:{dim:-1}}),c=u.shape[0],l=u.shape[1],d=n.data.get(u.dataId).values,h=[c,s],p=x.util.makeZerosTypedArray(x.util.sizeFromShape(h),"int32");for(let e=0;e<c;++e){const t=e*l,n=new Float32Array(l-1);n[0]=d[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+d[t+e];const r=Fl.alea(i.toString()),a=e*s;for(let e=0;e<s;++e){const t=r();p[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){p[a+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(h,"int32",p)}};function Xf(e,t,n){const r=x.util.createScalarValue(-1,n);return hp([],t,r,e,n)}const Yf={kernelName:x.Neg,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;Bl(r,"neg");const a=n.data.get(r.dataId).values,[s,i]=Xf(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}},Zf=x.kernel_impls.nonMaxSuppressionV3Impl;const Jf={kernelName:x.NonMaxSuppressionV3,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r;Bl(a,"NonMaxSuppression");const c=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,{selectedIndices:d}=Zf(c,l,i,o,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},Qf=x.kernel_impls.nonMaxSuppressionV4Impl;const em={kernelName:x.NonMaxSuppressionV4,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:c}=r;Bl(a,"NonMaxSuppressionPadded");const l=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,{selectedIndices:h,validOutputs:p}=Qf(l,d,i,o,u,c);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},tm=x.kernel_impls.nonMaxSuppressionV5Impl;const nm={kernelName:x.NonMaxSuppressionV5,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:c}=r;Bl(a,"NonMaxSuppressionWithScore");const l=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,h=i,p=o,f=u,m=c,{selectedIndices:b,selectedScores:g}=tm(l,d,h,p,f,m);return[n.makeTensorInfo([b.length],"int32",new Int32Array(b)),n.makeTensorInfo([g.length],"float32",new Float32Array(g))]}},rm=Jl(((e,t)=>e!==t?1:0)),am=fd(x.NotEqual,rm,null,"bool"),sm={kernelName:x.NotEqual,backendName:"cpu",kernelFunc:am};const im={kernelName:x.OneHot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r;Bl(a,"oneHot");const u=x.util.sizeFromShape(a.shape),c=new Float32Array(u*s);c.fill(o);const l=n.data.get(a.dataId).values;for(let e=0;e<u;++e)l[e]>=0&&l[e]<s&&(c[e*s+l[e]]=i);return n.makeTensorInfo([...a.shape,s],"int32",c)}};function om(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=ld({inputs:{input:r},backend:n}),t=om({inputs:{x:e},backend:n}),a=xh({inputs:{input:r},backend:n}),s=om({inputs:{x:a},backend:n}),i=od({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return Sp({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const um={kernelName:x.ZerosLike,backendName:"cpu",kernelFunc:om};const cm={kernelName:x.OnesLike,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const t=ld({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=xh({inputs:{input:a},backend:r}),i=om({inputs:{x:s},backend:r}),o=od({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return Sp({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function lm(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return op({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{x.util.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),x.util.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=kh({inputs:t.map((e=>{const t=op({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const dm={kernelName:x.Pack,backendName:"cpu",kernelFunc:lm};const hm={kernelName:x.PadV2,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;Bl(a,"pad");const o=s.map(((e,t)=>e[0]+a.shape[t]+e[1])),u=s.map((e=>e[0])),c=n.data.get(a.dataId).values,l=x.util.sizeFromShape(a.shape),d=a.shape.length,h=x.util.computeStrides(a.shape),p=x.util.sizeFromShape(o),f=o.length,m=x.util.computeStrides(o),b=x.util.getTypedArrayFromDType(a.dtype,p);0!==i&&b.fill(i);for(let e=0;e<l;e++){const t=x.util.indexToLoc(e,d,h).map(((e,t)=>e+u[t]));b[x.util.locToIndex(t,f,m)]=c[e]}return{dataId:n.write(b,o,a.dtype),shape:o,dtype:a.dtype}}},pm=Jl(((e,t)=>Math.pow(e,t))),fm=fd(x.Pow,pm),mm={kernelName:x.Pow,backendName:"cpu",kernelFunc:fm};function bm(e,t,n,r){const[a,s]=x.backend_util.computeOutAndReduceShapes(e,r),i=Object(x.upcastType)(t,"int32"),o=x.util.makeZerosTypedArray(x.util.sizeFromShape(a),i),u=x.util.sizeFromShape(s);for(let e=0;e<o.length;++e){const t=e*u;let r=1;for(let e=0;e<u;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:a,outDtype:i}}const gm={kernelName:x.Prod,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;Bl(a,"prod");const o=a.shape.length,u=x.util.parseAxisParam(s,a.shape),c=x.backend_util.getAxesPermutation(u,o);let l=u,d=a;const h=[];null!=c&&(d=Rd({inputs:{x:a},backend:n,attrs:{perm:c}}),h.push(d),l=x.backend_util.getInnerMostAxes(l.length,o));const p=n.data.get(d.dataId).values,{outVals:f,outShape:m,outDtype:b}=bm(d.shape,d.dtype,p,l);let g=m;return i&&(g=x.backend_util.expandShapeToKeepDim(m,u)),h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(g,b,f)}};function ym(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return x.util.makeZerosTypedArray(0,r);const a=Math.abs(Math.ceil((t-e)/n)),s=x.util.makeZerosTypedArray(a,r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}const xm={kernelName:x.Range,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=ym(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}},Om=Ul(x.Reciprocal,(e=>1/e)),km={kernelName:x.Reciprocal,backendName:"cpu",kernelFunc:Om};const vm={kernelName:x.ResizeBilinear,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;Bl(a,"resizeBilinear");const u=x.util.computeStrides(a.shape),[c,l]=o,[d,h,p,f]=a.shape,m=n.data.get(a.dataId).values,b=new Float32Array(x.util.sizeFromShape([d,c,l,f])),g=[s&&c>1?h-1:h,s&&l>1?p-1:p],y=[s&&c>1?c-1:c,s&&l>1?l-1:l];let O=0;const k=g[0]/y[0],v=g[1]/y[1];for(let e=0;e<d;e++)for(let t=0;t<c;t++){let n;n=i?k*(t+.5)-.5:k*t;const r=Math.max(0,Math.floor(n)),a=n-r,s=Math.min(h-1,Math.ceil(n)),o=e*u[0]+r*u[1],c=e*u[0]+s*u[1];for(let e=0;e<l;e++){let t;t=i?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(p-1,Math.ceil(t)),l=o+n*u[2],d=c+n*u[2],h=o+s*u[2],g=c+s*u[2];for(let e=0;e<f;e++){const t=m[l+e],n=m[d+e],s=t+(m[h+e]-t)*r,i=s+(n+(m[g+e]-n)*r-s)*a;b[O++]=i}}}return n.makeTensorInfo([d,c,l,f],"float32",b)}};const wm={kernelName:x.ResizeBilinearGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;Bl([s,a],"resizeBilinearGrad");const o=x.util.computeStrides(a.shape),[u,c,l,d]=a.shape,[,h,p]=s.shape,f=new Float32Array(u*c*l*d),m=[i&&h>1?c-1:c,i&&p>1?l-1:l],b=[i&&h>1?h-1:h,i&&p>1?p-1:p],g=m[0]/b[0],y=m[1]/b[1],O=n.data.get(s.dataId).values;let k=0;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<h;e++){const n=e*g,r=Math.floor(n),a=Math.min(Math.ceil(n),c-1),s=t+r*o[1],i=t+a*o[1],u=n-r,h=1-u;for(let e=0;e<p;e++){const t=e*y,n=Math.floor(t),r=Math.min(Math.ceil(t),l-1),a=t-n,c=1-a,p=s+n*o[2],m=s+r*o[2],b=i+n*o[2],g=i+r*o[2],x=h*c,v=h*a,w=u*c,I=u*a;for(let e=0;e<d;e++){const t=O[k++];f[p+e]+=t*x,f[m+e]+=t*v,f[b+e]+=t*w,f[g+e]+=t*I}}}}return n.makeTensorInfo([u,l,c,d],"float32",f)}};const Im={kernelName:x.ResizeNearestNeighbor,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;Bl(a,"resizeNearestNeighbor");const u=x.util.computeStrides(a.shape),[c,l]=o,[d,h,p,f]=a.shape,m=n.data.get(a.dataId).values,b=new Float32Array(d*c*l*f),g=[s&&c>1?h-1:h,s&&l>1?p-1:p],y=[s&&c>1?c-1:c,s&&l>1?l-1:l],O=g[0]/y[0],k=g[1]/y[1];let v=0;for(let e=0;e<d;e++){const t=e*u[0];for(let e=0;e<c;e++){const n=i?O*(e+.5):O*e;let r=Math.min(h-1,s?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const a=t+r*u[1];for(let e=0;e<l;e++){const t=i?k*(e+.5):k*e;let n=Math.min(p-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=a+n*u[2];for(let e=0;e<f;e++){const t=m[r+e];b[v++]=t}}}}return n.makeTensorInfo([d,c,l,f],a.dtype,b)}};const jm={kernelName:x.ResizeNearestNeighborGrad,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;Bl([s,a],"resizeNearestNeighborGrad");const o=x.util.computeStrides(a.shape),u=x.util.computeStrides(s.shape),[c,l,d,h]=a.shape,[,p,f]=s.shape,m=new Float32Array(c*l*d*h),b=n.data.get(s.dataId).values,g=[i&&p>1?l-1:l,i&&f>1?d-1:d],y=[i&&p>1?p-1:p,i&&f>1?f-1:f],O=g[0]/y[0],k=g[1]/y[1],v=1/O,w=1/k,I=2*Math.ceil(v)+2,j=2*Math.ceil(w)+2;for(let e=0;e<c;e++){const t=e*o[0];for(let e=0;e<l;e++){const n=t+e*o[1],r=Math.floor(e*v),a=Math.floor(r-I/2);for(let r=0;r<d;r++){const s=n+r*o[2],c=Math.floor(r*w),g=Math.floor(c-j/2);for(let n=0;n<h;n++){let o=0;for(let s=0;s<I;s++){const c=s+a;if(c<0||c>=p)continue;const h=t+c*u[1],m=c*O;if(e===Math.min(l-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<j;e++){const t=e+g;if(t<0||t>=f)continue;const a=h+t*u[2],s=t*k;r===Math.min(d-1,i?Math.round(s):Math.floor(s))&&(o+=b[a+n])}}m[s+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}};const Nm={kernelName:x.Reverse,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;Bl(a,"reverse");const i=a.shape.length,o=x.util.parseAxisParam(s,a.shape);if(0===i)return Kl({inputs:{x:a},backend:n});const u=new x.TensorBuffer(a.shape,a.dtype),c=n.bufferSync(a);for(let e=0;e<u.size;e++){const t=u.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=a.shape[e]-1-n[e])),u.set(c.get(...n),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},Sm={kernelName:x.RotateWithOffset,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,u=x.util.getTypedArrayFromDType(r.dtype,x.util.sizeFromShape(r.shape)),[c,l,d,h]=r.shape,[p,f]=x.backend_util.getImageCenter(i,l,d),m=Math.sin(a),b=Math.cos(a),g=o.data.get(r.dataId).values;for(let e=0;e<c;e++){const t=e*d*l*h;for(let e=0;e<l;e++){const n=e*(d*h);for(let r=0;r<d;r++){const a=r*h;for(let i=0;i<h;i++){const o=[c,e,r,i],y=o[2],x=o[1];let O=(y-p)*b-(x-f)*m,k=(y-p)*m+(x-f)*b;O=Math.round(O+p),k=Math.round(k+f);let v=s;if("number"!=typeof s&&(v=3===i?255:s[i]),O>=0&&O<d&&k>=0&&k<l){v=g[t+k*(d*h)+O*h+i]}u[t+n+a+i]=v}}}}return{dataId:o.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},Tm=Ul(x.Round,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),Cm={kernelName:x.Round,backendName:"cpu",kernelFunc:Tm},$m=dh((e=>1/Math.sqrt(e))),Am=Gl(x.Rsqrt,$m),Em={kernelName:x.Rsqrt,backendName:"cpu",kernelFunc:Am};function Rm(e,t,n,r,a,s,i,o,u,c){const l=[r/a,a],d=e.values,h=t.values;if(0===r)return Object(x.buffer)(n,t.dtype);const p=Object(x.buffer)(l,t.dtype);p.values.fill(u);for(let e=0;e<s;e++){const s=[];let u=0;for(let t=0;t<i;t++){const n=d[e*i+t];s.push(n),u+=n*o[t]}if(u<0||u>=r/a)throw new Error(`Invalid indices: ${s} does not index into ${n}`);for(let n=0;n<a;n++)c?p.values[u*a+n]+=h[e*a+n]:p.values[u*a+n]=0===t.rank?h[0]:h[e*a+n]}return p}const Fm={kernelName:x.ScatterNd,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:c,strides:l,outputSize:d}=x.backend_util.calculateShapes(s,a,i),h=Rm(n.bufferSync(a),n.bufferSync(s),i,d,c,u,o,l,0,!0);return n.makeTensorInfo(i,h.dtype,h.values)}};const _m={kernelName:x.Select,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;Bl([r,a,s],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,l=Object(x.upcastType)(a.dtype,s.dtype),d=x.util.makeZerosTypedArray(x.util.sizeFromShape(a.shape),l);let h=0;const p=0===i||i>1||1===a.shape.length?1:x.util.sizeFromShape(a.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<p;t++)1===o[e]?d[h++]=u[e]:d[h++]=c[e];return n.makeTensorInfo(a.shape,l,d)}},Dm=x.backend_util.SELU_SCALEALPHA,Mm=x.backend_util.SELU_SCALE,zm=Ul(x.Selu,(e=>e>=0?Mm*e:Dm*(Math.exp(e)-1))),Lm={kernelName:x.Selu,backendName:"cpu",kernelFunc:zm},Pm=Ul(x.Sigmoid,(e=>1/(1+Math.exp(-e)))),Bm={kernelName:x.Sigmoid,backendName:"cpu",kernelFunc:Pm},Wm=Ul(x.Sign,(e=>e<0?-1:e>0?1:0)),Vm={kernelName:x.Sign,backendName:"cpu",kernelFunc:Wm},Um=Ul(x.Sin,(e=>Math.sin(e))),Gm={kernelName:x.Sin,backendName:"cpu",kernelFunc:Um},Hm=Ul(x.Sinh,(e=>Math.sinh(e))),qm={kernelName:x.Sinh,backendName:"cpu",kernelFunc:Hm},Km=Math.log(1.1920928955078125e-7)+2,Xm=Ul(x.Softplus,(e=>{const t=e>-Km,n=e<Km,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a})),Ym={kernelName:x.Softplus,backendName:"cpu",kernelFunc:Xm};const Zm={kernelName:x.SpaceToBatchND,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;Bl([a],"spaceToBatchND");const o=x.util.sizeFromShape(s),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<a.shape.length;++e)u.push([0,0]);const c=hm.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),l=x.backend_util.getReshaped(c.shape,s,o,!1),d=x.backend_util.getPermuted(l.length,s.length,!1),h=x.backend_util.getReshapedPermuted(c.shape,s,o,!1),p=Od({inputs:{x:c},backend:n,attrs:{shape:l}}),f=Rd({inputs:{x:p},backend:n,attrs:{perm:d}}),m=Od({inputs:{x:f},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};const Jm={kernelName:x.SparseToDense,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:c,sliceSize:l,strides:d,outputSize:h}=x.backend_util.calculateShapes(s,a,o),p=Rm(n.bufferSync(a),n.bufferSync(s),o,h,l,c,u,d,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,p.dtype,p.values)}};const Qm={kernelName:x.SplitV,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=x.util.parseAxisParam(i,a.shape)[0],u=x.backend_util.prepareSplitSize(a,s,o),c=new Array(a.shape.length).fill(0),l=a.shape.slice();return u.map((e=>{const t=[...l];t[o]=e;const r=sh({inputs:{x:a},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},eb=Ul(x.Sqrt,(e=>Math.sqrt(e))),tb={kernelName:x.Sqrt,backendName:"cpu",kernelFunc:eb},nb={kernelName:x.Square,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;Bl(n,"square");const a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let e=0;e<a.length;++e){const t=a[e];s[e]=t*t}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},rb=Jl(((e,t)=>{const n=e-t;return n*n})),ab=fd(x.SquaredDifference,rb),sb={kernelName:x.SquaredDifference,backendName:"cpu",kernelFunc:ab},ib=Ul(x.Step,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),ob={kernelName:x.Step,backendName:"cpu",kernelFunc:ib};function ub(e,t,n,r){const a=Object(x.buffer)(e,t.dtype);for(let e=0;e<a.size;e++){const s=a.indexToLoc(e),i=new Array(s.length);for(let e=0;e<i.length;e++)i[e]=s[e]*n[e]+r[e];a.set(t.get(...i),...s)}return a}const cb={kernelName:x.StridedSlice,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:h}=r;Bl(a,"stridedSlice");const{nonStrided:p,$begin:f,$strides:m,size:b,newShape:g,outShape:y}=x.slice_util.sliceInfo(a.shape,s,i,o,u,c,l,d,h),O=Od({inputs:{x:a},backend:n,attrs:{shape:g}});let k;if(p){const e=sh({inputs:{x:O},backend:n,attrs:{begin:f,size:b}});k=Od({inputs:{x:e},backend:n,attrs:{shape:y}}),n.disposeIntermediateTensorInfo(e)}else if(y.some((e=>0===e)))k=n.makeTensorInfo(y,a.dtype,[]);else{const e=ub(y,n.bufferSync(O),m,f);k=n.makeTensorInfo(e.shape,e.dtype,e.values)}const v=Od({inputs:{x:k},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(O),n.disposeIntermediateTensorInfo(k),v}},lb=Ul(x.Tan,(e=>Math.tan(e))),db={kernelName:x.Tan,backendName:"cpu",kernelFunc:lb},hb=Ul(x.Tanh,(e=>Math.tanh(e))),pb={kernelName:x.Tanh,backendName:"cpu",kernelFunc:hb};function fb(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=Object(x.buffer)(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),a=new Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];const s=e.locToIndex(a);r.values[t]=e.values[s]}return r}const mb={kernelName:x.Tile,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;Bl(a,"tile");const i=fb(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}};function bb(e,t,n,r,a){const s=t[t.length-1],[i,o]=[e.length/s,s],u=x.util.getTypedArrayFromDType(n,i*r),c=x.util.getTypedArrayFromDType("int32",i*r);for(let t=0;t<i;t++){const n=t*o,a=e.subarray(n,n+o),s=[];for(let e=0;e<a.length;e++)s.push({value:a[e],index:e});s.sort(((e,t)=>t.value-e.value));const i=t*r,l=u.subarray(i,i+r),d=c.subarray(i,i+r);for(let e=0;e<r;e++)l[e]=s[e].value,d[e]=s[e].index}const l=t.slice();return l[l.length-1]=r,[Object(x.buffer)(l,n,u),Object(x.buffer)(l,"int32",c)]}const gb={kernelName:x.TopK,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;Bl(a,"topk");const o=n.data.get(a.dataId).values,[u,c]=bb(o,a.shape,a.dtype,s);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}};const yb={kernelName:x.Transform,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:c}=n,[l,d,h,p]=a.shape,[f,m]=null!=c?c:[d,h],b=[l,f,m,p],g=x.util.computeStrides(a.shape),y=g[0],O=g[1],k=g[2],v=x.util.getTypedArrayFromDType(a.dtype,x.util.sizeFromShape(b));v.fill(u);const w=r.data.get(a.dataId).values,I=r.data.get(s.dataId).values;for(let e=0;e<l;++e){const t=1===s.shape[0]?I:I.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let a=0;a<p;++a){let s;const c=t[6]*r+t[7]*n+1;if(0===c)continue;const l=(t[0]*r+t[1]*n+t[2])/c,p=(t[3]*r+t[4]*n+t[5])/c,f=xb(l,h,o),m=xb(p,d,o);switch(i){case"nearest":s=kb(w,d,h,y,O,k,e,m,f,a,u);break;case"bilinear":s=vb(w,d,h,y,O,k,e,m,f,a,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}v[e*y+n*O+r*k+a]=s}return r.makeTensorInfo(b,a.dtype,v)}return{dataId:r.write(v,b,a.dtype),shape:a.shape,dtype:a.dtype}}};function xb(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return x.util.clamp(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return x.util.clamp(0,n,t-1)}(e,t);case"nearest":return function(e,t){return x.util.clamp(0,e,t-1)}(e,t);case"constant":default:return function(e,t){return e}(e)}}function Ob(e,t,n,r,a,s,i,o,u,c,l){return 0<=o&&o<t&&0<=u&&u<n?e[i*r+o*a+u*s+c]:l}function kb(e,t,n,r,a,s,i,o,u,c,l){return Ob(e,t,n,r,a,s,i,Math.round(o),Math.round(u),c,l)}function vb(e,t,n,r,a,s,i,o,u,c,l){const d=Math.floor(o),h=Math.floor(u),p=d+1,f=h+1;return(p-o)*((f-u)*Ob(e,t,n,r,a,s,i,d,h,c,l)+(u-h)*Ob(e,t,n,r,a,s,i,d,f,c,l))+(o-d)*((f-u)*Ob(e,t,n,r,a,s,i,p,h,c,l)+(u-h)*Ob(e,t,n,r,a,s,i,p,f,c,l))}function wb(e,t,n,r){const a=x.util.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let e=0;e<a;e++)s[0]*=n[e];s[1]=n[a];for(let e=a+1;e<n.length;e++)s[2]*=n[e];const i={},o=new Int32Array(n[a]),u=new x.TensorBuffer(s,r,e),c=[],l=1===s[0]&&1===s[2];for(let t=0;t<n[a];t++){let n;if(l)n=e[t].toString();else{const e=[];for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)e.push(u.get(n,t,r));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,o[t]=e,c.push(t)}}const d=s.slice();d[1]=Object.keys(i).length;const h=new x.TensorBuffer(d,r);c.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)h.set(u.get(n,e,r),n,t,r)}));const p=n.slice();return p[a]=d[1],{outputValues:h.values,outputShape:p,indices:o}}const Ib={kernelName:x.Unique,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;Bl(s,"unique");const i=r.data.get(s.dataId).values,{outputValues:o,outputShape:u,indices:c}=wb(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([c.length],"int32",c)]}};const jb={kernelName:x.Unpack,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape.length,o=a.shape[s],u=new Array(i-1);let c=0;for(let e=0;e<i;e++)e!==s&&(u[c++]=a.shape[e]);const l=new Array(i).fill(0),d=a.shape.slice();d[s]=1;const h=new Array(o);for(let e=0;e<h.length;e++){l[s]=e;const t=sh({inputs:{x:a},backend:n,attrs:{begin:l,size:d}});h[e]=Od({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return h}};const Nb={kernelName:x.UnsortedSegmentSum,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;Bl(a,"unsortedSegmentSum");const o=[],u=[],c=a.shape.length-s.shape.length;let l=s;for(let e=0;e<c;++e){const t=op({inputs:{input:l},backend:n,attrs:{dim:e+1}});l=t,u.push(t)}for(let e=0;e<i;++e){const t=x.util.createScalarValue(e,"int32"),r=n.makeTensorInfo([],"int32",t),s=Kh({inputs:{a:r,b:l},backend:n}),i=hd({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),c=fp({inputs:{a:i,b:a},backend:n}),d=_f({inputs:{x:c},backend:n,attrs:{axis:0,keepDims:!1}});o.push(d),u.push(r),u.push(s),u.push(i),u.push(c),u.push(d)}const d=lm({inputs:o,backend:n,attrs:{axis:0}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},Sb=[Id,Nd,Td,$d,xd,Ad,_d,Dd,Md,zd,Pd,Wd,Ud,qd,Xd,Qd,eh,th,nh,wd,rh,oh,lh,pd,fh,bh,ud,gh,vh,jh,Nh,Ih,Th,Ch,Sh,Ah,Rh,Fh,_h,Dh,Mh,Lh,Ph,Bh,Wh,Vh,Gh,Uh,yp,ql,Hh,Xh,rp,ip,up,dp,Np,Tp,Cp,Ep,_p,Dp,Mp,zp,Pp,Vp,Hp,Xl,qp,Oh,Xp,Zp,Qp,Zl,nf,sf,uf,df,pf,bf,yf,kf,vf,wf,Cf,$f,Af,Ef,Rf,Ff,Nf,Mf,zf,Bf,Wf,Gf,Kf,mp,Yf,Jf,em,nm,sm,im,cm,dm,hm,mm,td,gm,xm,dd,km,rd,sd,kd,vm,wm,Im,jm,Nm,Sm,Cm,Em,Fm,_m,Lm,Bm,Vm,Gm,qm,ih,qf,Ym,Zm,Jm,Qm,tb,nb,sb,ob,cb,vp,Df,db,pb,mb,gb,Fd,yb,Ib,jb,Nb,um];for(const e of Sb)Object(x.registerKernel)(e);const Tb={},Cb={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function $b(e){if(!(e in Tb)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);if(t.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete Tb[e]}),!1),1===e)return t.getContext("webgl",Cb)||t.getContext("experimental-webgl",Cb);return t.getContext("webgl2",Cb)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;Tb[e]=t}const t=Tb[e];return t.isContextLost()?(delete Tb[e],$b(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),Tb[e])}var Ab,Eb,Rb;function Fb(e,t){return[t,e]}function _b(e){const t=x.util.sizeFromShape(e),n=Math.ceil(t/4);return x.util.sizeToSquarishShape(n)}function Db(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function Mb(e,t){const n=e;let r,a,s,i,o,u,c,l,d,h;return 2===Object(x.env)().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,s=n.RGBA16F,i=n.RGBA32F,o=n.RED,c=4,l=1,d=n.HALF_FLOAT,h=n.FLOAT):(r=e.RGBA,a=e.RGBA,s=e.RGBA,i=n.RGBA,o=e.RGBA,c=4,l=4,d=null!=t?t.HALF_FLOAT_OES:null,h=e.FLOAT),u=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:c,defaultNumChannels:l,textureTypeHalfFloat:d,textureTypeFloat:h}}function zb(e,t){const n=t();return Object(x.env)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(Ab||(Ab={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(Eb||(Eb={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(Rb||(Rb={}));function Lb(e){return!!(Object(x.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function Pb(e,t){return Xb(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function Bb(e,t){const n=Xb(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(zb(e,(()=>e.shaderSource(n,t))),zb(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=Wb.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,i=a.map(((e,t)=>x.util.rightPad((t+1).toString(),s)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const u=i.slice(0,r-1),c=i.slice(r-1,r),l=i.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${x.util.rightPad(c[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(l.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}const Wb=/ERROR: [0-9]+:([0-9]+):/g;function Vb(e,t){if(zb(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function Ub(e,t,n,r,a,s,i){const o=e.getAttribLocation(t,n);return-1!==o&&(zb(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),zb(e,(()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i))),zb(e,(()=>e.enableVertexAttribArray(o))),!0)}function Gb(e,t,n,r){zb(e,(()=>function(e,t,n){Yb(e,n),zb(e,(()=>e.activeTexture(e.TEXTURE0+n))),zb(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),zb(e,(()=>e.uniform1i(n,r)))}function Hb(e,t,n){zb(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),zb(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function qb(e,t){zb(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),zb(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function Kb(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function Xb(e,t,n){const r=zb(e,(()=>t()));if(null==r)throw new Error(n);return r}function Yb(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n){throw new Error(`textureUnit must be in ${`[gl.TEXTURE0, gl.TEXTURE${n}]`}.`)}}function Zb(e,t=2){return x.util.sizeFromShape(e.slice(0,e.length-t))}function Jb(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function Qb(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[Zb(e),...Jb(e)]),t}function eg(e){return e%2==0}function tg(e,t){if(e=e.slice(-2),t=t.slice(-2),x.util.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(eg(n)&&eg(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&eg(e[0])&&eg(t[0])}let ng,rg;function ag(e,t){return null!=e.getExtension(t)}function sg(e){try{if(null!=$b(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function ig(e){if(0===e)return!1;const t=$b(e);if(1!==e){if(ag(t,"EXT_color_buffer_float"))return og(t);const e="EXT_color_buffer_half_float";if(ag(t,e)){const n=t.getExtension(e);return function(e,t){const n=Mb(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r);const a=1,s=1;e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,a,s,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,i),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const o=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(i),o}(t,n)}return!1}if(!ag(t,"OES_texture_float"))return!1;if(!ag(t,"WEBGL_color_buffer_float"))return!1;return og(t)}function og(e){const t=Mb(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n);e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function ug(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&x.util.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const cg=Object(x.env)();function lg(){let e,t,n,r,a,s,i,o,u,c;return 2===Object(x.env)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:c}}function dg(e,t,n="index"){const r=x.util.computeStrides(t);return r.map(((t,a)=>`${`int ${e[a]} = ${n} / ${t}`}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`)).join("")}function hg(e){const t=x.util.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}cg.registerFlag("HAS_WEBGL",(()=>cg.getNumber("WEBGL_VERSION")>0)),cg.registerFlag("WEBGL_VERSION",(()=>sg(2)?2:sg(1)?1:0)),cg.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),cg.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===cg.get("WEBGL_VERSION"))),cg.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),cg.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),cg.registerFlag("WEBGL_PACK",(()=>cg.getBool("HAS_WEBGL"))),cg.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>cg.getBool("WEBGL_PACK"))),cg.registerFlag("WEBGL_PACK_CLIP",(()=>cg.getBool("WEBGL_PACK"))),cg.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>!1)),cg.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>cg.getBool("WEBGL_PACK"))),cg.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>cg.getBool("WEBGL_PACK"))),cg.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>cg.getBool("WEBGL_PACK"))),cg.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>cg.getBool("WEBGL_PACK"))),cg.registerFlag("WEBGL_PACK_REDUCE",(()=>cg.getBool("WEBGL_PACK"))),cg.registerFlag("WEBGL_LAZILY_UNPACK",(()=>cg.getBool("WEBGL_PACK"))),cg.registerFlag("WEBGL_CONV_IM2COL",(()=>cg.getBool("WEBGL_PACK"))),cg.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==ng){const t=$b(e);ng=t.getParameter(t.MAX_TEXTURE_SIZE)}return ng}(cg.getNumber("WEBGL_VERSION")))),cg.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==rg){const t=$b(e);rg=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,rg)}(cg.getNumber("WEBGL_VERSION")))),cg.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=cg.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=$b(e);return t=ag(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:ag(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),cg.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>cg.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!x.device_util.isMobile())),cg.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=$b(e);if(1===e){if(!ag(t,"OES_texture_float"))return!1}else if(!ag(t,"EXT_color_buffer_float"))return!1;return og(t)}(cg.getNumber("WEBGL_VERSION")))),cg.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!cg.getBool("WEBGL_FORCE_F16_TEXTURES")&&cg.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),cg.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>ig(cg.getNumber("WEBGL_VERSION")))),cg.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=cg.getNumber("WEBGL_VERSION"))&&null!=$b(e).fenceSync;var e})),cg.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>cg.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),cg.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),cg.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>x.device_util.isMobile()&&cg.getBool("IS_CHROME")?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)}));const pg="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class fg{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Ab.DENSE;const t=_b(e),n=lg();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${dg(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class mg{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Ab.DENSE;const t=_b(e),n=lg();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${dg(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class bg{constructor(e){this.variableNames=["A"],this.outTexUsage=Eb.DOWNLOAD;const t=lg();this.outputShape=e,this.userCode=`\n      ${pg}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class gg{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Eb.DOWNLOAD;const t=lg();this.outputShape=e,this.userCode=`\n      ${pg}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class yg{constructor(e,t,n=!1){this.variableNames=["A"];const r=lg(),[a,s]=t;this.outputShape=e;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${hg(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${s};\n        int c = imod(flatIndex, ${s});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}class xg{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=lg(),[a,s]=t;this.outputShape=e;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let n=0;n<=1;n++){const o=2*t+n;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${e[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${t} < ${e[1]}) {\n              localCoords[1] += ${t};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${s};\n              c = imod(flatIndex, ${s});\n              uv = (vec2(c, r) + halfCR) / vec2(${s}.0, ${a}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${hg(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${r.output} = ${o};\n      }\n    `}}function Og(e){const t=lg();return function(e,t){const n=Xb(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(zb(e,(()=>e.shaderSource(n,t))),zb(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function kg(e){return function(e,t){const n=Xb(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return zb(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),zb(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function vg(e){return function(e,t){const n=Xb(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return zb(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),zb(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}function wg(e,t,n,r,a,s){!function(e,t){const n=Object(x.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return Xb(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return zb(e,(()=>e.bindTexture(o,i))),zb(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),zb(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),zb(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),zb(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),zb(e,(()=>e.texImage2D(o,0,r,t,n,0,a,s,null))),zb(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),i}function Ig(e){return e.internalFormatFloat}function jg(e){return e.internalFormatHalfFloat}function Ng(e){return e.downloadTextureFormat}function Sg(e){return e.internalFormatPackedFloat}function Tg(e){return e.internalFormatPackedHalfFloat}function Cg(e,t,n,r,a,s,i,o){const u=e,c=new Float32Array(function(e,t){const[n,r]=Db(e,t);return n*r*4}(s,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}class $g{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=Object(x.env)().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){Tb[e]=t}(t,e)):this.gl=$b(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===Object(x.env)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=Pb(this.gl,e),ag(this.gl,t))this.textureHalfFloatExtension=Pb(this.gl,t);else if(Object(x.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),ag(this.gl,r))this.colorBufferHalfFloatExtension=Pb(this.gl,r);else if(Object(x.env)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",ag(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!ag(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=kg(this.gl),this.indexBuffer=vg(this.gl),this.framebuffer=function(e){return Xb(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=Mb(this.gl,this.textureHalfFloatExtension)}get debug(){return Object(x.env)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;zb(e,(()=>e.finish())),zb(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),zb(e,(()=>e.deleteFramebuffer(this.framebuffer))),zb(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),zb(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),zb(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=Fb(t,n);return wg(e,a,s,Ig(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=Fb(t,n);return wg(e,a,s,jg(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=Fb(t,n);return wg(e,a,s,Ng(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){zb(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?zb(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):zb(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),zb(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,a,s){let i,o,u;zb(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,u=s.internalFormatPackedFloat),i.set(a),zb(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,o,i))),zb(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=Db(t,n);return wg(e,a,s,Tg(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=Db(t,n);return wg(e,a,s,Sg(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(qb(this.gl,this.framebuffer),this.outputTexture=null),zb(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[a,s]=Fb(t,n),i=new Uint8Array(t*n*4);return zb(e,(()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return Cg(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const a=e.createBuffer();zb(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,a)));const s=16*t*n;return zb(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),zb(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),zb(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),a}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Object(x.env)().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else Object(x.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Object(x.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return zb(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=Bb(t,e),r=Og(t),a=function(e){return Xb(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return zb(t,(()=>t.attachShader(a,r))),zb(t,(()=>t.attachShader(a,n))),function(e,t){if(zb(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,a),this.debug&&Vb(t,a),this.vertexAttrsAreBound||(this.setProgram(a),this.vertexAttrsAreBound=function(e,t,n){return zb(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),Ub(e,t,"clipSpacePos",n,3,20,0)&&Ub(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),a}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&zb(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&Vb(this.gl,this.program),zb(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return Xb(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),zb(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),Gb(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=Db(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&Vb(this.gl,this.program),Kb(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),zb(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),zb(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=Pb(this.gl,2===Object(x.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Object(x.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Object(x.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await x.util.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,Object(x.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,Object(x.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length;++t){if(!e[t]())break}return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||x.util.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Hb(this.gl,e,this.framebuffer),this.debug&&Kb(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(Hb(this.gl,this.outputTexture,this.framebuffer),this.debug&&Kb(this.gl)):qb(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;Hb(r,e,this.framebuffer),this.debug&&Kb(r),this.outputTexture=e,zb(r,(()=>r.viewport(0,0,t,n))),zb(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),zb(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:Ag}=x.backend_util;function Eg(e,t,n,r){const a=[];e.forEach((e=>{const t=x.util.sizeFromShape(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?a.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(a.push(`uniform sampler2D ${e.name};`),a.push(`uniform int offset${e.name};`))}));const s=a.join("\n"),i=e.map((e=>function(e,t,n=!1){let r="";r+=n?Fg(e):Rg(e);const a=e.shapeInfo.logicalShape,s=t.logicalShape;a.length<=s.length&&(r+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=Ag(e.shapeInfo.logicalShape,t.logicalShape),u=Wg(i),c=i-s;let l;const d=["x","y","z","w","u","v"];l=0===s?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${d[e+c]} = 0;`)).join("\n");let h="";h=i<2&&s>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${d[t+c]}`)).join(", ");let p="return outputValue;";const f=1===x.util.sizeFromShape(e.shapeInfo.logicalShape),m=1===x.util.sizeFromShape(t.logicalShape);if(1!==s||f||m){if(f&&!m)p=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=s-2,t=s-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${u} coords = getOutputCoords();\n      ${l}\n      vec4 outputValue = get${r}(${h});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&null==e.shapeInfo.flatOffset&&x.util.arraysEqual(i,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const c=Wg(u),l=Ag(e.shapeInfo.logicalShape,t.logicalShape),d=u-o;let h;const p=["x","y","z","w","u","v"];h=0===o?"":u<2&&l.length>=1?"coords = 0;":l.map((e=>`coords.${p[e+d]} = 0;`)).join("\n");let f="";f=u<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+d]}`)).join(", ");return`\n    float ${a}() {\n      ${c} coords = getOutputCoords();\n      ${h}\n      return get${r}(${f});\n    }\n  `}(e,t));return r}(e,t,r))).join("\n"),o=t.texShape,u=lg(),c=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(u);let l,d,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${_g}\n    ${Dg}\n    ${Mg}\n  `}(u);t.isPacked?(l=function(e,t){switch(e.length){case 0:return Lg();case 1:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(1===n[0])return`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `;if(1===n[1])return`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `;return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,t);case 2:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(x.util.arraysEqual(e,t))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t);default:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2);let s=a,i="",o="b, r, c";for(let t=2;t<e.length-1;t++)s*=e[e.length-t-1],i=`\n      int b${t} = index / ${s};\n      index -= b${t} * ${s};\n    `+i,o=`b${t}, `+o;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${o});\n    }\n  `}(e,t)}}(t.logicalShape,o),d=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(u)):(l=function(e,t){switch(e.length){case 0:return Lg();case 1:return function(e,t){if(1===t[0])return`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `;if(1===t[1])return`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `;return`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t);case 2:return function(e,t){if(x.util.arraysEqual(e,t))return`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `;if(1===e[1])return`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `;if(1===e[0])return`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `;return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=dg(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(e,t);case 4:return function(e,t){const n=dg(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t);case 5:return function(e,t){const n=dg(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=dg(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,o),d=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),r&&(h+=zg);return[h,c,d,s,l,i,n].join("\n")}function Rg(e){const t=e.shapeInfo.logicalShape;switch(t.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;const[r,a]=e.shapeInfo.texShape;if(1===r&&1===a)return`\n      float ${n}() {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const[s,i]=e.shapeInfo.texShape,o=Pg(t);return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${s}, ${i}, ${o});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${Bg(e)}\n      }\n    `;const r=e.shapeInfo.texShape,a=r[0],s=r[1];if(1===s&&1===a)return`\n      float ${n}(int index) {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const i=Pg(t);if(1===s)return`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${a}.0);\n        return sampleTexture(${t}, uv);\n      }\n    `;if(1===a)return`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${s}.0, 0.5);\n        return sampleTexture(${t}, uv);\n      }\n    `;return`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${s}, index + ${i});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape;if(null!=a&&x.util.arraysEqual(t,a)){const e=a[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:s,keptDims:i}=x.util.squeezeShape(t),o=s;if(o.length<t.length){const t=["row","col"];return`\n      ${Rg(Vg(e,o))}\n      float ${r}(int row, int col) {\n        return ${r}(${Ug(t,i)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));\n        ${Bg(e)}\n      }\n    `;const u=a[0],c=a[1],l=Pg(n);if(1===c)return`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${l}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;if(1===u)return`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${l}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${t[1]} + col + ${l};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[1]*t[2],s=t[2],{newShape:i,keptDims:o}=x.util.squeezeShape(t),u=i;if(u.length<t.length){const t=["row","col","depth"];return`\n        ${Rg(Vg(e,u))}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${Ug(t,o)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${s}, 1)));\n        ${Bg(e)}\n      }\n    `;const c=e.shapeInfo.texShape,l=c[0],d=c[1],h=e.shapeInfo.flatOffset;if(d===a&&null==h)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${s}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${l}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(d===s&&null==h)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${l}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;const p=Pg(n);return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${s} + depth + ${p};\n        vec2 uv = uvFromFlat(${l}, ${d}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(e);case 4:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[3],s=t[2]*a,i=t[1]*s,{newShape:o,keptDims:u}=x.util.squeezeShape(t);if(o.length<t.length){const t=["row","col","depth","depth2"];return`\n      ${Rg(Vg(e,o))}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${Ug(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${i}, ${s}, ${a}, 1)));\n        ${Bg(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,l=e.shapeInfo.texShape,d=l[0],h=l[1];if(h===i&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${h}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(h===a&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${t[1]*t[2]}, ${t[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${h}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const p=Pg(n);return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${i} + col * ${s} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${h}, index + ${p});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:u,keptDims:c}=x.util.squeezeShape(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${Rg(Vg(e,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${Ug(t,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${a})) +\n          depth3;\n        ${Bg(e)}\n      }\n    `;const l=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],p=d[1];if(p===o&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===a&&null==l)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const f=Pg(n);return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${f};\n      vec2 uv = uvFromFlat(${h}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=x.util.squeezeShape(t);if(a.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Rg(Vg(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${Ug(t,s)});\n      }\n    `}const i=t[5],o=t[4]*i,u=t[3]*o,c=t[2]*u,l=t[1]*c;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${l}, ${c}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${Bg(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],f=h[1];if(f===l&&null==d)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${c}, ${u}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==d)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;const m=Pg(n);return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${l} + col * ${c} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${m};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function Fg(e){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=lg();return`\n    vec4 ${n}() {\n      return ${r.texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e.shapeInfo.texShape,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],s=lg();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${a[0]}, ${a[1]}, index);\n      return ${s.texture2D}(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=a[0],i=a[1],o=lg();if(null!=a&&x.util.arraysEqual(t,a))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${s}.0);\n\n        return ${o.texture2D}(${n}, uv);\n      }\n    `;const u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],c=Math.ceil(t[1]/2);return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${c}, ${u[0]}, ${u[1]}, row, col);\n      return ${o.texture2D}(${n}, uv);\n    }\n  `}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===t[0]){const n=[1,2],a=["b","row","col"];return`\n        ${Fg(Vg(e,t.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${Ug(a,n)});\n        }\n      `}const i=s[0],o=s[1],u=Math.ceil(t[2]/2),c=u*Math.ceil(t[1]/2),l=lg();return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${o}, ${c}, ${u}, b, row, col);\n      return ${l.texture2D}(${n}, uv);\n    }\n  `}(e);default:return function(e){const t=e.shapeInfo.logicalShape,n=t.length,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],o=i[0],u=i[1],c=Math.ceil(t[n-1]/2);let l=c*Math.ceil(t[n-2]/2),d="int b, int row, int col",h=`b * ${l} + (row / 2) * ${c} + (col / 2)`;for(let e=2;e<n-1;e++)d=`int b${e}, `+d,l*=t[n-e-1],h=`b${e} * ${l} + `+h;const p=lg();return`\n    vec4 ${a}(${d}) {\n      int index = ${h};\n      int texR = index / ${u};\n      int texC = index - texR * ${u};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${o});\n      return ${p.texture2D}(${r}, uv);\n    }\n  `}(e)}}const _g="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Dg="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Mg="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",zg="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Lg(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function Pg(e){return`offset${e}`}function Bg(e){const t=e.name,n=x.util.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function Wg(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function Vg(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function Ug(e,t){return t.map((t=>e[t])).join(", ")}function Gg(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,a=t[n],s=a.shape;if(!x.util.arraysEqual(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;const i=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!x.util.arraysEqual(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}const{addImpl:Hg,bincountImpl:qg,bincountReduceImpl:Kg,ceilImpl:Xg,concatImpl:Yg,expImpl:Zg,expm1Impl:Jg,floorImpl:Qg,gatherV2Impl:ey,greaterImpl:ty,lessImpl:ny,linSpaceImpl:ry,logImpl:ay,maxImpl:sy,maximumImpl:iy,minimumImpl:oy,multiplyImpl:uy,negImpl:cy,prodImpl:ly,rangeImpl:dy,rsqrtImpl:hy,simpleAbsImpl:py,sliceImpl:fy,stridedSliceImpl:my,subImpl:by,tileImpl:gy,topKImpl:yy,transposeImpl:xy,uniqueImpl:Oy}=r;function ky(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function vy(e,t){return 1===t?[e]:ky(e,t)}class wy{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=vy("rc",t),r=Wg(t),a=function(e,t,n){if(1===e)return`rc > ${t[0]}`;let r="";for(let a=e-2;a<e;a++)r+=`${n[a]} >= ${t[a]}`,a<e-1&&(r+="||");return r}(t,e,n),s=function(e,t,n,r){if(1===e)return"";const a=r.slice(-2);return`\n    int r = ${a[0]};\n    int c = ${a[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),i=function(e,t){const n=e.length,r=function(e,t){const n=[];for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){let s=`${0===r?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let n=2;n<e;n++)s=`${t[t.length-1-n]},`+s;n.push(s)}return n}(n,t);if(1===n)return`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`;return`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${a}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class Iy{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=t,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${dg(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${hg(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${e[1]};\n        int cols = ${e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class jy{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=Sy(t,n),a=Ty(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=Ny(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}let i;return r===Rb.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===Rb.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===Rb.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===Rb.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===Rb.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const a=Sy(n,r),s=Ty(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);const i=Ny(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Object(x.env)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[s],c=u.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(c,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Ny(e,t,n,r,a){const s=function(e,t){switch(e){case Rb.PACKED_2X2_FLOAT32:return Sg(t);case Rb.PACKED_2X2_FLOAT16:return Tg(t);case Rb.UNPACKED_FLOAT32:return Ig(t);case Rb.UNPACKED_FLOAT16:return jg(t);case Rb.PACKED_4X1_UNSIGNED_BYTE:return Ng(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(a){const[t,n]=Db(e[0],e[1]);i=t*n}else{const[t,n]=Fb(e[0],e[1]);i=t*n}return i*function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}(n,s)}function Sy(e,t){if(e===Eb.UPLOAD)return Rb.PACKED_2X2_FLOAT32;if(e===Eb.RENDER||null==e)return function(e){return Object(x.env)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?Rb.PACKED_2X2_FLOAT32:Rb.UNPACKED_FLOAT32:e?Rb.PACKED_2X2_FLOAT16:Rb.UNPACKED_FLOAT16}(t);if(e===Eb.DOWNLOAD||e===Eb.PIXELS)return Rb.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function Ty(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class Cy{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const $y="return abs(x);";const Ay="return x;";class Ey{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class Ry{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=vy("rc",t),r=Wg(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const Fy=x.kernel_impls.whereImpl,_y={};class Dy extends x.KernelBackend{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!Object(x.env)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=$b(Object(x.env)().getNumber("WEBGL_VERSION"));this.binaryCache=((t=Object(x.env)().getNumber("WEBGL_VERSION"))in _y||(_y[t]={}),_y[t]),this.gpgpu=new $g(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new jy(this.gpgpu),this.numMBBeforeWarning=null==Object(x.env)().global.screen?1024:Object(x.env)().global.screen.height*Object(x.env)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new x.DataStorage(this,Object(x.engine)())}nextDataId(){return Dy.nextDataId++}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(e,t,n){if((Object(x.env)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Object(x.env)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:Eb.UPLOAD,refCount:1}),r}refCount(e){if(this.texData.has(e)){return this.texData.get(e).refCount}return 0}incRef(e){this.texData.get(e).refCount++}decRef(e){if(this.texData.has(e)){this.texData.get(e).refCount--}}move(e,t,n,r,a){if(Object(x.env)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:Eb.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=t;if(null!=s){let t;t=o?new Ey(i,Ay):new Cy(i,Ay);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let c,l;if(u&&(c=x.util.now()),"complex64"===r){const e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);l=x.backend_util.mergeRealAndImagArrays(e,t)}else l=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=x.util.now()-c),this.convertAndCacheOnCPU(e,l)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(null!=a){let t;t=o?new Ey(r,Ay):new Cy(r,Ay);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(!Object(x.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Object(x.env)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,c,l=null;if("complex64"!==s&&Object(x.env)().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);l=this.gpgpu.createBufferFromTexture(t.texture,..._b(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];c=x.backend_util.mergeRealAndImagArrays(t,n)}else if(null==l)c=this.getValuesFromTexture(e);else{const e=x.util.sizeFromShape(r);c=this.gpgpu.downloadFloat32MatrixFromBuffer(l,e)}null!=u&&this.disposeIntermediateTensorInfo(u);const d=this.convertAndCacheOnCPU(e,c),h=this.pendingRead.get(e);return this.pendingRead.delete(e),h.forEach((e=>e(d))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Object(x.engine)().removeDataId(e,this),this.pendingDeletes--),d}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>x.util.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Object(x.buffer)(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!Lb(n)){if(Object(x.env)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=x.util.sizeFromShape(t);if(Object(x.env)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,..._b(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}const s=Object(x.env)().getBool("WEBGL_PACK")&&!0===r,i=s?Qb(t):t,o=s?new gg(i):new bg(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),c=this.texData.get(u.dataId),l=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture,c.texShape[0],c.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),l}timerAvailable(){return Object(x.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=x.util.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=x.util.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Object(x.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);i.kernelMs=x.util.sum(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Object(x.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:x.util.now(),endMs:null}}endTimer(e){return Object(x.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=x.util.now(),e)}async getQueryTime(e){if(Object(x.env)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));const c=this.texData.get(e);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}getCPUBackend(){return Object(x.env)().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=Object(x.engine)().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(e,t=128){const n=this.getCPUBackend();return Object(x.env)().getBool("IS_TEST")||this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&e.every((e=>null==this.texData.get(e.dataId).texture&&x.util.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){x.backend_util.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return Fy(e.shape,t)}packedUnaryOp(e,t,n){const r=new Ey(e.shape,t),a=this.compileAndRun(r,[e],n);return Object(x.engine)().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=py(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Object(x.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,$y,e.dtype);const t=new Cy(e.shape,$y),n=this.compileAndRun(t,[e]);return Object(x.engine)().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&x.util.isString(n[0])){const a=n.map((e=>x.util.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return Object(x.engine)().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new Ry(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new wy(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[Zb(e.shape),...Jb(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[Zb(t),...Jb(t)],s=new Iy(a,n),i=this.runWebGLProgram(s,[r],e.dtype,null,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:a}=t,s=Qb(r);let i;i=n?new mg(s):new fg(s);return{dtype:a,shape:r,dataId:this.runWebGLProgram(i,[{shape:s,dtype:a,dataId:e}],a,null,!0).dataId}}runWebGLProgram(e,t,n,r,a=!1){const s=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(s.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===Ab.DENSE){const t=_b(e.outputShape);i.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===x.util.sizeFromShape(s.shape))return i.values=x.util.getTypedArrayFromDType(s.dtype,0),s;const o=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&x.util.sizeFromShape(t.shape)<=Object(x.env)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),o.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!tg(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),o.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(s.dataId);const c={shape:s.shape,texData:i,isUniform:!1},l=function(e,t,n){let r="";t.concat(n).forEach((e=>{const t=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0,n=e.isUniform?"uniform":e.texData.texShape;r+=`${e.shape}_${n}_${t}`}));const a=e.userCode;let s=e.constructor.name;return s+="_"+r+"_"+a,s}(e,u,c),d=this.getAndSaveBinary(l,(()=>function(e,t,n,r){const a=t.userCode,s=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),i=s.map((e=>e.shapeInfo)),o={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=Eg(s,o,a,t.packedInputs),c=e.createProgram(u);let l=null;const d=e.getUniformLocation(c,"NAN",!1);1===Object(x.env)().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(c,"INFINITY",!1));const h={};for(let n=0;n<t.variableNames.length;n++){const r=t.variableNames[n],a=!1;h[r]=e.getUniformLocation(c,r,a),h[`offset${r}`]=e.getUniformLocation(c,`offset${r}`,a)}return{program:t,source:u,webGLProgram:c,uniformLocations:h,inShapeInfos:i,outShapeInfo:o,infLoc:l,nanLoc:d}}(this.gpgpu,e,u,c))),h=null!=this.activeTimers;let p;h&&(p=this.startTimer()),function(e,t,n,r,a){Gg(t.inShapeInfos,n),Gg([t.outShapeInfo],[r]);const s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s,i[0],i[1]):e.setOutputMatrixTexture(s,i[0],i[1]),e.setProgram(t.webGLProgram),1===Object(x.env)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const a=t.program.variableNames[r],s=t.uniformLocations[a],i=t.uniformLocations[`offset${a}`];if(null!=s)if(n.isUniform)if(x.util.sizeFromShape(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,s,r)})),null!=a&&a(e,t.webGLProgram),e.executeProgram()}(this.gpgpu,d,u,c,r),o.forEach((e=>this.disposeIntermediateTensorInfo(e))),h&&(p=this.endTimer(p),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(p)}));const f=Object(x.env)().get("WEBGL_FLUSH_THRESHOLD");if(f>0){const e=x.util.now();e-this.lastGlFlushTime>f&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Object(x.env)().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===a){const e=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),e}return s}compileAndRun(e,t,n,r,a=!1){n=n||t[0].dtype;return this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){if(!this.disposed){if(!Object(x.env)().getBool("IS_TEST")){Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}))}this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0}}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Object(x.tidy)((()=>{if(!Object(x.env)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Object(x.env)().getBool("DEBUG");Object(x.env)().set("DEBUG",!1);const t=this.abs(Object(x.scalar)(1e-8)).dataSync()[0];if(Object(x.env)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;const u=null!=this.activeTimers;let c;u&&(c=x.util.now());let l=t.texShape;if(null==l&&(l=function(e,t=!1){let n=Object(x.env)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?x.util.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=x.util.squeezeShape(e);e=t.newShape}let r=x.util.sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=Zb(e);let n=2,a=2;return e.length&&([n,a]=Jb(e)),r=t*(n/2)*(a/2),x.util.sizeToSquarishShape(r).map((e=>2*e))}return x.util.sizeToSquarishShape(r)}(n,o),t.texShape=l),null!=a){const e=Qb(n);let s,i=l[1],d=l[0];const h=a instanceof Uint8Array;o?([i,d]=Db(l[0],l[1]),s=new xg(e,[d,i],h)):s=new yg(e,[d,i],h);const p=this.makeTensorInfo([d,i],r);this.texData.get(p.dataId).usage=h?Eb.PIXELS:Eb.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(p.dataId),i,d,a);const f=!0,m=this.runWebGLProgram(s,[p],r,null,f),b=this.texData.get(m.dataId);t.texture=b.texture,t.texShape=b.texShape,t.isPacked=b.isPacked,t.usage=b.usage,this.disposeIntermediateTensorInfo(p),this.texData.delete(m.dataId),t.values=null,u&&(this.uploadWaitMs+=x.util.now()-c)}else{const e=this.acquireTexture(l,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*x.util.bytesPerElement(t)}}Dy.nextDataId=0;x.device_util.isBrowser()&&Object(x.registerBackend)("webgl",(()=>new Dy),2);class My{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=x.backend_util.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class zy{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=x.backend_util.assertAndGetBroadcastShape(t,n);const a=this.outputShape.length;let s="";if(r)if(0===a||1===x.util.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else{if(s=`\n          ${Wg(a)} coords = getOutputCoords();\n        `,1===a)s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=vy("coords",a);s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}}function Ly(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const Py={kernelName:x.Identity,backendName:"webgl",kernelFunc:Ly};function By(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=Ly({inputs:{x:r},backend:n}),u=Ly({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:u},s}const Wy={kernelName:x.Complex,backendName:"webgl",kernelFunc:By},Vy="return (a < 0.) ? b * a : a;",Uy="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const Gy={kernelName:x.LeakyRelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",x.util.createScalarValue(s,"float32")),o=Object(x.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new zy(Uy,a.shape,i.shape):new My(Vy,a.shape,i.shape),u=n.runWebGLProgram(o,[a,i],a.dtype);return n.disposeIntermediateTensorInfo(i),u}},Hy="return (a < 0.) ? b * a : a;",qy="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";const Ky={kernelName:x.Prelu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=Object(x.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new zy(qy,r.shape,a.shape):new My(Hy,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}};function Xy({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{const{x:i}=a,o=s,u=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,u);return o.makeTensorInfo(i.shape,u,t)}let c;return c=Object(x.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new Ey(i.shape,t):new Cy(i.shape,e),o.runWebGLProgram(c,[i],u)}}function Yy({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{const{a:u,b:c}=i,l=o;if(r&&"complex64"===u.dtype){const t=l.texData.get(u.dataId),n=l.texData.get(c.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:u.shape},s={dataId:r.dataId,dtype:r.dtype,shape:c.shape},i=new My(e,u.shape,c.shape);return l.runWebGLProgram(i,[a,s],Object(x.upcastType)(n.dtype,r.dtype))})),s=By({inputs:{real:r,imag:a},backend:l});return l.disposeIntermediateTensorInfo(r),l.disposeIntermediateTensorInfo(a),s}const d=s||Object(x.upcastType)(u.dtype,c.dtype);if(l.shouldExecuteOnCPU([u,c])&&null!=a){const e=l.texData.get(u.dataId),t=l.texData.get(c.dataId),[n,r]=a(u.shape,c.shape,e.values,t.values,d),s=l.makeTensorInfo(r,d);return l.texData.get(s.dataId).values=n,s}let h;return h=Object(x.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new zy(t,u.shape,c.shape,n):new My(e,u.shape,c.shape),l.runWebGLProgram(h,[u,c],d)}}function Zy(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?qy:Hy;if("leakyrelu"===e)return t?Uy:Vy;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class Jy{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const c=r?e[1]:e[2],l=Math.ceil(c/2),d=r?"i * 2, rc.y":"rc.y, i * 2",h=a?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",b="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,b="result = activation(result);");const g=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let y="rc.x",x="rc.x";e[0]<t[0]?y=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n\n      const float sharedDimension = ${l}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${l}; i++) {\n          int batchA = ${y};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${d});\n          vec4 b = getMatrixB(batchB, ${h});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${g}\n\n        ${b}\n\n        setOutput(result);\n      }\n    `}}const Qy="return areal * breal - aimag * bimag;",ex="return areal * bimag + aimag * breal;";class tx{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=x.backend_util.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const nx="return a * b;";function rx(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,s=x.backend_util.upcastType(r.dtype,a.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),s=new tx(Qy,r.shape,a.shape),i=new tx(ex,r.shape,a.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],u=n.runWebGLProgram(s,o,"float32"),c=n.runWebGLProgram(i,o,"float32"),l=By({inputs:{real:u,imag:c},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),l}if(n.shouldExecuteOnCPU([r,a])){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),[i,o]=uy(r.shape,a.shape,e.values,t.values,s),u=n.makeTensorInfo(o,s);return n.texData.get(u.dataId).values=i,u}let i;return i=Object(x.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new zy(nx,r.shape,a.shape):new My(nx,r.shape,a.shape),n.runWebGLProgram(i,[r,a],s)}const ax={kernelName:x.Multiply,backendName:"webgl",kernelFunc:rx};function sx(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=n,o=x.util.sizeFromShape(a.shape),u=x.util.inferFromImplicitShape(s,o),c=x.util.sizeFromShape(u);x.util.assert(o===c,(()=>`The new shape (${u}) has ${c} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const l=i.texData.get(a.dataId);return!l.isPacked||tg(a.shape,u)||null!==l.texture&&tg(l.shape,u)?(i.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype}):function(e,t,n){const r=[Zb(e.shape),...Jb(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[Zb(t),...Jb(t)],i=new Iy(s,r),o=n.runWebGLProgram(i,[a],e.dtype,null,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}(a,u,i)}const ix={kernelName:x.Reshape,backendName:"webgl",kernelFunc:sx};class ox{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];const i=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${x.util.isInt(e)?e.toPrecision(2):e}, ones);`}let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class ux{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const c=4*Math.floor(n/4),l=n%4;let d=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,h="vec4";"all"===t?(i="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",h="bvec4"):"any"===t&&(i="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",h="bvec4");let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${c}; i += 4) {\n          int inIdx = inOffset + i;\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${c};\n        if (${1===l}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===l}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===l}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${u});\n      }\n    `}}function cx(e,t,n,r){const a=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=x.backend_util.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let s=e;for(let i=0;i<a.length;i++){const{inSize:o,windowSize:u,outSize:c}=a[i];let l,d;l="mean"===n?0===i?new ox({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:c},o):new ox({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:c}):new ux({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:c},n),d=s,s=r.runWebGLProgram(l,[s],t),d.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(d)}return s}class lx{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=Wg(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class dx{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=Wg(this.rank),a=ky("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];const i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function hx(e,t,n){const r=Object(x.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new dx(e.shape,t):new lx(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function px(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return function(e,t,n,r){const a=t,s=e.shape.length,i=x.util.parseAxisParam(a,e.shape);let o=i;const u=x.backend_util.getAxesPermutation(o,s),c=null!=u;let l=e;c&&(l=hx(e,u,r),o=x.backend_util.getInnerMostAxes(o.length,s)),x.backend_util.assertAxesAreInnerMostDims("sum",o,s);const[d,h]=x.backend_util.computeOutAndReduceShapes(l.shape,o);let p=d;n&&(p=x.backend_util.expandShapeToKeepDim(d,i));const f=x.util.sizeFromShape(h),m=sx({inputs:{x:l},attrs:{shape:[x.util.sizeFromShape(e.shape)/f,f]},backend:r}),b=cx(m,Object(x.sumOutType)(e.dtype),"sum",r),g=sx({inputs:{x:b},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(b),c&&r.disposeIntermediateTensorInfo(l),g}(a,s,i,n)}const fx={kernelName:x.Sum,backendName:"webgl",kernelFunc:px};function mx(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,i=n,o=a.shape.length,u=new Array(o);for(let e=0;e<u.length;e++)u[e]=a.shape[s[e]];let c;if(i.shouldExecuteOnCPU([a])){const e=i.texData.get(a.dataId).values,t=xy(e,a.shape,a.dtype,s,u);c=i.makeTensorInfo(u,a.dtype);i.texData.get(c.dataId).values=t}else c=hx(a,s,i);return c}const bx={kernelName:x.Transpose,backendName:"webgl",kernelFunc:mx};function gx({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const c=e.shape.length,l=t.shape.length,d=n?e.shape[c-2]:e.shape[c-1],h=r?t.shape[l-1]:t.shape[l-2],p=n?e.shape[c-1]:e.shape[c-2],f=r?t.shape[l-2]:t.shape[l-1],m=e.shape.slice(0,-2),b=t.shape.slice(0,-2),g=x.util.sizeFromShape(m),y=x.util.sizeFromShape(b),O=g===y||1===g||1===y;x.util.assert(c>=2&&l>=2&&O,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${b}).`));const k=(g>y?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([p,f]);x.util.assert(d===h,(()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const v=n?[g,d,p]:[g,p,d],w=r?[y,f,h]:[y,h,f],I=sx({inputs:{x:e},backend:a,attrs:{shape:v}}),j=sx({inputs:{x:t},backend:a,attrs:{shape:w}}),N=[I,j],S=Math.max(g,y),T=n?I.shape[1]:I.shape[2],C=null!=s,$=null!=i,A="leakyrelu"===u,E=null!=u?Zy(u,!0):null;let R;if((1===p||1===f)&&T>1e3&&!1===(C||$||A||null!=E)){let e=I,t=j;n&&(e=mx({inputs:{x:I},backend:a,attrs:{perm:[0,2,1]}}),N.push(e)),r&&(t=mx({inputs:{x:j},backend:a,attrs:{perm:[0,2,1]}}),N.push(t));const s=1===f;let i=e;1!==f&&(i=sx({inputs:{x:e},backend:a,attrs:{shape:[S,T,1]}}),N.push(i));const o=1===f?2:1;let u=t;s&&(u=sx({inputs:{x:t},backend:a,attrs:{shape:[S,1,T]}}),N.push(u));const c=rx({inputs:{a:i,b:u},backend:a});R=px({inputs:{x:c},backend:a,attrs:{axis:o,keepDims:!0}}),N.push(c)}else{const u=Object(x.upcastType)(e.dtype,t.dtype),c=new Jy(v,w,[S,p,f],n,r,C,E,$,A),l=[I,j];if(null!=s&&l.push(s),$&&l.push(i),A){const e=a.makeTensorInfo([],"float32",x.util.createScalarValue(o,"float32"));l.push(e),N.push(e)}R=a.runWebGLProgram(c,l,u)}const F=sx({inputs:{x:R},backend:a,attrs:{shape:k}});N.push(R);for(const e of N)a.disposeIntermediateTensorInfo(e);return F}const yx={kernelName:x._FusedMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:c,activation:l,leakyreluAlpha:d}=r;return gx({a:a,b:s,transposeA:u,transposeB:c,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:d,activation:l})}},xx="return abs(x);";const Ox={kernelName:x.Abs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=py(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let a;return a=Object(x.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Ey(r.shape,xx):new Cy(r.shape,xx),n.runWebGLProgram(a,[r],r.dtype)}},kx=Xy({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),vx={kernelName:x.Acos,backendName:"webgl",kernelFunc:kx},wx=Xy({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),Ix={kernelName:x.Acosh,backendName:"webgl",kernelFunc:wx},jx="return a + b;",Nx=Yy({opSnippet:jx,packedOpSnippet:jx,supportsComplex:!0,cpuKernelImpl:Hg}),Sx={kernelName:x.Add,backendName:"webgl",kernelFunc:Nx};class Tx{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class Cx{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const $x={kernelName:x.AddN,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,a=n;if(1===a.length)return Ly({inputs:{x:a[0]},backend:r});if(a.length>Object(x.env)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),s=e({inputs:a.slice(t),backend:r});return e({inputs:[n,s],backend:r})}const s=a.map((e=>e.dtype)).reduce(((e,t)=>Object(x.upcastType)(e,t))),i=a.map((e=>e.shape)),o=Object(x.env)().getBool("WEBGL_PACK")?new Cx(a[0].shape,i):new Tx(a[0].shape,i);return r.runWebGLProgram(o,a,s)}};const Ax={kernelName:x.All,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=x.util.parseAxisParam(s,a.shape);let c=u;const l=x.backend_util.getAxesPermutation(c,o);let d=a;null!=l&&(d=mx({inputs:{x:a},backend:n,attrs:{perm:l}}),c=x.backend_util.getInnerMostAxes(c.length,o)),x.backend_util.assertAxesAreInnerMostDims("all",c,o);const[h,p]=x.backend_util.computeOutAndReduceShapes(d.shape,c),f=sx({inputs:{x:d},backend:n,attrs:{shape:[-1,x.util.sizeFromShape(p)]}}),m=cx(f,f.dtype,"all",n);let b;if(i){b=sx({inputs:{x:m},backend:n,attrs:{shape:x.backend_util.expandShapeToKeepDim(h,u)}})}else b=sx({inputs:{x:m},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=l&&n.disposeIntermediateTensorInfo(d),b}};const Ex={kernelName:x.Any,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=x.util.parseAxisParam(s,a.shape);let c=u;const l=x.backend_util.getAxesPermutation(c,o);let d=a;null!=l&&(d=mx({inputs:{x:a},backend:n,attrs:{perm:l}}),c=x.backend_util.getInnerMostAxes(c.length,o)),x.backend_util.assertAxesAreInnerMostDims("any",c,o);const[h,p]=x.backend_util.computeOutAndReduceShapes(d.shape,c),f=sx({inputs:{x:d},backend:n,attrs:{shape:[-1,x.util.sizeFromShape(p)]}}),m=cx(f,f.dtype,"any",n);let b;if(i){b=sx({inputs:{x:m},backend:n,attrs:{shape:x.backend_util.expandShapeToKeepDim(h,u)}})}else b=sx({inputs:{x:m},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=l&&n.disposeIntermediateTensorInfo(d),b}};class Rx{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class Fx{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,x.util.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,u=Wg(o),c=vy("coords",o);let l,d;if(1===s){d=o+1;const e=Wg(d);l=`\n        ${e} sourceLocR = ${e}(${c.join()}, 0);\n        ++${c[o-1]};\n        ${e} sourceLocG = ${e}(${c.join()}, 0);\n        ++${c[o-2]};\n        ${e} sourceLocA = ${e}(${c.join()}, 0);\n        --${c[o-1]};\n        ${e} sourceLocB = ${e}(${c.join()}, 0);\n        --${c[o-2]};`}else d=o,l=`\n        ${u} sourceLocR = coords;\n        ++${c[o-1]};\n        ${u} sourceLocG = coords;\n        ++${c[o-2]};\n        ${u} sourceLocA = coords;\n        --${c[o-1]};\n        ${u} sourceLocB = coords;\n        --${c[o-2]};`;const h=["x","y","z","w","u","v"].slice(0,d),p="."+h[d-1],f=h.map((e=>"int "+e)),m=vy("sourceLocR",d-1).concat("inIdx.r"),b=vy("sourceLocG",d-1).concat("inIdx.g"),g=vy("sourceLocB",d-1).concat("inIdx.b"),y=vy("sourceLocA",d-1).concat("inIdx.a"),O="max"===n?"greaterThan":"lessThan",k=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()})));`,v=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${b.join()}) : 0.,\n            hasNextRow ? getAChannel(${g.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,w=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${h.join()}),\n                                          vec2(${h.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${h.join()}),\n                               vec2(${h.slice(-2).join()}));\n      }\n      ${w}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${c[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${c[o-2]} < ${i[o-2]-1};\n        ${l}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${k}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${O}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function _x(e,t,n,r=null){let a=t.shape[0],s=t.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);const i=x.backend_util.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},u=new Rx(o,n,null==r),c=[t];null!=r&&c.push(r);const l=e.runWebGLProgram(u,c,"int32");if(1===l.shape[1])return l;const d=_x(e,t,n,l);return e.disposeIntermediateTensorInfo(l),d}function Dx(e,t,n,r=null){const a=null!=r?r.shape:t.shape,s=a[a.length-1],i=x.backend_util.computeOptimalWindowSize(s),o=new Fx(a,i,n,null==r),u=null==r?[t]:[t,r],c=e.runWebGLProgram(o,u,"int32");if(c.shape.length===t.shape.length){const r=Dx(e,t,n,c);return e.disposeIntermediateTensorInfo(c),r}return c}function Mx(e,t,n,r){const a=[n];if(x.backend_util.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!Object(x.env)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],[s,i]=x.backend_util.computeOutAndReduceShapes(t.shape,a),o=x.util.sizeFromShape(i),u=sx({inputs:{x:t},backend:e,attrs:{shape:[-1,o]}});n.push(u);const c=_x(e,u,r);n.push(c);const l=sx({inputs:{x:c},backend:e,attrs:{shape:s}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),l}return Dx(e,t,r)}const zx={kernelName:x.ArgMax,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let i=x.util.parseAxisParam(s,a.shape);const o=x.backend_util.getAxesPermutation(i,a.shape.length);let u=a;const c=[];null!=o&&(u=mx({inputs:{x:a},backend:n,attrs:{perm:o}}),c.push(u),i=x.backend_util.getInnerMostAxes(i.length,u.shape.length)),x.backend_util.assertAxesAreInnerMostDims("argMax",[i[0]],u.shape.length);const l=Mx(n,u,i[0],"max");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};const Lx={kernelName:x.ArgMin,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let i=x.util.parseAxisParam(s,a.shape);const o=x.backend_util.getAxesPermutation(i,a.shape.length);let u=a;const c=[];null!=o&&(u=mx({inputs:{x:a},backend:n,attrs:{perm:o}}),c.push(u),i=x.backend_util.getInnerMostAxes(i.length,u.shape.length)),x.backend_util.assertAxesAreInnerMostDims("argMin",[i[0]],u.shape.length);const l=Mx(n,u,i[0],"min");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}},Px=Xy({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),Bx={kernelName:x.Asin,backendName:"webgl",kernelFunc:Px},Wx=Xy({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),Vx={kernelName:x.Asinh,backendName:"webgl",kernelFunc:Wx},Ux=Xy({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),Gx={kernelName:x.Atan,backendName:"webgl",kernelFunc:Ux},Hx=Yy({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),qx={kernelName:x.Atan2,backendName:"webgl",kernelFunc:Hx},Kx=Xy({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),Xx={kernelName:x.Atanh,backendName:"webgl",kernelFunc:Kx};class Yx{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,b=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let g="0.0";if(f||(g="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${h}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${l};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${c}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:b:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let y=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(y="avgValue / count");const x=4*Math.floor(s/4),O=s%4,k=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${h}, ${p});\n      const float initializationValue = ${g};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${g});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${l};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${c};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              getValue(batch, xR, xC + 3 * ${c}, d)\n            );\n\n            ${k}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===O}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${2===O}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${k}\n          } else if (${3===O}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              initializationValue\n            );\n\n            ${k}\n          }\n        }\n        setOutput(${y});\n      }\n    `}}class Zx{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,c=e.dilationDepth,l=e.dilationHeight,d=e.dilationWidth,h=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,b=e.padInfo.top,g=e.padInfo.left;this.outputShape=e.outShape;const y="avg"===t;let x="0.0";if(y||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${b}, ${g});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${h};\n              wD += ${c}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${l}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let O=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(O="avgValue / count");const k=4*Math.floor(s/4),v=s%4,w=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${b}, ${g});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${c}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${k}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${w}\n            }\n\n            int xC = xCCorner + ${k};\n            if (${1===v}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${w}\n            } else if (${2===v}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${w}\n            } else if (${3===v}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${w}\n            }\n          }\n          setOutput(${O});\n        }\n      }\n    `}}const Jx={kernelName:x.AvgPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;ug(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;x.util.assert(x.backend_util.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const c=x.backend_util.computePool2DInfo(a.shape,s,i,1,o,u);if(1===c.filterWidth&&1===c.filterHeight&&x.util.arraysEqual(c.inShape,c.outShape))return Ly({inputs:{x:a},backend:n});const l=new Yx(c,"avg",!1);return n.runWebGLProgram(l,[a],"float32")}};const Qx={kernelName:x.AvgPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:c}=r,l=x.backend_util.computePool3DInfo(a.shape,s,i,[1,1,1],o,u,c),d=new Zx(l,"avg",!1);return n.runWebGLProgram(d,[a],"float32")}};class eO{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.top,l=u-1-e.padInfo.left,d=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${c}, ${l});\n      const float avgMultiplier = float(${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class tO{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,l=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=l-1-e.padInfo.front,f=d-1-e.padInfo.top,m=h-1-e.padInfo.left,b=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${b});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${l};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${h};\n                wC += ${c}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const nO={kernelName:x.AvgPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:u,pad:c,dimRoundingMode:l}=r,d=x.backend_util.computePool3DInfo(i.shape,o,u,[1,1,1],c,l),h=new tO(d);return n.runWebGLProgram(h,[a],i.dtype)}};const rO={kernelName:x.AvgPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;ug([a,s],"avgPoolGrad");const{filterSize:o,strides:u,pad:c}=r,l=x.backend_util.computePool2DInfo(i.shape,o,u,1,c),d=new eO(l);return n.runWebGLProgram(d,[a],i.dtype)}};const aO={kernelName:x.BatchMatMul,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:a,b:s}=t,{transposeA:i,transposeB:o}=r;return gx({a:a,b:s,transposeA:i,transposeB:o,backend:n})}};class sO{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],x.backend_util.assertAndGetBroadcastShape(e,t),x.backend_util.assertAndGetBroadcastShape(e,n);let i="0.0";null!=r&&(x.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(x.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class iO{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],x.backend_util.assertAndGetBroadcastShape(e,t),x.backend_util.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=r&&(x.backend_util.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(x.backend_util.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const oO={kernelName:x.FusedBatchNorm,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:a,variance:s,offset:i,scale:o}=e;x.util.assert(a.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),x.util.assert(null==i||a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),x.util.assert(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const c=[r,a,s];let l=null;null!=i&&(l=i.shape,c.push(i));let d=null;null!=o&&(d=o.shape,c.push(o));const h=Object(x.env)().getBool("WEBGL_PACK_NORMALIZATION")?new iO(r.shape,a.shape,s.shape,l,d,u):new sO(r.shape,a.shape,s.shape,l,d,u);return t.runWebGLProgram(h,c,c[0].dtype)}};class uO{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=Wg(this.rank),n=`uniform int start[${this.rank}];`,r=function(e){if(1===e)return"sourceLoc";if(e<=6)return cO.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let a;a=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${cO[t]} = start[${t}] + coords.${cO[t]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${a}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}const cO=["x","y","z","w","u","v"];class lO{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;const t=Wg(this.rank),n=vy("coords",this.rank),r=vy("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}function dO(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,u]=x.slice_util.parseSliceParams(a,s,i);if(x.slice_util.assertParamsValid(a,o,u),0===x.util.sizeFromShape(u))return n.makeTensorInfo(u,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=fy(e.values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,t)}const{isPacked:c}=n.texData.get(a.dataId),l=x.slice_util.isSliceContinous(a.shape,o,u);if(c||!l){const e=Object(x.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new lO(u):new uO(u),t=e.getCustomSetupFunc(o);return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){const a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=x.slice_util.computeFlatOffset(t,x.util.computeStrides(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};const u=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,u+1),s}(a,o,u,n)}const hO={kernelName:x.Slice,backendName:"webgl",kernelFunc:dO},pO={kernelName:x.BatchToSpaceND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;x.util.assert(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=s.reduce(((e,t)=>e*t)),u=x.backend_util.getReshaped(a.shape,s,o),c=x.backend_util.getPermuted(u.length,s.length),l=x.backend_util.getReshapedPermuted(a.shape,s,o),d=x.backend_util.getSliceBeginCoords(i,s.length),h=x.backend_util.getSliceSize(l,i,s.length),p=[],f=sx({inputs:{x:a},backend:n,attrs:{shape:u}}),m=mx({inputs:{x:f},backend:n,attrs:{perm:c}}),b=sx({inputs:{x:m},backend:n,attrs:{shape:l}}),g=dO({inputs:{x:b},backend:n,attrs:{begin:d,size:h}});return p.push(f),p.push(m),p.push(b),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}};const fO={kernelName:x.Bincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),u=n.readSync(s.dataId),c=qg(o,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,c)}},mO=Yy({opSnippet:"return float(a != b);",dtype:"bool"}),bO={kernelName:x.NotEqual,backendName:"webgl",kernelFunc:mO};function gO(e){const{inputs:t,backend:n}=e,{input:r}=t;return Ly({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const yO={kernelName:x.Real,backendName:"webgl",kernelFunc:gO};const xO={kernelName:x.Cast,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:a}=t,{x:s}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===s.dtype)return Ly({inputs:{x:s},backend:r});const t=x.zeros(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=By({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===s.dtype){const t=gO({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!x.util.hasEncodingLoss(s.dtype,i)){const e=Ly({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new Cy(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",x.util.getTypedArrayFromDType("bool",1)),t=mO({inputs:{a:s,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},OO="return ceil(x);",kO=Xy({opSnippet:OO,packedOpSnippet:OO,cpuKernelImpl:Xg}),vO={kernelName:x.Ceil,backendName:"webgl",kernelFunc:kO};class wO{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}class IO{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}const jO={kernelName:x.ClipByValue,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r;let o;o=Object(x.env)().getBool("WEBGL_PACK_CLIP")?new IO(a.shape):new wO(a.shape);const u=o.getCustomSetupFunc(s,i);return n.runWebGLProgram(o,[a],a.dtype,u)}};class NO{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function SO(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const TO={kernelName:x.ComplexAbs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new NO(r.shape),i=[SO(r,a.complexTensorInfos.real),SO(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}};class CO{constructor(e){this.outputShape=[],this.outputShape=x.backend_util.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class $O{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=x.backend_util.computeOutShape(e,t);const n=this.outputShape,r=n.length,a=Wg(r),s=vy("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const u=i[t],c=i.slice(-2),l=i.join();let d=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${l}), vec2(${c.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];d+=`\n        if (${u} < ${o[e]}  && ${u} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${AO(i,u,t)}),\n            vec2(${AO(c,u,t)}));\n        }`}const h=o.length,p=o[o.length-1];d+=`\n        return getChannel(\n          getT${h}(${AO(i,u,p)}),\n          vec2(${AO(c,u,p)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${d}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}function AO(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function EO(e){const{inputs:t,backend:n}=e,{input:r}=t;return Ly({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const RO={kernelName:x.Imag,backendName:"webgl",kernelFunc:EO};function FO(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>gO({inputs:{input:e},backend:n}))),a=e.map((e=>EO({inputs:{input:e},backend:n}))),s=FO(r,t,n),i=FO(a,t,n),o=By({inputs:{real:s,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),a.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}if("string"===r){const{tensors2D:a,outShape:s}=_O(e,t,n),i=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=1===a[0].shape[0],u=Yg(i,s,r,o),c=x.backend_util.computeOutShape(e.map((e=>e.shape)),t),l=n.makeTensorInfo(c,r,u);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}if(e.length>Object(x.env)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),a=FO(e.slice(0,r),t,n),s=FO(e.slice(r),t,n),i=FO([a,s],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}if(Object(x.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const a=new $O(e.map((e=>e.shape)),t);return n.runWebGLProgram(a,e,r)}const{tensors2D:a,outShape:s}=_O(e,t,n),i=new CO(a.map((e=>e.shape))),o=n.runWebGLProgram(i,a,r);a.forEach((e=>n.disposeIntermediateTensorInfo(e)));const u=sx({inputs:{x:o},attrs:{shape:s},backend:n});return n.disposeIntermediateTensorInfo(o),u}function _O(e,t,n){const r=x.backend_util.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>sx({inputs:{x:e},attrs:{shape:[-1,x.util.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:r}}function DO(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=x.util.parseAxisParam(a,t[0].shape)[0],i=x.backend_util.computeOutShape(t.map((e=>e.shape)),s);if(0===x.util.sizeFromShape(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>x.util.sizeFromShape(e.shape)>0));if(1===o.length)return Ly({inputs:{x:o[0]},backend:n});const u=o.map((e=>e.shape));return x.backend_util.assertParamsConsistent(u,s),FO(o,s,n)}const MO={kernelName:x.Concat,backendName:"webgl",kernelFunc:DO};class zO{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,c=e.dilationHeight,l=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,b=m?1:2,g=m?2:3,y=m?3:1;let x="",O="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,O="result = activation(result);");const k=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${b}], coords[${g}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${c};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${l};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${k}\n        ${O}\n        setOutput(result);\n      }\n    `}}class LO{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,c=e.dilationWidth,l=e.filterDepth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${l}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h}; wC++) {\n              int xC = xCCorner + wC * ${c};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class PO{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:r,inChannels:a,strideWidth:s,strideHeight:i,padInfo:o,outWidth:u,dilationWidth:c,dilationHeight:l,dataFormat:d}=n,{left:h,top:p}=o,f=a*r,m=lg(),b="channelsLast"===d,g=b?0:1,y=b?1:2;let x="";for(let n=0;n<=1;n++)for(let r=0;r<=1;r++)x+=`\n          blockIndex = rc.y + ${r};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\n            offsetY = int(blockIndex / (${u})) * ${i} - ${p};\n            d0 = offsetY + ${l} * (pos / ${f});\n\n            if(d0 < ${t[g]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${u}.) * ${s}. - ${h}.);\n              d1 = offsetX + ${c} * (int(mod(float(pos), ${f}.) / ${a}.));\n\n              if(d1 < ${t[y]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${a}.));\n\n                if (${b}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+r}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+r}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}function BO({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const u=e.shape,c=r.texData.get(e.dataId),l=n.inChannels,d=u[0]*u[1]*u[2],h=n.outChannels,p="channelsLast"===n.dataFormat;let f;const m=[],b=(1===d||1===h)&&l>1e3,g=u[2]%2!=0&&!!c.isPacked;if(!b&&Object(x.env)().getBool("WEBGL_LAZILY_UNPACK")&&Object(x.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&g){const l=p?u[0]*u[1]*(u[2]+1):u[0]*u[2]*(u[3]+1),d={dataId:e.dataId,shape:[1,l,n.inChannels],dtype:e.dtype},h=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,x.util.assert(tg(c.shape,d.shape),(()=>`packed reshape ${c.shape} to ${d.shape} isn't free`));const b=sx({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(b);const g=gx({a:d,b:b,backend:r,transposeA:false,transposeB:false,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),y=r.texData.get(g.dataId);x.util.assert(y.isPacked,(()=>"batchMatMul result is expected to be packed")),c.shape=h,y.shape=n.outShape,f=Ly({inputs:{x:g},backend:r}),f.shape=n.outShape,m.push(g)}else{const c=sx({inputs:{x:e},backend:r,attrs:{shape:[1,p?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],n.inChannels]}}),l=sx({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),d=gx({a:c,b:l,transposeA:false,transposeB:false,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});f=sx({inputs:{x:d},backend:r,attrs:{shape:n.outShape}}),m.push(c),m.push(l),m.push(d)}for(const e of m)r.disposeIntermediateTensorInfo(e);return f}function WO({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:u,filterHeight:c,inChannels:l,outWidth:d,outHeight:h,dataFormat:p}=n,f="channelsLast"===p,m=u*c*l,b=h*d,g=[m,b],y=[],O=sx({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),k=sx({inputs:{x:t},backend:r,attrs:{shape:[1,m,x.util.sizeFromShape(t.shape)/m]}});y.push(O),y.push(k);const v=new PO(g,O.shape,n),w=r.runWebGLProgram(v,[O],"float32"),I=sx({inputs:{x:w},backend:r,attrs:{shape:[1,g[0],g[1]]}});y.push(w),y.push(I);const j=null!=a,N=null!=s,S="leakyrelu"===o,T=o?Zy(o,!0):null,C=new Jy(I.shape,k.shape,[1,b,n.outChannels],!0,!1,j,T,N,S),$=[I,k];if(a&&$.push(a),N&&$.push(s),S){const e=r.makeTensorInfo([],"float32",x.util.createScalarValue(i,"float32"));$.push(e),y.push(e)}const A=r.runWebGLProgram(C,$,"float32"),E=sx({inputs:{x:A},backend:r,attrs:{shape:f?[1,h,d,n.outChannels]:[1,n.outChannels,h,d]}});y.push(A);for(const e of y)r.disposeIntermediateTensorInfo(e);return E}const VO={kernelName:x.Conv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:c,dimRoundingMode:l}=r,d=x.backend_util.convertConv2DDataFormat(u),h=x.backend_util.computeConv2DInfo(a.shape,s.shape,i,c,o,l,!1,d);let p;if(1!==h.filterHeight||1!==h.filterWidth||1!==h.dilationHeight||1!==h.dilationWidth||1!==h.strideHeight||1!==h.strideWidth||"SAME"!==h.padInfo.type&&"VALID"!==h.padInfo.type)if(Object(x.env)().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])p=WO({x:a,filter:s,convInfo:h,backend:n});else{const e=new zO(h);p=n.runWebGLProgram(e,[a,s],"float32")}else p=BO({x:a,filter:s,convInfo:h,backend:n});const f=sx({inputs:{x:p},backend:n,attrs:{shape:h.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class UO{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class GO{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=s?1:2,c=s?2:3,l=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${l}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class HO{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class qO{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,c=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${c});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const KO={kernelName:x.Conv2DBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:c,filterShape:l}=r,d=x.backend_util.convertConv2DDataFormat(u),h=x.backend_util.computeConv2DInfo(a.shape,l,i,1,o,c,!1,d),p=new UO(h);return n.runWebGLProgram(p,[a,s],"float32")}};const XO={kernelName:x.Conv2DBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:c,dimRoundingMode:l}=r,d=x.backend_util.convertConv2DDataFormat(c),h=x.backend_util.computeConv2DInfo(i,s.shape,o,1,u,l,!1,d),p=new GO(h);return n.runWebGLProgram(p,[a,s],"float32")}};const YO={kernelName:x.Conv3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r,c=x.backend_util.computeConv3DInfo(a.shape,s.shape,i,u,o),l=new LO(c);return n.runWebGLProgram(l,[a,s],"float32")}};const ZO={kernelName:x.Conv3DBackpropFilterV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:u}=r,c=x.backend_util.computeConv3DInfo(a.shape,u,i,1,o),l=new HO(c);return n.runWebGLProgram(l,[a,s],"float32")}};const JO={kernelName:x.Conv3DBackpropInputV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:u}=r,c=x.backend_util.computeConv3DInfo(u,s.shape,o,1,i),l=new qO(c);return n.runWebGLProgram(l,[a,s],"float32")}},QO=Xy({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),ek={kernelName:x.Cos,backendName:"webgl",kernelFunc:QO},tk=Xy({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),nk={kernelName:x.Cosh,backendName:"webgl",kernelFunc:tk};class rk{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,i,o,u]=e,[c]=t,[l,d]=n;this.outputShape=[c,l,d,u];const h="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,b,g]=l>1?[""+(i-1)/(l-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[y,x,O]=d>1?[""+(o-1)/(d-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${b};\n        float width_scale = ${x};\n\n        float in_y = ${g};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${O};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${h} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const ak={kernelName:x.CropAndResize,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:c}=r,l=new rk(a.shape,s.shape,o,u,c);return n.runWebGLProgram(l,[a,s,i],"float32")}};class sk{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;const r=e.length,a=t?"0.0":`getX(${ik(r,"coords")})`,s=e[e.length-1];let i="",o="";t?(i=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${s}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${Wg(r)} coords = getOutputCoords();\n        int end = ${ok(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${ok(r,"coords")} = idx;\n          val += getX(${ik(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.index&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}}function ik(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function ok(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const uk={kernelName:x.Cumsum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,u=a.shape.length,c=x.backend_util.getAxesPermutation([s],u);let l=a;null!=c&&(l=mx({inputs:{x:a},backend:n,attrs:{perm:c}}));const d=x.backend_util.getInnerMostAxes(1,u)[0];if(d!==u-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${a.shape.length-1} but got axis=${s}`);const h=l.shape[d];let p=Ly({inputs:{x:l},backend:n});for(let e=0;e<=Math.ceil(Math.log2(h))-1;e++){const t=new sk(l.shape,!1,o),r=t.getCustomSetupFunc(e),a=p;p=n.runWebGLProgram(t,[p],p.dtype,r),n.disposeIntermediateTensorInfo(a)}if(i){const e=new sk(l.shape,i,o),t=p;p=n.runWebGLProgram(e,[p],p.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=c){const e=mx({inputs:{x:p},backend:n,attrs:{perm:x.backend_util.getUndoAxesPermutation(c)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(l),e}return p}};const ck={kernelName:x.DenseBincount,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=qg(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=Kg(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};class lk{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const dk={kernelName:x.DepthToSpace,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;x.util.assert(s>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${s}`));const o=a.shape[0],u="NHWC"===i?a.shape[1]:a.shape[2],c="NHWC"===i?a.shape[2]:a.shape[3],l="NHWC"===i?a.shape[3]:a.shape[1],d=u*s,h=c*s,p=l/(s*s),f=new lk("NHWC"===i?[o,d,h,p]:[o,p,d,h],s,i);return n.runWebGLProgram(f,[a],a.dtype)}};class hk{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.inHeight,i=e.inWidth,o=e.padInfo.top,u=e.padInfo.left,c=e.strideHeight,l=e.strideWidth,d=e.dilationHeight,h=e.dilationWidth,p=e.filterHeight,f=e.filterWidth,m=e.outChannels/e.inChannels;let b="",g="";n&&(b=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,g="result = activation(result);");const y=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${b}\n\n      const ivec2 strides = ivec2(${c}, ${l});\n      const ivec2 pads = ivec2(${o}, ${u});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${m};\n        int q = d2 - d1 * ${m};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${d};\n\n          if (xR < 0 || xR >= ${s}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${i}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${y}\n        ${g}\n        setOutput(result);\n      }\n    `}}class pk{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const s=e.inHeight,i=e.inWidth,o=e.padInfo.top,u=e.padInfo.left,c=e.strideHeight,l=e.strideWidth,d=e.dilationHeight,h=e.dilationWidth,p=e.filterHeight,f=e.filterWidth,m=f;let b="int xR; int xC; int xCOffset;";for(let e=0;e<p;e++)for(let t=0;t<f;t++)b+=`\n          vec4 xTexelR${e}C${2*t} = vec4(0.);\n          vec4 wR${e}C${t} = vec4(0.);\n          vec4 xR${e}C${t} = vec4(0.);`;for(let e=0;e<p;e++)for(let t=0;t<m;t++){const n=2*t;if(b+=`\n          xR = xRCorner + ${e*d};\n          xC = xCCorner + ${n*h};\n        `,1===l){if(n<f&&(b+=u%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    xTexelR${e}C${n}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${s} && xCOffset >= 0 && xCOffset < ${i}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${i}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${e}C${n} = vec4(previous.zw, xTexelR${e}C${n}.xy);\n                } else {\n                  xR${e}C${n} = vec4(0, 0, xTexelR${e}C${n}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${s} && xC >= 0 && xC < ${i}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xR${e}C${n} = xTexelR${e}C${n};\n              `,n+1<f)){const t=u%2==0?x.util.nearestLargerEven(h):h;h%2==0&&u%2==1||h%2!=0&&u%2!=1?(b+=`\n                  xCOffset = xC + ${u%2} + ${t};\n\n                  if(xR >= 0 && xR < ${s} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,h>1&&(b+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${s} &&\n                      xCOffset >= 0 && xCOffset < ${i}) {\n                      xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${e}C${n} = vec4(0.);\n                    }\n                  `),b+=`\n                  xR${e}C${n+1} = vec4(\n                    xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.xy);\n                `):b+=`\n                  xCOffset = xC + ${t};\n\n                  if(xR >= 0 && xR < ${s} &&\n                    xCOffset >= 0 && xCOffset < ${i}) {\n                    xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${e}C${n+1} = xTexelR${e}C${n+2};\n                `}}else n<f&&(b+=`\n              if(xR >= 0 && xR < ${s}) {\n            `,u%2==1?(b+=`\n                xCOffset = xC + 1 - ${l};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${i}) {\n                  xTexelR${e}C${n+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${e}C${n+2} = vec4(0.);\n                }\n\n                xR${e}C${n} = vec4(\n                  xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.zw);\n              `,n+1<f&&(b+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${l};\n                  if(xCOffset >= 0 && xCOffset < ${i}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${e}C${n+1} = vec4(xTexelR${e}C${n+2}.xy, final.xy);\n                `)):(b+=`\n                if(xC >= 0 && xC < ${i}) {\n                  xTexelR${e}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${e}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + ${l};\n                if(xCOffset >= 0 && xCOffset < ${i}) {\n                  xTexelR${e}C${n+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${e}C${n+2} = vec4(0.);\n                }\n\n                xR${e}C${n} = vec4(\n                  xTexelR${e}C${n}.xy, xTexelR${e}C${n+2}.xy);\n              `,n+1<f&&(b+=`\n                  xR${e}C${n+1} = vec4(\n                    xTexelR${e}C${n}.zw, xTexelR${e}C${n+2}.zw);\n                `)),b+="}");n<f&&(b+=`\n            vec4 wTexelR${e}C${n} = getW(${e}, ${n}, d1, q);\n            wR${e}C${n} = vec4(wTexelR${e}C${n}.xz, wTexelR${e}C${n}.xz);\n          `,n+1<f&&(b+=`\n              vec4 wTexelR${e}C${n+1} = getW(${e}, ${n+1}, d1, q);\n              wR${e}C${n+1} =\n                vec4(wTexelR${e}C${n+1}.xz, wTexelR${e}C${n+1}.xz);`))}for(let e=0;e<p;e++)for(let t=0;t<f;t++)b+=`dotProd += xR${e}C${t} * wR${e}C${t};`;let g="",y="";n&&(g=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,y="result = activation(result);");const O=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${c}, ${l});\n      const ivec2 pads = ivec2(${o}, ${u});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${b}\n\n        vec4 result = dotProd;\n        ${O}\n        ${y}\n        setOutput(result);\n      }\n    `}}const fk={kernelName:x.DepthwiseConv2dNative,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:c}=r;let l=u;null==l&&(l=[1,1]),x.util.assert(x.backend_util.eitherStridesOrDilationsAreOne(i,l),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${l}'`));const d=x.backend_util.computeConv2DInfo(a.shape,s.shape,i,l,o,c,!0);let h;return h=Object(x.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels==1?new pk(d):new hk(d),n.runWebGLProgram(h,[a,s],"float32")}};class mk{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class bk{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const gk={kernelName:x.DepthwiseConv2dNativeBackpropFilter,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:c,filterShape:l}=r,d=x.backend_util.computeConv2DInfo(a.shape,l,i,o,u,c,!0),h=new mk(d);return n.runWebGLProgram(h,[a,s],"float32")}};const yk={kernelName:x.DepthwiseConv2dNativeBackpropInput,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:c,inputShape:l}=r,d=x.backend_util.computeConv2DInfo(l,s.shape,i,o,u,c,!0),h=new bk(d);return n.runWebGLProgram(h,[a,s],"float32")}};class xk{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const Ok={kernelName:x.Diag,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=x.util.sizeFromShape(r.shape),i=sx({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new xk(s),u=n.runWebGLProgram(o,[i],i.dtype),c=sx({inputs:{x:u},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),c}};class kk{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:c}=e,{top:l,left:d}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${l}, ${d});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${c};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const vk={kernelName:x.Dilation2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r,c=x.backend_util.computeDilation2DInfo(a.shape,s.shape,i,o,"NHWC",u);let l;const d=new kk(c);l=n.runWebGLProgram(d,[a,s],"float32");const h=sx({inputs:{x:l},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(l),h}},wk=Xy({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),Ik={kernelName:x.Elu,backendName:"webgl",kernelFunc:wk},jk={kernelName:x.EluGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=Object(x.env)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new zy("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new My("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}},Nk=Yy({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),Sk={kernelName:x.Equal,backendName:"webgl",kernelFunc:Nk},Tk=Xy({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${x.backend_util.ERF_P};\n  float a1 = ${x.backend_util.ERF_A1};\n  float a2 = ${x.backend_util.ERF_A2};\n  float a3 = ${x.backend_util.ERF_A3};\n  float a4 = ${x.backend_util.ERF_A4};\n  float a5 = ${x.backend_util.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),Ck={kernelName:x.Erf,backendName:"webgl",kernelFunc:Tk},$k="return exp(x);",Ak=Xy({opSnippet:$k,packedOpSnippet:$k,cpuKernelImpl:Zg}),Ek={kernelName:x.Exp,backendName:"webgl",kernelFunc:Ak};function Rk(e){const{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice();let u=a;return a<0&&(x.util.assert(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+a+1),o.splice(u,0,1),sx({inputs:{x:s},backend:r,attrs:{shape:o}})}const Fk={kernelName:x.ExpandDims,backendName:"webgl",kernelFunc:Rk},_k="return exp(x) - 1.0;",Dk=Xy({opSnippet:_k,packedOpSnippet:_k,cpuKernelImpl:Jg}),Mk={kernelName:x.Expm1,backendName:"webgl",kernelFunc:Dk};class zk{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function Lk(e,t,n){const r=n.texData.get(e.dataId),a=x.util.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=sx({inputs:{x:e},backend:n,attrs:{shape:[a/s,s]}}),o=i.shape,u=new zk("real",o,t),c=new zk("imag",o,t),l=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],d=n.runWebGLProgram(u,l,"float32"),h=n.runWebGLProgram(c,l,"float32"),p=By({inputs:{real:d,imag:h},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h);const f=sx({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),f}const Pk={kernelName:x.FFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return Lk(r,!1,n)}};class Bk{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}function Wk(e){const{backend:t,attrs:n}=e,{shape:r,value:a}=n;let{dtype:s}=n;if(s=s||x.util.inferDtype(a),"string"===s){const e=x.util.getArrayFromDType(s,x.util.sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{const e=new Bk(r,a),n=e.getCustomSetupFunc(a);return t.runWebGLProgram(e,[],s,n)}}const Vk={kernelName:x.Fill,backendName:"webgl",kernelFunc:Wk};class Uk{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Gk={kernelName:x.FlipLeftRight,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new Uk(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},Hk="return floor(x);",qk=Xy({opSnippet:Hk,packedOpSnippet:Hk,cpuKernelImpl:Qg}),Kk={kernelName:x.Floor,backendName:"webgl",kernelFunc:qk},Xk=Yy({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),Yk={kernelName:x.FloorDiv,backendName:"webgl",kernelFunc:Xk};class Zk{constructor(e){this.variableNames=["A"];const t=lg(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class Jk{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=lg(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const Qk={kernelName:x.FromPixels,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:a}=t;const{numChannels:s}=r,i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[u,c]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],l=[c,u],d=[c,u,s];(o||i)&&(null==ev&&(ev=document.createElement("canvas").getContext("2d")),ev.canvas.width=u,ev.canvas.height=c,ev.drawImage(a,0,0,u,c),a=ev.canvas);const h=n.makeTensorInfo(l,"int32");n.texData.get(h.dataId).usage=Eb.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(h.dataId),a);const p=Object(x.env)().getBool("WEBGL_PACK")?new Jk(d):new Zk(d),f=n.runWebGLProgram(p,[h],"int32");return n.disposeData(h.dataId),f}};let ev;const tv={kernelName:x.FusedConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:c,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r,m=x.backend_util.convertConv2DDataFormat(l),b=x.backend_util.computeConv2DInfo(a.shape,s.shape,u,d,c,h,!1,m);let g;const y=[];if(1!==b.filterHeight||1!==b.filterWidth||1!==b.dilationHeight||1!==b.dilationWidth||1!==b.strideHeight||1!==b.strideWidth||"SAME"!==b.padInfo.type&&"VALID"!==b.padInfo.type)if(Object(x.env)().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])g=WO({x:a,filter:s,convInfo:b,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=null!=i,t=null!=o,r="leakyrelu"===p,u=p?Zy(p,!1):null,c=new zO(b,e,u,t,r),l=[a,s];if(i&&l.push(i),o&&l.push(o),r){const e=n.makeTensorInfo([],"float32",x.util.createScalarValue(f,"float32"));l.push(e),y.push(e)}g=n.runWebGLProgram(c,l,"float32")}else g=BO({x:a,filter:s,convInfo:b,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const O=sx({inputs:{x:g},backend:n,attrs:{shape:b.outShape}});return y.push(g),y.forEach((e=>n.disposeIntermediateTensorInfo(e))),O}};const nv={kernelName:x.FusedDepthwiseConv2D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:c,dilations:l,dimRoundingMode:d,activation:h,leakyreluAlpha:p}=r,f=[];let m=l;null==m&&(m=[1,1]),x.util.assert(x.backend_util.eitherStridesOrDilationsAreOne(u,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`));const b=x.backend_util.computeConv2DInfo(a.shape,s.shape,u,m,c,d,!0),g=Object(x.env)().getBool("WEBGL_PACK_DEPTHWISECONV")&&b.strideWidth<=2&&b.outChannels/b.inChannels==1,y=h?Zy(h,g):null,O=[a,s],k=null!=i,v=null!=o,w="leakyrelu"===h;if(k&&O.push(i),v&&O.push(o),w){const e=n.makeTensorInfo([],"float32",x.util.createScalarValue(p,"float32"));O.push(e),f.push(e)}let I;I=g?new pk(b,k,y,v,w):new hk(b,k,y,v,w);const j=n.runWebGLProgram(I,O,"float32");return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),j}};class rv{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=Wg(t.length),a=Wg(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const av={kernelName:x.GatherNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],[o,u,c,l]=x.backend_util.prepareAndValidate(r,a),d=sx({inputs:{x:a},backend:n,attrs:{shape:[u,i]}}),h=sx({inputs:{x:r},backend:n,attrs:{shape:[x.util.sizeFromShape(r.shape)/c,c]}}),p=new rv(i,l,[u,c]),f=n.runWebGLProgram(p,[h,d],h.dtype),m=sx({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(f),m}};class sv{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=Wg(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}const iv={kernelName:x.GatherV2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,u=x.util.parseAxisParam(i,a.shape)[0],c=x.backend_util.segment_util.collectGatherOpShapeInfo(a,s,u,o),l=x.util.sizeFromShape(s.shape),d=[],h=sx({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),p=sx({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,l/c.batchSize]}});d.push(h),d.push(p);const f=[c.batchSize,c.outerSize,l/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){const e=n.bufferSync(p),t=n.bufferSync(h),r=ey(t,e,f);return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c.outputShape,r.dtype,r.values)}const m=new sv(h.shape,f),b=n.runWebGLProgram(m,[h,p],h.dtype);d.push(b);const g=sx({inputs:{x:b},backend:n,attrs:{shape:c.outputShape}});return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},ov=Yy({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:ty,dtype:"bool"}),uv={kernelName:x.Greater,backendName:"webgl",kernelFunc:ov},cv=Yy({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),lv={kernelName:x.GreaterEqual,backendName:"webgl",kernelFunc:cv};const dv={kernelName:x.IFFT,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return Lk(r,!0,n)}},hv=Xy({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),pv={kernelName:x.IsFinite,backendName:"webgl",kernelFunc:hv},fv=Xy({opSnippet:"return float(isinf(x));",dtype:"bool"}),mv={kernelName:x.IsInf,backendName:"webgl",kernelFunc:fv},bv=Xy({opSnippet:"return float(isnan(x));",dtype:"bool"}),gv={kernelName:x.IsNan,backendName:"webgl",kernelFunc:bv},yv=Yy({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:ny,dtype:"bool"}),xv={kernelName:x.Less,backendName:"webgl",kernelFunc:yv},Ov=Yy({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),kv={kernelName:x.LessEqual,backendName:"webgl",kernelFunc:Ov};const vv={kernelName:x.LinSpace,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=ry(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},wv=Xy({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:ay}),Iv={kernelName:x.Log,backendName:"webgl",kernelFunc:wv},jv=Xy({opSnippet:"return log(1.0 + x);"}),Nv={kernelName:x.Log1p,backendName:"webgl",kernelFunc:jv},Sv=Yy({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),Tv={kernelName:x.LogicalAnd,backendName:"webgl",kernelFunc:Sv},Cv=Xy({opSnippet:"return float(!(x >= 1.0));"}),$v={kernelName:x.LogicalNot,backendName:"webgl",kernelFunc:Cv},Av=Yy({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),Ev={kernelName:x.LogicalOr,backendName:"webgl",kernelFunc:Av};class Rv{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class Fv{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const _v={kernelName:x.LRN,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=r,c=Object(x.env)().getBool("WEBGL_PACK_NORMALIZATION")?new Fv(a.shape,s,i,o,u):new Rv(a.shape,s,i,o,u);return n.runWebGLProgram(c,[a],a.dtype)}};class Dv{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const Mv={kernelName:x.LRNGrad,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:c,beta:l}=r,d=new Dv(a.shape,o,u,c,l);return n.runWebGLProgram(d,[a,s,i],a.dtype)}};function zv(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape.length,u=x.util.parseAxisParam(s,a.shape);let c=u;const l=x.backend_util.getAxesPermutation(c,o),d=null!=l,h=n.shouldExecuteOnCPU([a]);let p=a;if(d){if(h){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=a.shape[l[e]];const r=xy(e,a.shape,a.dtype,l,t);p=n.makeTensorInfo(t,a.dtype);n.texData.get(p.dataId).values=r}else p=hx(a,l,n);c=x.backend_util.getInnerMostAxes(c.length,o)}x.backend_util.assertAxesAreInnerMostDims("max",c,o);const[f,m]=x.backend_util.computeOutAndReduceShapes(p.shape,c);let b,g=f;if(i&&(g=x.backend_util.expandShapeToKeepDim(f,u)),h){const e=n.texData.get(p.dataId).values,t=sy(e,x.util.sizeFromShape(m),g,a.dtype);b=n.makeTensorInfo(g,a.dtype);n.texData.get(b.dataId).values=t}else b=function(e,t,n,r){const a=x.util.sizeFromShape(t),s=sx({inputs:{x:e},attrs:{shape:[x.util.sizeFromShape(e.shape)/a,a]},backend:r}),i=cx(s,e.dtype,"max",r),o=sx({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(p,m,g,n);return d&&n.disposeIntermediateTensorInfo(p),b}const Lv={kernelName:x.Max,backendName:"webgl",kernelFunc:zv},Pv=Yy({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:iy}),Bv={kernelName:x.Maximum,backendName:"webgl",kernelFunc:Pv};const Wv={kernelName:x.MaxPool,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;ug(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;x.util.assert(x.backend_util.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const c=x.backend_util.computePool2DInfo(a.shape,s,i,1,o,u);if(1===c.filterWidth&&1===c.filterHeight&&x.util.arraysEqual(c.inShape,c.outShape))return Ly({inputs:{x:a},backend:n});const l=new Yx(c,"max",!1);return n.runWebGLProgram(l,[a],a.dtype)}};const Vv={kernelName:x.MaxPool3D,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:u,dimRoundingMode:c}=r,l=x.backend_util.computePool3DInfo(a.shape,s,i,[1,1,1],o,c,u),d=new Zx(l,"max",!1);return n.runWebGLProgram(d,[a],a.dtype)}};class Uv{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,u=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Gv{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,c=e.effectiveFilterWidth,l=o-1-e.padInfo.front,d=u-1-e.padInfo.top,h=c-1-e.padInfo.left,p=o*u*c-1;this.userCode=`\n      const ivec3 pads = ivec3(${l}, ${d}, ${h});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${c};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${c} +\n                  wR * ${c} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Hv={kernelName:x.MaxPool3DGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:u,pad:c,dimRoundingMode:l}=r,d=x.backend_util.computePool3DInfo(i.shape,o,u,[1,1,1],c,l),h=new Zx(d,"max",!0),p=n.runWebGLProgram(h,[i],i.dtype),f=new Gv(d),m=n.runWebGLProgram(f,[a,p],i.dtype);return n.disposeIntermediateTensorInfo(p),m}};const qv={kernelName:x.MaxPoolGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;ug([s,i],"maxPoolGrad");const{filterSize:u,strides:c,pad:l,dimRoundingMode:d}=r,h=x.backend_util.computePool2DInfo(o.shape,u,c,1,l,d),p=new Yx(h,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new Uv(h),b=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),b}};const Kv={kernelName:x.MaxPoolWithArgmax,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,u=n;x.util.assert(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const c=[1,1];x.util.assert(x.backend_util.eitherStridesOrDilationsAreOne(s,c),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${c}'`));const l=x.backend_util.computePool2DInfo(r.shape,a,s,c,i),[d,h]=function(e,t,n,r){let a=new Yx(n,"max",!1);const s=r.runWebGLProgram(a,[e],"float32");return a=new Yx(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(r,o,l,u);return[d,h]}};const Xv={kernelName:x.Mean,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:a,axis:s}=t,i=n,o=r.shape.length,u=x.util.parseAxisParam(s,r.shape);let c=u;const l=x.backend_util.getAxesPermutation(c,o),d=null!=l,h=i.shouldExecuteOnCPU([r]),p=[];let f=r;if(d){if(h){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[l[e]];const n=xy(e,r.shape,r.dtype,l,t);f=i.makeTensorInfo(t,r.dtype);i.texData.get(f.dataId).values=n}else f=hx(r,l,i);p.push(f),c=x.backend_util.getInnerMostAxes(c.length,o)}x.backend_util.assertAxesAreInnerMostDims("sum",c,o);const[m,b]=x.backend_util.computeOutAndReduceShapes(f.shape,c);let g=m;a&&(g=x.backend_util.expandShapeToKeepDim(m,u));const y=function(e,t,n,r){const a=x.util.sizeFromShape(t),s=sx({inputs:{x:e},attrs:{shape:[x.util.sizeFromShape(e.shape)/a,a]},backend:r}),i=cx(s,"float32","mean",r),o=sx({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(f,b,g,i);for(const e of p)i.disposeIntermediateTensorInfo(e);return y}};const Yv={kernelName:x.Min,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=x.util.parseAxisParam(s,a.shape);let c=u;const l=x.backend_util.getAxesPermutation(c,o);let d=a;null!=l&&(d=mx({inputs:{x:a},backend:n,attrs:{perm:l}}),c=x.backend_util.getInnerMostAxes(c.length,a.shape.length)),x.backend_util.assertAxesAreInnerMostDims("min",c,o);const[h,p]=x.backend_util.computeOutAndReduceShapes(d.shape,c),f=sx({inputs:{x:d},backend:n,attrs:{shape:[-1,x.util.sizeFromShape(p)]}}),m=cx(f,f.dtype,"min",n);let b;if(i){b=sx({inputs:{x:m},backend:n,attrs:{shape:x.backend_util.expandShapeToKeepDim(h,u)}})}else b=sx({inputs:{x:m},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=l&&n.disposeIntermediateTensorInfo(d),b}},Zv=Yy({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:oy}),Jv={kernelName:x.Minimum,backendName:"webgl",kernelFunc:Zv};class Qv{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=Wg(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class ew{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=Wg(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=vy("rc",r),u=vy("source",r),c=`${o[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,d="reflect"===n?0:1;let h="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${o[r-1]} += 1;\n        if(${c}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${o[r-1]} += 1;\n        if(${c}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${l});\n          ${o[r-1]} += 1;\n          if(${c}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${l});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}const tw={kernelName:x.MirrorPad,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:a,mode:s}=n,i=Object(x.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new ew(r.shape,a,s):new Qv(r.shape,a,s);return t.runWebGLProgram(i,[r],r.dtype)}},nw=Yy({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),rw={kernelName:x.Mod,backendName:"webgl",kernelFunc:nw};class aw{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.seedLoc&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}}const sw=Yy({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),iw={kernelName:x.RealDiv,backendName:"webgl",kernelFunc:sw},ow="return a - b;",uw=Yy({opSnippet:ow,packedOpSnippet:ow,supportsComplex:!0,cpuKernelImpl:by}),cw={kernelName:x.Sub,backendName:"webgl",kernelFunc:uw};function lw(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=x.util.parseAxisParam([s],a.shape),o=zv({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=x.backend_util.expandShapeToKeepDim(o.shape,i),c=sx({inputs:{x:o},backend:n,attrs:{shape:u}}),l=uw({inputs:{a:a,b:c},backend:n}),d=Ak({inputs:{x:l},backend:n}),h=px({inputs:{x:d},backend:n,attrs:{axis:i,keepDims:!1}}),p=sx({inputs:{x:h},backend:n,attrs:{shape:u}}),f=sw({inputs:{a:d,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),f}const dw={kernelName:x.Softmax,backendName:"webgl",kernelFunc:lw};const hw={kernelName:x.Multinomial,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,u=o?a:lw({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),c=u.shape[0],l=u.shape[1],d=new aw(c,l,s),h=d.getCustomSetupFunc(i),p=n.runWebGLProgram(d,[u],"int32",h);return o||n.disposeIntermediateTensorInfo(u),p}},pw="return -x;";const fw={kernelName:x.Neg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=cy(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let a;return a=Object(x.env)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Ey(r.shape,pw):new Cy(r.shape,pw),n.runWebGLProgram(a,[r],r.dtype)}},mw=x.kernel_impls.nonMaxSuppressionV3Impl;const bw={kernelName:x.NonMaxSuppressionV3,backendName:"webgl",kernelFunc:function(e){x.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r,c=n.readSync(a.dataId),l=n.readSync(s.dataId),{selectedIndices:d}=mw(c,l,i,o,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},gw=x.kernel_impls.nonMaxSuppressionV4Impl;const yw={kernelName:x.NonMaxSuppressionV4,backendName:"webgl",kernelFunc:function(e){x.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:c}=r,l=n.readSync(a.dataId),d=n.readSync(s.dataId),{selectedIndices:h,validOutputs:p}=gw(l,d,i,o,u,c);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},xw=x.kernel_impls.nonMaxSuppressionV5Impl;const Ow={kernelName:x.NonMaxSuppressionV5,backendName:"webgl",kernelFunc:function(e){x.backend_util.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:c}=r,l=n.readSync(a.dataId),d=n.readSync(s.dataId),h=i,p=o,f=u,m=c,{selectedIndices:b,selectedScores:g}=xw(l,d,h,p,f,m);return[n.makeTensorInfo([b.length],"int32",new Int32Array(b)),n.makeTensorInfo([g.length],"float32",new Float32Array(g))]}};class kw{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const vw={kernelName:x.OneHot,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,u=x.util.sizeFromShape(a.shape),c=new kw(u,s,i,o),l=sx({inputs:{x:a},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(c,[l],a.dtype);n.disposeIntermediateTensorInfo(l);const h=sx({inputs:{x:d},backend:n,attrs:{shape:[...a.shape,s]}});return n.disposeIntermediateTensorInfo(d),h}};function ww(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=gO({inputs:{input:r},backend:n}),t=ww({inputs:{x:e},backend:n}),a=EO({inputs:{input:r},backend:n}),s=ww({inputs:{x:a},backend:n}),i=By({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return Wk({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const Iw={kernelName:x.ZerosLike,backendName:"webgl",kernelFunc:ww};const jw={kernelName:x.OnesLike,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=gO({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=EO({inputs:{input:a},backend:r}),i=ww({inputs:{x:s},backend:r}),o=By({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return Wk({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}};const Nw={kernelName:x.Pack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return Rk({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach((e=>{x.util.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),x.util.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=DO({inputs:t.map((e=>{const t=Rk({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t})),backend:n,attrs:{axis:a}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}};class Sw{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=Wg(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n      uniform float value;\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n        uniform float value;\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}class Tw{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,a=Wg(r),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=vy("rc",r),u=vy("source",r),c=`${o[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,d=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${c}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${c}) {`],h=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===r?2:4;e<t;e++)p+=`\n        ${d[e]}\n        if (${h}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${l});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n      uniform float value;\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}const Cw=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r,o=Object(x.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Tw(a.shape,s,i):new Sw(a.shape,s,i),u=o.getCustomSetupFunc(i);return n.runWebGLProgram(o,[a],a.dtype,u)},$w={kernelName:x.PadV2,backendName:"webgl",kernelFunc:Cw},Aw=Yy({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),Ew={kernelName:x.Pow,backendName:"webgl",kernelFunc:Aw};const Rw={kernelName:x.Prod,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=[],c=x.util.parseAxisParam(s,a.shape);let l=c;const d=x.backend_util.getAxesPermutation(l,o);let h,p=a;if(null!=d&&(p=mx({inputs:{x:a},backend:n,attrs:{perm:d}}),l=x.backend_util.getInnerMostAxes(l.length,o),u.push(p)),x.backend_util.assertAxesAreInnerMostDims("prod",l,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:r,outDtype:a}=ly(p.shape,p.dtype,e,l);h=n.makeTensorInfo(r,a,t)}else{const[e,t]=x.backend_util.computeOutAndReduceShapes(p.shape,l),r=x.util.sizeFromShape(t),s=sx({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),i=cx(s,Object(x.sumOutType)(a.dtype),"prod",n);h=sx({inputs:{x:i},backend:n,attrs:{shape:e}}),u.push(s),u.push(i)}if(i){u.push(h);const e=x.backend_util.expandShapeToKeepDim(h.shape,c);h=sx({inputs:{x:h},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},Fw=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=dy(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},_w={kernelName:x.Range,backendName:"webgl",kernelFunc:Fw},Dw=Xy({opSnippet:"return 1.0 / x;"}),Mw={kernelName:x.Reciprocal,backendName:"webgl",kernelFunc:Dw},zw=Xy({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Lw={kernelName:x.Relu,backendName:"webgl",kernelFunc:zw},Pw=Xy({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),Bw={kernelName:x.Relu6,backendName:"webgl",kernelFunc:Pw};class Ww{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const c=[r&&t>1?i-1:i,r&&n>1?o-1:o],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class Vw{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const c=[r&&t>1?i-1:i,r&&n>1?o-1:o],l=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]},\n          ${c[1]/l[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const Uw={kernelName:x.ResizeBilinear,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,c]=o,l=Object(x.env)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new Vw(a.shape,u,c,s,i):new Ww(a.shape,u,c,s,i);return n.runWebGLProgram(l,[a],"float32")}};class Gw{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],c=o[0]/u[0],l=o[1]/u[1],d=1/c,h=1/l,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Hw={kernelName:x.ResizeBilinearGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new Gw(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class qw{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const c=[r&&t>1?i-1:i,r&&n>1?o-1:o],l=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let h;h=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${c[0]/l[0]},\n          ${c[1]/l[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}const Kw={kernelName:x.ResizeNearestNeighbor,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,c]=o,l=new qw(a.shape,u,c,s,i);return n.runWebGLProgram(l,[a],a.dtype)}};class Xw{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],c=o[0]/u[0],l=o[1]/u[1],d=1/c,h=1/l,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const Yw={kernelName:x.ResizeNearestNeighborGrad,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new Xw(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class Zw{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),a=Wg(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class Jw{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=vy("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=Wg(n);function o(n){const r=e.map(((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const Qw={kernelName:x.Reverse,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=x.util.parseAxisParam(s,a.shape);if(0===i)return Ly({inputs:{x:a},backend:n});const u=Object(x.env)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Jw(a.shape,o):new Zw(a.shape,o);return n.runWebGLProgram(u,[a],a.dtype)}};class eI{constructor(e,t){this.variableNames=["Image"],this.outputShape=[];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        uniform vec4 params;\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}getCustomSetupFunc(e,t,n,r){return(a,s)=>{null==this.paramsLoc&&(this.paramsLoc=a.getUniformLocationNoThrow(s,"params")),a.gl.uniform4f(this.paramsLoc,e,t,n,r)}}}const tI={kernelName:x.RotateWithOffset,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,u=new eI(r.shape,s),[c,l]=x.backend_util.getImageCenter(i,r.shape[1],r.shape[2]),d=u.getCustomSetupFunc(c,l,Math.sin(a),Math.cos(a));return o.runWebGLProgram(u,[r],r.dtype,d)}},nI=Xy({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),rI={kernelName:x.Round,backendName:"webgl",kernelFunc:nI},aI=Xy({opSnippet:"return inversesqrt(x);",cpuKernelImpl:hy}),sI={kernelName:x.Rsqrt,backendName:"webgl",kernelFunc:aI};class iI{constructor(e,t,n,r,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const o=Wg(a.length),u=Wg(s.length);let c="";1===n?c="i":2===n&&(c="i, j");const l=`getIndices(${c})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const h=`getUpdates(${d})`,p=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${l});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${h};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const oI={kernelName:x.ScatterNd,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:c,strides:l,outputSize:d}=x.backend_util.calculateShapes(s,a,i),h=[d/c,c];if(0===d)return n.makeTensorInfo(i,a.dtype);const p=sx({inputs:{x:a},backend:n,attrs:{shape:[u,o]}}),f=sx({inputs:{x:s},backend:n,attrs:{shape:[u,c]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),b=new iI(u,o,p.shape.length,f.shape.length,l,h),g=n.runWebGLProgram(b,[f,p,m],f.dtype),y=sx({inputs:{x:g},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),y}};class uI{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=i.join()}const s=Wg(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}const cI={kernelName:x.Select,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new uI(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],Object(x.upcastType)(a.dtype,s.dtype))}},lI=Xy({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${x.backend_util.SELU_SCALEALPHA};\n  float scale = ${x.backend_util.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),dI={kernelName:x.Selu,backendName:"webgl",kernelFunc:lI},hI=Xy({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),pI={kernelName:x.Sigmoid,backendName:"webgl",kernelFunc:hI},fI=Xy({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),mI={kernelName:x.Sign,backendName:"webgl",kernelFunc:fI},bI=Xy({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),gI={kernelName:x.Sin,backendName:"webgl",kernelFunc:bI},yI=Xy({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),xI={kernelName:x.Sinh,backendName:"webgl",kernelFunc:yI},OI=Xy({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),kI={kernelName:x.Softplus,backendName:"webgl",kernelFunc:OI},vI={kernelName:x.SpaceToBatchND,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;x.util.assert(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=s.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<a.shape.length;++e)u.push([0,0]);const c=[],l=Cw({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),d=x.backend_util.getReshaped(l.shape,s,o,!1),h=x.backend_util.getPermuted(d.length,s.length,!1),p=x.backend_util.getReshapedPermuted(l.shape,s,o,!1),f=sx({inputs:{x:l},backend:n,attrs:{shape:d}}),m=mx({inputs:{x:f},backend:n,attrs:{perm:h}}),b=sx({inputs:{x:m},backend:n,attrs:{shape:p}});return c.push(l),c.push(f),c.push(m),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}};const wI={kernelName:x.SparseToDense,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:c,strides:l,outputSize:d}=x.backend_util.calculateShapes(s,a,o),h=new iI(c,u,a.shape.length,s.shape.length,l,[d,1],!1),p=n.runWebGLProgram(h,[s,a,i],s.dtype),f=sx({inputs:{x:p},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),f}};const II={kernelName:x.SplitV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=x.util.parseAxisParam(i,a.shape)[0],u=x.backend_util.prepareSplitSize(a,s,o),c=a.shape.length,l=new Array(c).fill(0),d=a.shape.slice();return u.map((e=>{const t=[...d];t[o]=e;const r=dO({inputs:{x:a},backend:n,attrs:{begin:l,size:t}});return l[o]+=e,r}))}},jI=Xy({opSnippet:"return sqrt(x);"}),NI={kernelName:x.Sqrt,backendName:"webgl",kernelFunc:jI},SI=Xy({opSnippet:"return x * x;"}),TI={kernelName:x.Square,backendName:"webgl",kernelFunc:SI},CI="return (a - b) * (a - b);",$I=Yy({opSnippet:CI,packedOpSnippet:CI}),AI={kernelName:x.SquaredDifference,backendName:"webgl",kernelFunc:$I};const EI={kernelName:x.Step,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,a=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new Cy(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}};class RI{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=Wg(n.length),s=Wg(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const FI={kernelName:x.StridedSlice,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:c,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:h}=r,{nonStrided:p,$begin:f,$strides:m,size:b,newShape:g,outShape:y}=x.slice_util.sliceInfo(a.shape,s,i,o,u,c,l,d,h),O=sx({inputs:{x:a},backend:n,attrs:{shape:g}});let k;if(p){const e=dO({inputs:{x:O},backend:n,attrs:{begin:f,size:b}});k=sx({inputs:{x:e},backend:n,attrs:{shape:y}}),n.disposeIntermediateTensorInfo(e)}else if(y.some((e=>0===e)))k=n.makeTensorInfo(y,a.dtype,[]);else{if(n.shouldExecuteOnCPU([O])){const e=n.texData.get(O.dataId).values,t=Object(x.buffer)(O.shape,O.dtype,e),r=my(y,t,m,f);k=n.makeTensorInfo(y,O.dtype,r.values)}else{const e=new RI(f,m,y);k=n.runWebGLProgram(e,[O],O.dtype)}}const v=sx({inputs:{x:k},backend:n,attrs:{shape:y}});return n.disposeIntermediateTensorInfo(O),n.disposeIntermediateTensorInfo(k),v}},_I=Xy({opSnippet:"return tan(x);"}),DI={kernelName:x.Tan,backendName:"webgl",kernelFunc:_I},MI=Xy({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),zI={kernelName:x.Tanh,backendName:"webgl",kernelFunc:MI};class LI{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=Wg(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function PI(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype){const e=n.readSync(a.dataId).map((e=>x.util.decodeString(e))),t=Object(x.buffer)(a.shape,a.dtype,e),r=gy(t,s);return n.makeTensorInfo(r.shape,r.dtype,r.values)}const i=new LI(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}const BI={kernelName:x.Tile,backendName:"webgl",kernelFunc:PI};const WI={kernelName:x.TopK,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=n.readSync(a.dataId),[u,c]=yy(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(c.shape,c.dtype,c.values)]}};class VI{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const i="nearest"===n?1:2;let o;switch(r){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const UI={kernelName:x.Transform,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:c}=r,[l,d,h,p]=a.shape,[f,m]=null!=c?c:[d,h],b=new VI(d,h,i,o,u,[l,f,m,p]);return n.runWebGLProgram(b,[a,s],"float32")}};const GI={kernelName:x.Unique,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;ug(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(s.dataId),{outputValues:o,outputShape:u,indices:c}=Oy(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([c.length],"int32",c)]}};const HI={kernelName:x.Unpack,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a,o=i.shape.length,u=a.shape[s],c=new Array(o-1);let l=0;for(let e=0;e<o;e++)e!==s&&(c[l++]=i.shape[e]);const d=[],h=new Array(o).fill(0),p=i.shape.slice();p[s]=1;const f=new Array(u);for(let e=0;e<f.length;e++){h[s]=e;const t=dO({inputs:{x:i},backend:n,attrs:{begin:h,size:p}}),r=sx({inputs:{x:t},backend:n,attrs:{shape:c}});f[e]=r,d.push(t)}return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class qI{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,c="\n        sumValue += dot(values, segFilter);\n    ";let l="";a%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${d}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${c}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${c}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${c}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${c}\n        }\n        setOutput(sumValue);\n      }\n    `}}const KI=[_v,Mv,yx,Ox,vx,Ix,Sx,$x,Ax,Ex,zx,Lx,Bx,Vx,qx,Gx,Xx,Qx,Jx,nO,rO,aO,oO,pO,fO,xO,vO,jO,TO,Wy,MO,KO,XO,VO,ZO,JO,YO,ek,nk,ak,uk,ck,dk,gk,yk,fk,Ok,vk,Ik,jk,Sk,Ck,Ek,Fk,Mk,Pk,Vk,Gk,Kk,Yk,Qk,tv,nv,av,iv,uv,lv,Py,dv,RO,pv,mv,gv,Gy,xv,kv,vv,Nv,Iv,Tv,$v,Ev,Lv,Vv,Wv,Hv,qv,Kv,Bv,Xv,Yv,Jv,tw,rw,hw,ax,fw,bw,yw,Ow,bO,vw,jw,Nw,$w,Ew,Ky,Rw,_w,yO,iw,Mw,Bw,Lw,ix,Uw,Hw,Kw,Yw,Qw,tI,rI,sI,oI,cI,dI,pI,mI,gI,xI,hO,dw,kI,vI,wI,II,NI,TI,AI,EI,FI,cw,fx,DI,zI,BI,WI,UI,bx,GI,HI,{kernelName:x.UnsortedSegmentSum,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,u=[];let c=0;const l=x.backend_util.getAxesPermutation([c],o);let d=a;null!=l&&(d=mx({inputs:{x:a},backend:n,attrs:{perm:l}}),u.push(d),c=x.backend_util.getInnerMostAxes(1,o)[0]);const h=x.backend_util.segment_util.computeOutShape(d.shape,c,i),p=x.util.sizeFromShape([d.shape[c]]),f=sx({inputs:{x:d},backend:n,attrs:{shape:[-1,p]}});u.push(f);const m=Object(x.sumOutType)(a.dtype),b=(e,t,r,a,s)=>{const i=e.shape[0],o=e.shape[1],c=x.backend_util.segment_util.segOpComputeOptimalWindowSize(o,s),l=new qI({windowSize:c,inSize:o,batchSize:i,numSegments:s},t),d=n.compileAndRun(l,[e,r],a);if(u.push(d),d.shape[1]===s)return d;const h=Fw({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),p=PI({inputs:{x:h},backend:n,attrs:{reps:[o/c]}});u.push(h),u.push(p);return b(d,t,p,a,s)},g=sx({inputs:{x:b(f,"unsortedSegmentSum",s,m,i)},backend:n,attrs:{shape:h}});let y=g;if(null!=l){u.push(g);const e=x.backend_util.getUndoAxesPermutation(l);y=mx({inputs:{x:y},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},Iw];for(const e of KI)Object(x.registerKernel)(e);x.version_core;function XI(e,t,n,r){return new(n||(n=Promise))((function(a,s){function i(e){try{u(r.next(e))}catch(e){s(e)}}function o(e){try{u(r.throw(e))}catch(e){s(e)}}function u(e){e.done?a(e.value):new n((function(t){t(e.value)})).then(i,o)}u((r=r.apply(e,t||[])).next())}))}function YI(e,t){var n,r,a,s,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return s={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function o(s){return function(o){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(a=2&s[0]?r.return:s[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,s[1])).done)return a;switch(r=0,a&&(s=[2&s[0],a.value]),s[0]){case 0:case 1:a=s;break;case 4:return i.label++,{value:s[1],done:!1};case 5:i.label++,r=s[1],s=[0];continue;case 7:s=i.ops.pop(),i.trys.pop();continue;default:if(!(a=(a=i.trys).length>0&&a[a.length-1])&&(6===s[0]||2===s[0])){i=0;continue}if(3===s[0]&&(!a||s[1]>a[0]&&s[1]<a[3])){i.label=s[1];break}if(6===s[0]&&i.label<a[1]){i.label=a[1],a=s;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(s);break}a[2]&&i.ops.pop(),i.trys.pop();continue}s=t.call(e,i)}catch(e){s=[6,e],r=0}finally{n=a=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,o])}}}var ZI={0:"tench, Tinca tinca",1:"goldfish, Carassius auratus",2:"great white shark, white shark, man-eater, man-eating shark, Carcharodon carcharias",3:"tiger shark, Galeocerdo cuvieri",4:"hammerhead, hammerhead shark",5:"electric ray, crampfish, numbfish, torpedo",6:"stingray",7:"cock",8:"hen",9:"ostrich, Struthio camelus",10:"brambling, Fringilla montifringilla",11:"goldfinch, Carduelis carduelis",12:"house finch, linnet, Carpodacus mexicanus",13:"junco, snowbird",14:"indigo bunting, indigo finch, indigo bird, Passerina cyanea",15:"robin, American robin, Turdus migratorius",16:"bulbul",17:"jay",18:"magpie",19:"chickadee",20:"water ouzel, dipper",21:"kite",22:"bald eagle, American eagle, Haliaeetus leucocephalus",23:"vulture",24:"great grey owl, great gray owl, Strix nebulosa",25:"European fire salamander, Salamandra salamandra",26:"common newt, Triturus vulgaris",27:"eft",28:"spotted salamander, Ambystoma maculatum",29:"axolotl, mud puppy, Ambystoma mexicanum",30:"bullfrog, Rana catesbeiana",31:"tree frog, tree-frog",32:"tailed frog, bell toad, ribbed toad, tailed toad, Ascaphus trui",33:"loggerhead, loggerhead turtle, Caretta caretta",34:"leatherback turtle, leatherback, leathery turtle, Dermochelys coriacea",35:"mud turtle",36:"terrapin",37:"box turtle, box tortoise",38:"banded gecko",39:"common iguana, iguana, Iguana iguana",40:"American chameleon, anole, Anolis carolinensis",41:"whiptail, whiptail lizard",42:"agama",43:"frilled lizard, Chlamydosaurus kingi",44:"alligator lizard",45:"Gila monster, Heloderma suspectum",46:"green lizard, Lacerta viridis",47:"African chameleon, Chamaeleo chamaeleon",48:"Komodo dragon, Komodo lizard, dragon lizard, giant lizard, Varanus komodoensis",49:"African crocodile, Nile crocodile, Crocodylus niloticus",50:"American alligator, Alligator mississipiensis",51:"triceratops",52:"thunder snake, worm snake, Carphophis amoenus",53:"ringneck snake, ring-necked snake, ring snake",54:"hognose snake, puff adder, sand viper",55:"green snake, grass snake",56:"king snake, kingsnake",57:"garter snake, grass snake",58:"water snake",59:"vine snake",60:"night snake, Hypsiglena torquata",61:"boa constrictor, Constrictor constrictor",62:"rock python, rock snake, Python sebae",63:"Indian cobra, Naja naja",64:"green mamba",65:"sea snake",66:"horned viper, cerastes, sand viper, horned asp, Cerastes cornutus",67:"diamondback, diamondback rattlesnake, Crotalus adamanteus",68:"sidewinder, horned rattlesnake, Crotalus cerastes",69:"trilobite",70:"harvestman, daddy longlegs, Phalangium opilio",71:"scorpion",72:"black and gold garden spider, Argiope aurantia",73:"barn spider, Araneus cavaticus",74:"garden spider, Aranea diademata",75:"black widow, Latrodectus mactans",76:"tarantula",77:"wolf spider, hunting spider",78:"tick",79:"centipede",80:"black grouse",81:"ptarmigan",82:"ruffed grouse, partridge, Bonasa umbellus",83:"prairie chicken, prairie grouse, prairie fowl",84:"peacock",85:"quail",86:"partridge",87:"African grey, African gray, Psittacus erithacus",88:"macaw",89:"sulphur-crested cockatoo, Kakatoe galerita, Cacatua galerita",90:"lorikeet",91:"coucal",92:"bee eater",93:"hornbill",94:"hummingbird",95:"jacamar",96:"toucan",97:"drake",98:"red-breasted merganser, Mergus serrator",99:"goose",100:"black swan, Cygnus atratus",101:"tusker",102:"echidna, spiny anteater, anteater",103:"platypus, duckbill, duckbilled platypus, duck-billed platypus, Ornithorhynchus anatinus",104:"wallaby, brush kangaroo",105:"koala, koala bear, kangaroo bear, native bear, Phascolarctos cinereus",106:"wombat",107:"jelly fish",108:"sea anemone, anemone",109:"brain coral",110:"flatworm, platyhelminth",111:"nematode, nematode worm, roundworm",112:"conch",113:"snail",114:"slug",115:"sea slug, nudibranch",116:"chiton, coat-of-mail shell, sea cradle, polyplacophore",117:"chambered nautilus, pearly nautilus, nautilus",118:"Dungeness crab, Cancer magister",119:"rock crab, Cancer irroratus",120:"fiddler crab",121:"king crab, Alaska crab, Alaskan king crab, Alaska king crab, Paralithodes camtschatica",122:"American lobster, Northern lobster, Maine lobster, Homarus americanus",123:"spiny lobster, langouste, rock lobster, crawfish, crayfish, sea crawfish",124:"crayfish, crawfish, crawdad, crawdaddy",125:"hermit crab",126:"isopod",127:"white stork, Ciconia ciconia",128:"black stork, Ciconia nigra",129:"spoonbill",130:"flamingo",131:"little blue heron, Egretta caerulea",132:"American egret, great white heron, Egretta albus",133:"bittern",134:"crane",135:"limpkin, Aramus pictus",136:"European gallinule, Porphyrio porphyrio",137:"American coot, marsh hen, mud hen, water hen, Fulica americana",138:"bustard",139:"ruddy turnstone, Arenaria interpres",140:"red-backed sandpiper, dunlin, Erolia alpina",141:"redshank, Tringa totanus",142:"dowitcher",143:"oystercatcher, oyster catcher",144:"pelican",145:"king penguin, Aptenodytes patagonica",146:"albatross, mollymawk",147:"grey whale, gray whale, devilfish, Eschrichtius gibbosus, Eschrichtius robustus",148:"killer whale, killer, orca, grampus, sea wolf, Orcinus orca",149:"dugong, Dugong dugon",150:"sea lion",151:"Chihuahua",152:"Japanese spaniel",153:"Maltese dog, Maltese terrier, Maltese",154:"Pekinese, Pekingese, Peke",155:"Shih-Tzu",156:"Blenheim spaniel",157:"papillon",158:"toy terrier",159:"Rhodesian ridgeback",160:"Afghan hound, Afghan",161:"basset, basset hound",162:"beagle",163:"bloodhound, sleuthhound",164:"bluetick",165:"black-and-tan coonhound",166:"Walker hound, Walker foxhound",167:"English foxhound",168:"redbone",169:"borzoi, Russian wolfhound",170:"Irish wolfhound",171:"Italian greyhound",172:"whippet",173:"Ibizan hound, Ibizan Podenco",174:"Norwegian elkhound, elkhound",175:"otterhound, otter hound",176:"Saluki, gazelle hound",177:"Scottish deerhound, deerhound",178:"Weimaraner",179:"Staffordshire bullterrier, Staffordshire bull terrier",180:"American Staffordshire terrier, Staffordshire terrier, American pit bull terrier, pit bull terrier",181:"Bedlington terrier",182:"Border terrier",183:"Kerry blue terrier",184:"Irish terrier",185:"Norfolk terrier",186:"Norwich terrier",187:"Yorkshire terrier",188:"wire-haired fox terrier",189:"Lakeland terrier",190:"Sealyham terrier, Sealyham",191:"Airedale, Airedale terrier",192:"cairn, cairn terrier",193:"Australian terrier",194:"Dandie Dinmont, Dandie Dinmont terrier",195:"Boston bull, Boston terrier",196:"miniature schnauzer",197:"giant schnauzer",198:"standard schnauzer",199:"Scotch terrier, Scottish terrier, Scottie",200:"Tibetan terrier, chrysanthemum dog",201:"silky terrier, Sydney silky",202:"soft-coated wheaten terrier",203:"West Highland white terrier",204:"Lhasa, Lhasa apso",205:"flat-coated retriever",206:"curly-coated retriever",207:"golden retriever",208:"Labrador retriever",209:"Chesapeake Bay retriever",210:"German short-haired pointer",211:"vizsla, Hungarian pointer",212:"English setter",213:"Irish setter, red setter",214:"Gordon setter",215:"Brittany spaniel",216:"clumber, clumber spaniel",217:"English springer, English springer spaniel",218:"Welsh springer spaniel",219:"cocker spaniel, English cocker spaniel, cocker",220:"Sussex spaniel",221:"Irish water spaniel",222:"kuvasz",223:"schipperke",224:"groenendael",225:"malinois",226:"briard",227:"kelpie",228:"komondor",229:"Old English sheepdog, bobtail",230:"Shetland sheepdog, Shetland sheep dog, Shetland",231:"collie",232:"Border collie",233:"Bouvier des Flandres, Bouviers des Flandres",234:"Rottweiler",235:"German shepherd, German shepherd dog, German police dog, alsatian",236:"Doberman, Doberman pinscher",237:"miniature pinscher",238:"Greater Swiss Mountain dog",239:"Bernese mountain dog",240:"Appenzeller",241:"EntleBucher",242:"boxer",243:"bull mastiff",244:"Tibetan mastiff",245:"French bulldog",246:"Great Dane",247:"Saint Bernard, St Bernard",248:"Eskimo dog, husky",249:"malamute, malemute, Alaskan malamute",250:"Siberian husky",251:"dalmatian, coach dog, carriage dog",252:"affenpinscher, monkey pinscher, monkey dog",253:"basenji",254:"pug, pug-dog",255:"Leonberg",256:"Newfoundland, Newfoundland dog",257:"Great Pyrenees",258:"Samoyed, Samoyede",259:"Pomeranian",260:"chow, chow chow",261:"keeshond",262:"Brabancon griffon",263:"Pembroke, Pembroke Welsh corgi",264:"Cardigan, Cardigan Welsh corgi",265:"toy poodle",266:"miniature poodle",267:"standard poodle",268:"Mexican hairless",269:"timber wolf, grey wolf, gray wolf, Canis lupus",270:"white wolf, Arctic wolf, Canis lupus tundrarum",271:"red wolf, maned wolf, Canis rufus, Canis niger",272:"coyote, prairie wolf, brush wolf, Canis latrans",273:"dingo, warrigal, warragal, Canis dingo",274:"dhole, Cuon alpinus",275:"African hunting dog, hyena dog, Cape hunting dog, Lycaon pictus",276:"hyena, hyaena",277:"red fox, Vulpes vulpes",278:"kit fox, Vulpes macrotis",279:"Arctic fox, white fox, Alopex lagopus",280:"grey fox, gray fox, Urocyon cinereoargenteus",281:"tabby, tabby cat",282:"tiger cat",283:"Persian cat",284:"Siamese cat, Siamese",285:"Egyptian cat",286:"cougar, puma, catamount, mountain lion, painter, panther, Felis concolor",287:"lynx, catamount",288:"leopard, Panthera pardus",289:"snow leopard, ounce, Panthera uncia",290:"jaguar, panther, Panthera onca, Felis onca",291:"lion, king of beasts, Panthera leo",292:"tiger, Panthera tigris",293:"cheetah, chetah, Acinonyx jubatus",294:"brown bear, bruin, Ursus arctos",295:"American black bear, black bear, Ursus americanus, Euarctos americanus",296:"ice bear, polar bear, Ursus Maritimus, Thalarctos maritimus",297:"sloth bear, Melursus ursinus, Ursus ursinus",298:"mongoose",299:"meerkat, mierkat",300:"tiger beetle",301:"ladybug, ladybeetle, lady beetle, ladybird, ladybird beetle",302:"ground beetle, carabid beetle",303:"long-horned beetle, longicorn, longicorn beetle",304:"leaf beetle, chrysomelid",305:"dung beetle",306:"rhinoceros beetle",307:"weevil",308:"fly",309:"bee",310:"ant, emmet, pismire",311:"grasshopper, hopper",312:"cricket",313:"walking stick, walkingstick, stick insect",314:"cockroach, roach",315:"mantis, mantid",316:"cicada, cicala",317:"leafhopper",318:"lacewing, lacewing fly",319:"dragonfly, darning needle, devil's darning needle, sewing needle, snake feeder, snake doctor, mosquito hawk, skeeter hawk",320:"damselfly",321:"admiral",322:"ringlet, ringlet butterfly",323:"monarch, monarch butterfly, milkweed butterfly, Danaus plexippus",324:"cabbage butterfly",325:"sulphur butterfly, sulfur butterfly",326:"lycaenid, lycaenid butterfly",327:"starfish, sea star",328:"sea urchin",329:"sea cucumber, holothurian",330:"wood rabbit, cottontail, cottontail rabbit",331:"hare",332:"Angora, Angora rabbit",333:"hamster",334:"porcupine, hedgehog",335:"fox squirrel, eastern fox squirrel, Sciurus niger",336:"marmot",337:"beaver",338:"guinea pig, Cavia cobaya",339:"sorrel",340:"zebra",341:"hog, pig, grunter, squealer, Sus scrofa",342:"wild boar, boar, Sus scrofa",343:"warthog",344:"hippopotamus, hippo, river horse, Hippopotamus amphibius",345:"ox",346:"water buffalo, water ox, Asiatic buffalo, Bubalus bubalis",347:"bison",348:"ram, tup",349:"bighorn, bighorn sheep, cimarron, Rocky Mountain bighorn, Rocky Mountain sheep, Ovis canadensis",350:"ibex, Capra ibex",351:"hartebeest",352:"impala, Aepyceros melampus",353:"gazelle",354:"Arabian camel, dromedary, Camelus dromedarius",355:"llama",356:"weasel",357:"mink",358:"polecat, fitch, foulmart, foumart, Mustela putorius",359:"black-footed ferret, ferret, Mustela nigripes",360:"otter",361:"skunk, polecat, wood pussy",362:"badger",363:"armadillo",364:"three-toed sloth, ai, Bradypus tridactylus",365:"orangutan, orang, orangutang, Pongo pygmaeus",366:"gorilla, Gorilla gorilla",367:"chimpanzee, chimp, Pan troglodytes",368:"gibbon, Hylobates lar",369:"siamang, Hylobates syndactylus, Symphalangus syndactylus",370:"guenon, guenon monkey",371:"patas, hussar monkey, Erythrocebus patas",372:"baboon",373:"macaque",374:"langur",375:"colobus, colobus monkey",376:"proboscis monkey, Nasalis larvatus",377:"marmoset",378:"capuchin, ringtail, Cebus capucinus",379:"howler monkey, howler",380:"titi, titi monkey",381:"spider monkey, Ateles geoffroyi",382:"squirrel monkey, Saimiri sciureus",383:"Madagascar cat, ring-tailed lemur, Lemur catta",384:"indri, indris, Indri indri, Indri brevicaudatus",385:"Indian elephant, Elephas maximus",386:"African elephant, Loxodonta africana",387:"lesser panda, red panda, panda, bear cat, cat bear, Ailurus fulgens",388:"giant panda, panda, panda bear, coon bear, Ailuropoda melanoleuca",389:"barracouta, snoek",390:"eel",391:"coho, cohoe, coho salmon, blue jack, silver salmon, Oncorhynchus kisutch",392:"rock beauty, Holocanthus tricolor",393:"anemone fish",394:"sturgeon",395:"gar, garfish, garpike, billfish, Lepisosteus osseus",396:"lionfish",397:"puffer, pufferfish, blowfish, globefish",398:"abacus",399:"abaya",400:"academic gown, academic robe, judge's robe",401:"accordion, piano accordion, squeeze box",402:"acoustic guitar",403:"aircraft carrier, carrier, flattop, attack aircraft carrier",404:"airliner",405:"airship, dirigible",406:"altar",407:"ambulance",408:"amphibian, amphibious vehicle",409:"analog clock",410:"apiary, bee house",411:"apron",412:"ashcan, trash can, garbage can, wastebin, ash bin, ash-bin, ashbin, dustbin, trash barrel, trash bin",413:"assault rifle, assault gun",414:"backpack, back pack, knapsack, packsack, rucksack, haversack",415:"bakery, bakeshop, bakehouse",416:"balance beam, beam",417:"balloon",418:"ballpoint, ballpoint pen, ballpen, Biro",419:"Band Aid",420:"banjo",421:"bannister, banister, balustrade, balusters, handrail",422:"barbell",423:"barber chair",424:"barbershop",425:"barn",426:"barometer",427:"barrel, cask",428:"barrow, garden cart, lawn cart, wheelbarrow",429:"baseball",430:"basketball",431:"bassinet",432:"bassoon",433:"bathing cap, swimming cap",434:"bath towel",435:"bathtub, bathing tub, bath, tub",436:"beach wagon, station wagon, wagon, estate car, beach waggon, station waggon, waggon",437:"beacon, lighthouse, beacon light, pharos",438:"beaker",439:"bearskin, busby, shako",440:"beer bottle",441:"beer glass",442:"bell cote, bell cot",443:"bib",444:"bicycle-built-for-two, tandem bicycle, tandem",445:"bikini, two-piece",446:"binder, ring-binder",447:"binoculars, field glasses, opera glasses",448:"birdhouse",449:"boathouse",450:"bobsled, bobsleigh, bob",451:"bolo tie, bolo, bola tie, bola",452:"bonnet, poke bonnet",453:"bookcase",454:"bookshop, bookstore, bookstall",455:"bottlecap",456:"bow",457:"bow tie, bow-tie, bowtie",458:"brass, memorial tablet, plaque",459:"brassiere, bra, bandeau",460:"breakwater, groin, groyne, mole, bulwark, seawall, jetty",461:"breastplate, aegis, egis",462:"broom",463:"bucket, pail",464:"buckle",465:"bulletproof vest",466:"bullet train, bullet",467:"butcher shop, meat market",468:"cab, hack, taxi, taxicab",469:"caldron, cauldron",470:"candle, taper, wax light",471:"cannon",472:"canoe",473:"can opener, tin opener",474:"cardigan",475:"car mirror",476:"carousel, carrousel, merry-go-round, roundabout, whirligig",477:"carpenter's kit, tool kit",478:"carton",479:"car wheel",480:"cash machine, cash dispenser, automated teller machine, automatic teller machine, automated teller, automatic teller, ATM",481:"cassette",482:"cassette player",483:"castle",484:"catamaran",485:"CD player",486:"cello, violoncello",487:"cellular telephone, cellular phone, cellphone, cell, mobile phone",488:"chain",489:"chainlink fence",490:"chain mail, ring mail, mail, chain armor, chain armour, ring armor, ring armour",491:"chain saw, chainsaw",492:"chest",493:"chiffonier, commode",494:"chime, bell, gong",495:"china cabinet, china closet",496:"Christmas stocking",497:"church, church building",498:"cinema, movie theater, movie theatre, movie house, picture palace",499:"cleaver, meat cleaver, chopper",500:"cliff dwelling",501:"cloak",502:"clog, geta, patten, sabot",503:"cocktail shaker",504:"coffee mug",505:"coffeepot",506:"coil, spiral, volute, whorl, helix",507:"combination lock",508:"computer keyboard, keypad",509:"confectionery, confectionary, candy store",510:"container ship, containership, container vessel",511:"convertible",512:"corkscrew, bottle screw",513:"cornet, horn, trumpet, trump",514:"cowboy boot",515:"cowboy hat, ten-gallon hat",516:"cradle",517:"crane",518:"crash helmet",519:"crate",520:"crib, cot",521:"Crock Pot",522:"croquet ball",523:"crutch",524:"cuirass",525:"dam, dike, dyke",526:"desk",527:"desktop computer",528:"dial telephone, dial phone",529:"diaper, nappy, napkin",530:"digital clock",531:"digital watch",532:"dining table, board",533:"dishrag, dishcloth",534:"dishwasher, dish washer, dishwashing machine",535:"disk brake, disc brake",536:"dock, dockage, docking facility",537:"dogsled, dog sled, dog sleigh",538:"dome",539:"doormat, welcome mat",540:"drilling platform, offshore rig",541:"drum, membranophone, tympan",542:"drumstick",543:"dumbbell",544:"Dutch oven",545:"electric fan, blower",546:"electric guitar",547:"electric locomotive",548:"entertainment center",549:"envelope",550:"espresso maker",551:"face powder",552:"feather boa, boa",553:"file, file cabinet, filing cabinet",554:"fireboat",555:"fire engine, fire truck",556:"fire screen, fireguard",557:"flagpole, flagstaff",558:"flute, transverse flute",559:"folding chair",560:"football helmet",561:"forklift",562:"fountain",563:"fountain pen",564:"four-poster",565:"freight car",566:"French horn, horn",567:"frying pan, frypan, skillet",568:"fur coat",569:"garbage truck, dustcart",570:"gasmask, respirator, gas helmet",571:"gas pump, gasoline pump, petrol pump, island dispenser",572:"goblet",573:"go-kart",574:"golf ball",575:"golfcart, golf cart",576:"gondola",577:"gong, tam-tam",578:"gown",579:"grand piano, grand",580:"greenhouse, nursery, glasshouse",581:"grille, radiator grille",582:"grocery store, grocery, food market, market",583:"guillotine",584:"hair slide",585:"hair spray",586:"half track",587:"hammer",588:"hamper",589:"hand blower, blow dryer, blow drier, hair dryer, hair drier",590:"hand-held computer, hand-held microcomputer",591:"handkerchief, hankie, hanky, hankey",592:"hard disc, hard disk, fixed disk",593:"harmonica, mouth organ, harp, mouth harp",594:"harp",595:"harvester, reaper",596:"hatchet",597:"holster",598:"home theater, home theatre",599:"honeycomb",600:"hook, claw",601:"hoopskirt, crinoline",602:"horizontal bar, high bar",603:"horse cart, horse-cart",604:"hourglass",605:"iPod",606:"iron, smoothing iron",607:"jack-o'-lantern",608:"jean, blue jean, denim",609:"jeep, landrover",610:"jersey, T-shirt, tee shirt",611:"jigsaw puzzle",612:"jinrikisha, ricksha, rickshaw",613:"joystick",614:"kimono",615:"knee pad",616:"knot",617:"lab coat, laboratory coat",618:"ladle",619:"lampshade, lamp shade",620:"laptop, laptop computer",621:"lawn mower, mower",622:"lens cap, lens cover",623:"letter opener, paper knife, paperknife",624:"library",625:"lifeboat",626:"lighter, light, igniter, ignitor",627:"limousine, limo",628:"liner, ocean liner",629:"lipstick, lip rouge",630:"Loafer",631:"lotion",632:"loudspeaker, speaker, speaker unit, loudspeaker system, speaker system",633:"loupe, jeweler's loupe",634:"lumbermill, sawmill",635:"magnetic compass",636:"mailbag, postbag",637:"mailbox, letter box",638:"maillot",639:"maillot, tank suit",640:"manhole cover",641:"maraca",642:"marimba, xylophone",643:"mask",644:"matchstick",645:"maypole",646:"maze, labyrinth",647:"measuring cup",648:"medicine chest, medicine cabinet",649:"megalith, megalithic structure",650:"microphone, mike",651:"microwave, microwave oven",652:"military uniform",653:"milk can",654:"minibus",655:"miniskirt, mini",656:"minivan",657:"missile",658:"mitten",659:"mixing bowl",660:"mobile home, manufactured home",661:"Model T",662:"modem",663:"monastery",664:"monitor",665:"moped",666:"mortar",667:"mortarboard",668:"mosque",669:"mosquito net",670:"motor scooter, scooter",671:"mountain bike, all-terrain bike, off-roader",672:"mountain tent",673:"mouse, computer mouse",674:"mousetrap",675:"moving van",676:"muzzle",677:"nail",678:"neck brace",679:"necklace",680:"nipple",681:"notebook, notebook computer",682:"obelisk",683:"oboe, hautboy, hautbois",684:"ocarina, sweet potato",685:"odometer, hodometer, mileometer, milometer",686:"oil filter",687:"organ, pipe organ",688:"oscilloscope, scope, cathode-ray oscilloscope, CRO",689:"overskirt",690:"oxcart",691:"oxygen mask",692:"packet",693:"paddle, boat paddle",694:"paddlewheel, paddle wheel",695:"padlock",696:"paintbrush",697:"pajama, pyjama, pj's, jammies",698:"palace",699:"panpipe, pandean pipe, syrinx",700:"paper towel",701:"parachute, chute",702:"parallel bars, bars",703:"park bench",704:"parking meter",705:"passenger car, coach, carriage",706:"patio, terrace",707:"pay-phone, pay-station",708:"pedestal, plinth, footstall",709:"pencil box, pencil case",710:"pencil sharpener",711:"perfume, essence",712:"Petri dish",713:"photocopier",714:"pick, plectrum, plectron",715:"pickelhaube",716:"picket fence, paling",717:"pickup, pickup truck",718:"pier",719:"piggy bank, penny bank",720:"pill bottle",721:"pillow",722:"ping-pong ball",723:"pinwheel",724:"pirate, pirate ship",725:"pitcher, ewer",726:"plane, carpenter's plane, woodworking plane",727:"planetarium",728:"plastic bag",729:"plate rack",730:"plow, plough",731:"plunger, plumber's helper",732:"Polaroid camera, Polaroid Land camera",733:"pole",734:"police van, police wagon, paddy wagon, patrol wagon, wagon, black Maria",735:"poncho",736:"pool table, billiard table, snooker table",737:"pop bottle, soda bottle",738:"pot, flowerpot",739:"potter's wheel",740:"power drill",741:"prayer rug, prayer mat",742:"printer",743:"prison, prison house",744:"projectile, missile",745:"projector",746:"puck, hockey puck",747:"punching bag, punch bag, punching ball, punchball",748:"purse",749:"quill, quill pen",750:"quilt, comforter, comfort, puff",751:"racer, race car, racing car",752:"racket, racquet",753:"radiator",754:"radio, wireless",755:"radio telescope, radio reflector",756:"rain barrel",757:"recreational vehicle, RV, R.V.",758:"reel",759:"reflex camera",760:"refrigerator, icebox",761:"remote control, remote",762:"restaurant, eating house, eating place, eatery",763:"revolver, six-gun, six-shooter",764:"rifle",765:"rocking chair, rocker",766:"rotisserie",767:"rubber eraser, rubber, pencil eraser",768:"rugby ball",769:"rule, ruler",770:"running shoe",771:"safe",772:"safety pin",773:"saltshaker, salt shaker",774:"sandal",775:"sarong",776:"sax, saxophone",777:"scabbard",778:"scale, weighing machine",779:"school bus",780:"schooner",781:"scoreboard",782:"screen, CRT screen",783:"screw",784:"screwdriver",785:"seat belt, seatbelt",786:"sewing machine",787:"shield, buckler",788:"shoe shop, shoe-shop, shoe store",789:"shoji",790:"shopping basket",791:"shopping cart",792:"shovel",793:"shower cap",794:"shower curtain",795:"ski",796:"ski mask",797:"sleeping bag",798:"slide rule, slipstick",799:"sliding door",800:"slot, one-armed bandit",801:"snorkel",802:"snowmobile",803:"snowplow, snowplough",804:"soap dispenser",805:"soccer ball",806:"sock",807:"solar dish, solar collector, solar furnace",808:"sombrero",809:"soup bowl",810:"space bar",811:"space heater",812:"space shuttle",813:"spatula",814:"speedboat",815:"spider web, spider's web",816:"spindle",817:"sports car, sport car",818:"spotlight, spot",819:"stage",820:"steam locomotive",821:"steel arch bridge",822:"steel drum",823:"stethoscope",824:"stole",825:"stone wall",826:"stopwatch, stop watch",827:"stove",828:"strainer",829:"streetcar, tram, tramcar, trolley, trolley car",830:"stretcher",831:"studio couch, day bed",832:"stupa, tope",833:"submarine, pigboat, sub, U-boat",834:"suit, suit of clothes",835:"sundial",836:"sunglass",837:"sunglasses, dark glasses, shades",838:"sunscreen, sunblock, sun blocker",839:"suspension bridge",840:"swab, swob, mop",841:"sweatshirt",842:"swimming trunks, bathing trunks",843:"swing",844:"switch, electric switch, electrical switch",845:"syringe",846:"table lamp",847:"tank, army tank, armored combat vehicle, armoured combat vehicle",848:"tape player",849:"teapot",850:"teddy, teddy bear",851:"television, television system",852:"tennis ball",853:"thatch, thatched roof",854:"theater curtain, theatre curtain",855:"thimble",856:"thresher, thrasher, threshing machine",857:"throne",858:"tile roof",859:"toaster",860:"tobacco shop, tobacconist shop, tobacconist",861:"toilet seat",862:"torch",863:"totem pole",864:"tow truck, tow car, wrecker",865:"toyshop",866:"tractor",867:"trailer truck, tractor trailer, trucking rig, rig, articulated lorry, semi",868:"tray",869:"trench coat",870:"tricycle, trike, velocipede",871:"trimaran",872:"tripod",873:"triumphal arch",874:"trolleybus, trolley coach, trackless trolley",875:"trombone",876:"tub, vat",877:"turnstile",878:"typewriter keyboard",879:"umbrella",880:"unicycle, monocycle",881:"upright, upright piano",882:"vacuum, vacuum cleaner",883:"vase",884:"vault",885:"velvet",886:"vending machine",887:"vestment",888:"viaduct",889:"violin, fiddle",890:"volleyball",891:"waffle iron",892:"wall clock",893:"wallet, billfold, notecase, pocketbook",894:"wardrobe, closet, press",895:"warplane, military plane",896:"washbasin, handbasin, washbowl, lavabo, wash-hand basin",897:"washer, automatic washer, washing machine",898:"water bottle",899:"water jug",900:"water tower",901:"whiskey jug",902:"whistle",903:"wig",904:"window screen",905:"window shade",906:"Windsor tie",907:"wine bottle",908:"wing",909:"wok",910:"wooden spoon",911:"wool, woolen, woollen",912:"worm fence, snake fence, snake-rail fence, Virginia fence",913:"wreck",914:"yawl",915:"yurt",916:"web site, website, internet site, site",917:"comic book",918:"crossword puzzle, crossword",919:"street sign",920:"traffic light, traffic signal, stoplight",921:"book jacket, dust cover, dust jacket, dust wrapper",922:"menu",923:"plate",924:"guacamole",925:"consomme",926:"hot pot, hotpot",927:"trifle",928:"ice cream, icecream",929:"ice lolly, lolly, lollipop, popsicle",930:"French loaf",931:"bagel, beigel",932:"pretzel",933:"cheeseburger",934:"hotdog, hot dog, red hot",935:"mashed potato",936:"head cabbage",937:"broccoli",938:"cauliflower",939:"zucchini, courgette",940:"spaghetti squash",941:"acorn squash",942:"butternut squash",943:"cucumber, cuke",944:"artichoke, globe artichoke",945:"bell pepper",946:"cardoon",947:"mushroom",948:"Granny Smith",949:"strawberry",950:"orange",951:"lemon",952:"fig",953:"pineapple, ananas",954:"banana",955:"jackfruit, jak, jack",956:"custard apple",957:"pomegranate",958:"hay",959:"carbonara",960:"chocolate sauce, chocolate syrup",961:"dough",962:"meat loaf, meatloaf",963:"pizza, pizza pie",964:"potpie",965:"burrito",966:"red wine",967:"espresso",968:"cup",969:"eggnog",970:"alp",971:"bubble",972:"cliff, drop, drop-off",973:"coral reef",974:"geyser",975:"lakeside, lakeshore",976:"promontory, headland, head, foreland",977:"sandbar, sand bar",978:"seashore, coast, seacoast, sea-coast",979:"valley, vale",980:"volcano",981:"ballplayer, baseball player",982:"groom, bridegroom",983:"scuba diver",984:"rapeseed",985:"daisy",986:"yellow lady's slipper, yellow lady-slipper, Cypripedium calceolus, Cypripedium parviflorum",987:"corn",988:"acorn",989:"hip, rose hip, rosehip",990:"buckeye, horse chestnut, conker",991:"coral fungus",992:"agaric",993:"gyromitra",994:"stinkhorn, carrion fungus",995:"earthstar",996:"hen-of-the-woods, hen of the woods, Polyporus frondosus, Grifola frondosa",997:"bolete",998:"ear, spike, capitulum",999:"toilet tissue, toilet paper, bathroom tissue"},JI=224,QI={"1.00":"module_apply_default/MobilenetV1/Logits/global_pool","2.00":"module_apply_default/MobilenetV2/Logits/AvgPool"},ej={"1.00":{.25:{url:"https://tfhub.dev/google/imagenet/mobilenet_v1_025_224/classification/1",inputRange:[0,1]},"0.50":{url:"https://tfhub.dev/google/imagenet/mobilenet_v1_050_224/classification/1",inputRange:[0,1]},.75:{url:"https://tfhub.dev/google/imagenet/mobilenet_v1_075_224/classification/1",inputRange:[0,1]},"1.00":{url:"https://tfhub.dev/google/imagenet/mobilenet_v1_100_224/classification/1",inputRange:[0,1]}},"2.00":{"0.50":{url:"https://tfhub.dev/google/imagenet/mobilenet_v2_050_224/classification/2",inputRange:[0,1]},.75:{url:"https://tfhub.dev/google/imagenet/mobilenet_v2_075_224/classification/2",inputRange:[0,1]},"1.00":{url:"https://tfhub.dev/google/imagenet/mobilenet_v2_100_224/classification/2",inputRange:[0,1]}}};var tj=function(){function e(e,t,n,r,a){void 0===r&&(r=-1),void 0===a&&(a=1),this.version=e,this.alpha=t,this.modelUrl=n,this.inputMin=r,this.inputMax=a,this.normalizationConstant=(a-r)/255}return e.prototype.load=function(){return XI(this,void 0,void 0,(function(){var e,t,n,r,a=this;return YI(this,(function(s){switch(s.label){case 0:return this.modelUrl?(e=this,[4,Rl(this.modelUrl)]):[3,2];case 1:return e.model=s.sent(),[3,4];case 2:return t=ej[this.version][this.alpha].url,n=this,[4,Rl(t,{fromTFHub:!0})];case 3:n.model=s.sent(),s.label=4;case 4:return[4,(r=Object(x.tidy)((function(){return a.model.predict(Object(x.zeros)([1,JI,JI,3]))}))).data()];case 5:return s.sent(),r.dispose(),[2]}}))}))},e.prototype.infer=function(e,t){var n=this;return void 0===t&&(t=!1),Object(x.tidy)((function(){e instanceof x.Tensor||(e=x.browser.fromPixels(e));var r=Object(x.add)(Object(x.mul)(Object(x.cast)(e,"float32"),n.normalizationConstant),n.inputMin),a=r;e.shape[0]===JI&&e.shape[1]===JI||(a=x.image.resizeBilinear(r,[JI,JI],!0));var s,i=Object(x.reshape)(a,[-1,JI,JI,3]);if(t){var o=QI[n.version],u=n.model.execute(i,o);s=Object(x.squeeze)(u,[1,2])}else{var c=n.model.predict(i);s=Object(x.slice)(c,[0,1],[-1,1e3])}return s}))},e.prototype.classify=function(e,t){return void 0===t&&(t=3),XI(this,void 0,void 0,(function(){var n,r;return YI(this,(function(a){switch(a.label){case 0:return[4,nj(n=this.infer(e),t)];case 1:return r=a.sent(),n.dispose(),[2,r]}}))}))},e}();function nj(e,t){return XI(this,void 0,void 0,(function(){var n,r,a,s,i,o,u;return YI(this,(function(c){switch(c.label){case 0:return[4,(n=Object(x.softmax)(e)).data()];case 1:for(r=c.sent(),n.dispose(),a=[],u=0;u<r.length;u++)a.push({value:r[u],index:u});for(a.sort((function(e,t){return t.value-e.value})),s=new Float32Array(t),i=new Int32Array(t),u=0;u<t;u++)s[u]=a[u].value,i[u]=a[u].index;for(o=[],u=0;u<i.length;u++)o.push({className:ZI[i[u]],probability:s[u]});return[2,o]}}))}))}let rj;async function aj(){rj=function(e){return void 0===e&&(e={version:1,alpha:1}),XI(this,void 0,void 0,(function(){var t,n,r,a,s,i,o;return YI(this,(function(u){switch(u.label){case 0:if(null==x)throw new Error("Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this model.");if(r=e.version.toFixed(2),a=e.alpha?e.alpha.toFixed(2):"",s=-1,i=1,null==e.modelUrl){if(!(r in ej))throw new Error("Invalid version of MobileNet. Valid versions are: "+Object.keys(ej));if(!(a in ej[r]))throw new Error("MobileNet constructed with invalid alpha "+e.alpha+". Valid multipliers for this version are: "+Object.keys(ej[r])+".");t=ej[r][a].inputRange,s=t[0],i=t[1]}return null!=e.inputRange&&(n=e.inputRange,s=n[0],i=n[1]),[4,(o=new tj(r,a,e.modelUrl,s,i)).load()];case 1:return u.sent(),[2,o]}}))}))}(),await rj}async function sj(e,t,n){const r=await fetch(e),a=await r.blob(),s=await createImageBitmap(a),i=new OffscreenCanvas(t,n),o=i.getContext("2d");if(!o)throw new Error("Couldn't create image");return o.drawImage(s,0,0),i}async function ij(e,t,n){const r="string"==typeof e?await sj(e,t,n):e;rj||await aj();const a=await rj,[s]=await a.classify(r);return s.className.split(",")[0]}l(Object.keys(t).reduce((function(e,n){return"__esModule"==n||(e[n]=t[n]),e}),{}))}]);
//# sourceMappingURL=f984049c454681137d52.worker.js.map